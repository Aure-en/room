[{"/home/aureen/the_odin_project/room_homepage/src/index.js":"1","/home/aureen/the_odin_project/room_homepage/src/App.js":"2","/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js":"3","/home/aureen/the_odin_project/room_homepage/src/components/Nav.js":"4","/home/aureen/the_odin_project/room_homepage/src/routes/Home.js":"5","/home/aureen/the_odin_project/room_homepage/src/routes/About.js":"6","/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js":"7","/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js":"8","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js":"9","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js":"10","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js":"11","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js":"12","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js":"13","/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js":"14","/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js":"15","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js":"16","/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js":"17","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.js":"18","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.js":"19","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.js":"20","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.js":"21","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ShopItemPreview.js":"22","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImagesPreview.js":"23","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImageMagnifier.js":"24","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.js":"25","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.js":"26","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.js":"27","/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.js":"28","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Confirmation.js":"29","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/SignIn.js":"30","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Entry.js":"31","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/SignUp.js":"32","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignUp.js":"33","/home/aureen/the_odin_project/room_homepage/src/contexts/FavoriteContext.js":"34","/home/aureen/the_odin_project/room_homepage/src/routes/types/PublicRoute.js":"35","/home/aureen/the_odin_project/room_homepage/src/routes/types/PrivateRoute.js":"36","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartPreview.js":"37","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/AccessSettings.js":"38","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Favorite.js":"39","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Settings.js":"40","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Payment.js":"41","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/AccountNav.js":"42","/home/aureen/the_odin_project/room_homepage/src/hooks/useUserSettings.js":"43","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Orders.js":"44","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Addresses.js":"45","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/Order.js":"46","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Shop.js":"47","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Account.js":"48","/home/aureen/the_odin_project/room_homepage/src/routes/shop/orders/Tracking.js":"49"},{"size":196,"mtime":1610818568794,"results":"50","hashOfConfig":"51"},{"size":1143,"mtime":1610839458511,"results":"52","hashOfConfig":"51"},{"size":6382,"mtime":1610818568794,"results":"53","hashOfConfig":"51"},{"size":3666,"mtime":1610818568794,"results":"54","hashOfConfig":"51"},{"size":1920,"mtime":1610818568794,"results":"55","hashOfConfig":"51"},{"size":3008,"mtime":1610818568794,"results":"56","hashOfConfig":"51"},{"size":6757,"mtime":1610818568794,"results":"57","hashOfConfig":"51"},{"size":638,"mtime":1610818568794,"results":"58","hashOfConfig":"51"},{"size":444,"mtime":1610818568794,"results":"59","hashOfConfig":"51"},{"size":204,"mtime":1610818568794,"results":"60","hashOfConfig":"51"},{"size":14693,"mtime":1610818568794,"results":"61","hashOfConfig":"51"},{"size":1484,"mtime":1610818568794,"results":"62","hashOfConfig":"51"},{"size":1396,"mtime":1610819898974,"results":"63","hashOfConfig":"51"},{"size":16079,"mtime":1610820550822,"results":"64","hashOfConfig":"51"},{"size":10449,"mtime":1610902091124,"results":"65","hashOfConfig":"51"},{"size":2307,"mtime":1610818568794,"results":"66","hashOfConfig":"51"},{"size":339,"mtime":1610818568794,"results":"67","hashOfConfig":"51"},{"size":3200,"mtime":1610898251444,"results":"68","hashOfConfig":"51"},{"size":4696,"mtime":1610818568794,"results":"69","hashOfConfig":"51"},{"size":6148,"mtime":1610818568794,"results":"70","hashOfConfig":"51"},{"size":3249,"mtime":1610818568794,"results":"71","hashOfConfig":"51"},{"size":2346,"mtime":1610818568794,"results":"72","hashOfConfig":"51"},{"size":5362,"mtime":1610818568794,"results":"73","hashOfConfig":"51"},{"size":1651,"mtime":1610897949200,"results":"74","hashOfConfig":"51"},{"size":10097,"mtime":1610820306758,"results":"75","hashOfConfig":"51"},{"size":11202,"mtime":1610820259382,"results":"76","hashOfConfig":"51"},{"size":11170,"mtime":1610827784150,"results":"77","hashOfConfig":"51"},{"size":3392,"mtime":1610818568794,"results":"78","hashOfConfig":"51"},{"size":4118,"mtime":1610820241674,"results":"79","hashOfConfig":"51"},{"size":4541,"mtime":1610818568794,"results":"80","hashOfConfig":"51"},{"size":2211,"mtime":1610898170184,"results":"81","hashOfConfig":"51"},{"size":4985,"mtime":1610818568794,"results":"82","hashOfConfig":"51"},{"size":1911,"mtime":1610818568794,"results":"83","hashOfConfig":"51"},{"size":1767,"mtime":1610818568794,"results":"84","hashOfConfig":"51"},{"size":517,"mtime":1610818568794,"results":"85","hashOfConfig":"51"},{"size":533,"mtime":1610818568794,"results":"86","hashOfConfig":"51"},{"size":1911,"mtime":1610818568794,"results":"87","hashOfConfig":"51"},{"size":1818,"mtime":1610840472302,"results":"88","hashOfConfig":"51"},{"size":2865,"mtime":1610820589682,"results":"89","hashOfConfig":"51"},{"size":6160,"mtime":1610821235202,"results":"90","hashOfConfig":"51"},{"size":12141,"mtime":1610897982988,"results":"91","hashOfConfig":"51"},{"size":1512,"mtime":1610821594082,"results":"92","hashOfConfig":"51"},{"size":3625,"mtime":1610818568794,"results":"93","hashOfConfig":"51"},{"size":941,"mtime":1610822172838,"results":"94","hashOfConfig":"51"},{"size":16908,"mtime":1610897340990,"results":"95","hashOfConfig":"51"},{"size":3941,"mtime":1610898295540,"results":"96","hashOfConfig":"51"},{"size":1918,"mtime":1610901176584,"results":"97","hashOfConfig":"51"},{"size":1552,"mtime":1610825230504,"results":"98","hashOfConfig":"51"},{"size":3592,"mtime":1610902581372,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1yklksh",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"102"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"102"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aureen/the_odin_project/room_homepage/src/index.js",[],["218","219"],"/home/aureen/the_odin_project/room_homepage/src/App.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Home.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/About.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js",[],"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js",[],"/home/aureen/the_odin_project/room_homepage/src/utils/utils.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js",["220","221"],"import React, { useState } from 'react';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useStorage } from '../../hooks/useStorage';\nimport styled from 'styled-components';\n\nconst Form = styled.form``;\nconst Label = styled.label``;\nconst Field = styled.div`\n  margin: 2rem 0;\n`;\nconst Input = styled.input``;\nconst TextArea = styled.textarea``;\nconst HandleField = styled.button``;\nconst SubmitBtn = styled.button``;\nconst Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 2rem;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n`;\n\nfunction AddShopItem() {\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({\n    depth: 0,\n    height: 0,\n    width: 0,\n  });\n  const [materials, setMaterials] = useState([''])\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState(['']);\n  const [colors, setColors] = useState([\n    {\n      description: '',\n      type: '',\n      value: '#000',\n    },\n  ]);\n  const [additional, setAdditional] = useState([\n    {\n      type: '',\n      information: '',\n    }\n  ]);\n  const [options, setOptions] = useState([{\n    type: '',\n    options: [{ option: '', price: ''}],\n  }])\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { createItem, addItem } = useFirestore();\n  const { uploadItemImage } = useStorage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const item = await createItem();\n    const itemId = item.id;\n\n    // Upload images in the storage and get their urls.\n    const imagesUrls = [];\n    for (let image of images) {\n      const imageUrl = await uploadItemImage(itemId, image);\n      imagesUrls.push(imageUrl);\n    }\n\n    // Format additional informations and options\n    // If the fields are empty, they are ignored.\n    const formattedAdditional = {};\n    for (let information of additional) {\n      if (information.type !== '' && information.information !== '') {\n        formattedAdditional[information.type] = information.information;\n      }\n    }\n\n    // Remove empty fields\n    const formattedMaterials = [...materials].filter(material => material !== '');\n    const formattedCategories = [...categories].filter(category => category !== '');\n\n    const formattedOptions = {};\n    for (let option of options) {\n      if (option.type !== '' && option.options.option !== '' && option.options.price !== '') {\n        formattedOptions[option.type] = [...option.options];\n      }\n    }\n\n    // Adds the shop item information in the firestore.\n    addItem(\n      itemId,\n      name,\n      price,\n      dimensions,\n      imagesUrls,\n      description,\n      colors,\n      formattedAdditional,\n      formattedOptions,\n      formattedMaterials,\n      formattedCategories,\n    )\n  };\n\n  const addImages = (e) => {\n    e.preventDefault();\n    if (e.target.files.length === 0) return;\n    setImages(e.target.files);\n\n    const preview = [];\n    for (let file of e.target.files) {\n      preview.push(URL.createObjectURL(file));\n    }\n    setImagesPreview(preview);\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label>Name</Label>\n          <Input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <Label>Price</Label>\n          <Input\n            type='number'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <div>Dimensions</div>\n          <Label>Depth</Label>\n          <Input\n            type='number'\n            value={dimensions.depth}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, depth: +e.target.value })\n            }\n          />\n\n          <Label>Height</Label>\n          <Input\n            type='number'\n            value={dimensions.height}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, height: +e.target.value })\n            }\n          />\n\n          <Label>Width</Label>\n          <Input\n            type='text'\n            value={dimensions.width}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, width: +e.target.value })\n            }\n          />\n        </Field>\n\n        <Field>\n          <div>Materials</div>\n\n          {materials.map((material, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={material}\n                  onChange={(e) =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials[index] = e.target.value;\n                      return materials;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials.splice(index, 1);\n                      return materials;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setMaterials([...materials, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <Label>Description</Label>\n          <TextArea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <div>Colors</div>\n\n          {colors.map((color, index) => {\n            return (\n              <div>\n                <Label>Description</Label>\n                <Input\n                  type='text'\n                  value={color.description}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].description = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={color.type}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].type = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Value</Label>\n                <Input\n                  type='color'\n                  value={color.value}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].value = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors.splice(index, 1);\n                      return colors;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setColors([...colors, { description: '', type: '', value: '#000' }])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Categories</div>\n\n          {categories.map((category, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={category}\n                  onChange={(e) =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories[index] = e.target.value;\n                      return categories;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories.splice(index, 1);\n                      return categories;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setCategories([...categories, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Options</div>\n\n          {options.map((option, indexOption) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={option.type}\n                  onChange={(e) =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options[indexOption].type = e.target.value;\n                      return options;\n                    })\n                  }\n                />\n\n                <Field>\n                  <Label>Options</Label>\n\n                  {option.options.map((choice, indexChoice) => {\n                    return (\n                      <div>\n                        <Label>Option</Label>\n                        <Input\n                          type='text'\n                          value={choice.option}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].option = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                        <Label>Price</Label>\n                        <Input\n                          type='number'\n                          value={choice.price}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].price = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                      <HandleField\n                        type='button'\n                        onClick={() => {\n                          const newOptions = [...options];\n                          newOptions[indexOption].options.splice(indexChoice, 1);\n                          setOptions(newOptions)\n                        }}\n                      >\n                        Remove Choice\n                      </HandleField>\n                      </div>\n                    )\n                  })}\n\n            <HandleField\n              type='button'\n              onClick={() => {\n                const newOptions = [...options];\n                newOptions[indexOption].options = [...options[indexOption].options, { option: '', price : ''}];\n                setOptions(newOptions)\n              }}\n            >\n              Add Choice\n            </HandleField>\n          </Field>\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options.splice(indexOption, 1);\n                      return options;\n                    })\n                  }\n                >\n                  Remove Option\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setOptions([...options, { type: '', options: ['']}])\n            }\n          >\n            Add Option\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Additional</div>\n\n          {additional.map((add, index) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={add.type}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].type = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <Label>Information</Label>\n                <Input\n                  type='text'\n                  value={add.information}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].information = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional.splice(index, 1);\n                      return additional;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setAdditional([...additional, { type: '', information: ''}])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <input\n            type='file'\n            id='avatar'\n            name='avatar'\n            multiple\n            onChange={addImages}\n          />\n\n          <Preview>\n          {imagesPreview.map(image => {\n            return (\n              <Image src={image} alt='preview'/>\n            )\n          })}\n        </Preview>\n        </Field>\n\n\n      <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddShopItem;\n","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js",["222"],"import React, { useState, useEffect } from 'react'\nimport ShopItemPreview from '../../components/shop/items/ShopItemPreview';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useFavorite } from '../../contexts/FavoriteContext';\nimport styled from 'styled-components'\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  max-width: 80%;\n  grid-gap: 3vw;\n`\n\nconst Shop = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5rem;\n`;\n\nfunction Category({ match }) {\n\n  const [items, setItems] = useState([])\n  const { getCategoryItems } = useFirestore();\n  const { favorites } = useFavorite();\n\n  // Loads items\n  useEffect(() => {\n    (async () => {\n      const itemsList = await getCategoryItems(decodeURIComponent(match.params.category));\n      setItems(itemsList);\n    })();\n  }, [match])\n\n  return (\n    <div>\n      <Shop>\n        <ShopList>\n        {\n          items.map(item => {\n            return (\n              <li key={item.id}>\n                <ShopItemPreview \n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                  isFavorite={favorites.includes(item.id)}\n                />\n              </li>\n            )\n          })\n        }\n        </ShopList>\n      </Shop>\n    </div>\n  )\n}\n\nexport default Category\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js",["223"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useFavorite } from '../../contexts/FavoriteContext';\nimport { formatNavLink } from '../../utils/utils';\nimport ImagesPreview from '../../components/shop/items/ImagesPreview';\nimport { CSSTransition } from 'react-transition-group';\n\n// Icons\nimport { ReactComponent as AngleRight } from '../../assets/icons/icon-small-arrow.svg';\nimport { ReactComponent as Plus } from '../../assets/icons/icon-plus.svg';\nimport { ReactComponent as Minus } from '../../assets/icons/icon-minus.svg';\nimport { ReactComponent as Heart } from '../../assets/icons/icon-heart.svg';\nimport { ReactComponent as HeartFilled } from '../../assets/icons/icon-heart-filled.svg';\nimport iconX from '../../assets/icons/icon-x.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 15%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 70%)', // Bright Grey\n  text: 'hsl(0, 0%, 35%)',\n  button: 'hsl(0, 0%, 100%)', // White\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n\nconst Center = styled.section`\n  max-width: 1200px;\n`;\n\n// Category Links above the item preview\nconst Category = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst CategoryLink = styled.span`\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nconst ArrowIcon = styled.span`\n  display: inline-block;\n  margin: 2px 0.5rem 0 0.5rem;\n  color: ${colors.primary};\n`;\n\n// Informations about the item\nconst Informations = styled.div`\n  display: flex;\n`;\n\nconst Description = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  text-align: justify;\n  color: ${colors.text};\n  line-height: 1.25rem;\n`;\n\nconst Details = styled.div`\n  margin-left: 5rem;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst Name = styled.h2`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 1.25rem;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\n// Selection and adding to basket\n\nconst Selection = styled.form`\n  border-top: 1px solid ${colors.tertiary};\n  border-bottom: 1px solid ${colors.tertiary};\n  padding: 0.5rem 0;\n\n  & > * {\n    margin: 1rem 0;\n  }\n`;\n\nconst Choice = styled.span`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n`;\n\nconst TextLabel = styled.span`\n  display: inline-block;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Checkbox = styled.input`\n  opacity: 0;\n  appearance: none;\n`;\n\nconst SubmitBtn = styled.button`\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 0.825rem;\n  padding: 0.75rem 1.25rem;\n  color: ${colors.button};\n  background: ${colors.primary};\n  transition: all 0.15s linear;\n  cursor: pointer;\n  width: 10.5rem;\n\n  &:hover {\n    letter-spacing: 1.5px;\n  }\n`;\n\n// Select the item's color\nconst ColorList = styled.ul`\n  display: flex;\n`;\n\nconst ColorLabel = styled.label`\n  display: inline-block;\n  width: 2rem;\n  height: 2rem;\n  background-color: ${(props) => props.value};\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.primary : colors.tertiary)};\n  cursor: pointer;\n  margin-right: 0.5rem;\n`;\n\n// Select an option\nconst Options = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr auto);\n`;\n\nconst OptionsField = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OptionLabel = styled.label`\n  cursor: pointer;\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  color: ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  outline: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : 'transparent')};\n  padding: 0.5rem 1rem;\n  margin-left: 1rem;\n`;\n\n// Select a quantity\nconst Quantity = styled.input`\n  font-family: 'Source Sans Pro', sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n  margin-left: 1rem;\n`;\n\n// Additional informations dropdown\n\nconst Additional = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n`;\n\nconst AdditionalBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n  font-size: 0.95rem;\n  cursor: pointer;\n  padding: 0;\n  padding-bottom: 1.5rem;\n`;\n\nconst Li = styled.li`\n  padding-left: 1rem;\n  text-indent: -1rem;\n  line-height: 1.25rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-bottom: -5px;\n    background: url(${iconX});\n  }\n`;\n\nconst AdditionalLabel = styled.span`\n  font-weight: 600;\n  text-transform: capitalize;\n`;\n\nconst AdditionalInfo = styled.span`\n  color: ${colors.text};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1.5fr;\n  margin: 0 1.5rem;\n`;\n\nconst DropdownColumn = styled.div`\n  padding-bottom: 1.5rem;\n\n  & > *:first-child {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 168px; // Size of button\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Icon = styled.span`\n  color: ${colors.primary};\n  cursor: pointer;\n`;\n\nfunction ItemDetails({ match }) {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [currentColor, setCurrentColor] = useState('');\n  const [currentOption, setCurrentOption] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  const [areDetailsOpen, setAreDetailsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const { getItem, addToCart } = useFirestore();\n  const { currentUser, signInAnonymously } = useAuth();\n  const { favorites, addFavorite, deleteFavorite } = useFavorite();\n\n  const handleFavorite = async (id) => {\n    let userId = currentUser && currentUser.uid;\n\n    if (!currentUser) {\n      const user = await signInAnonymously();\n      userId = user.user.uid;\n    }\n    favorites.includes(id) ? deleteFavorite(userId, id) : addFavorite(userId, id);\n  }\n\n  // Fetch the item data and store it in the state\n  useEffect(() => {\n    (async () => {\n      const itemId = match.params.itemId;\n      const item = await getItem(itemId);\n      setItem(item);\n      setLoading(false);\n    })();\n  }, []);\n\n  // Sets the default color and the default option (if there are any)\n  useEffect(() => {\n    if (Object.keys(item).length === 0) return;\n    setCurrentColor(item.colors[0].description);\n\n    if (Object.keys(item.options).length !== 0) {\n      const options = [];\n      for (let key of Object.keys(item.options)) {\n        options.push({ [key]: item.options[key][0].option });\n      }\n      setCurrentOption(options);\n    }\n  }, [item]);\n\n  const handleAddToCart = async (e) => {\n    e.preventDefault();\n    setMessage('');\n\n    // If the user is not signed in, we sign him up anonymously to save his cart and allow him to order.\n\n    let userId = currentUser && currentUser.uid;\n\n    if (!currentUser) {\n      const user = await signInAnonymously();\n      console.log(user);\n      userId = user.user.uid;\n    }\n\n    try {\n      await addToCart(\n        userId,\n        item.id,\n        item.name,\n        item.images[0],\n        currentColor,\n        currentOption,\n        quantity,\n        item.type,\n        item.price\n      );\n      setMessage(`${item.name} in ${currentColor} was added to your cart.`);\n    } catch (e) {\n      setMessage(\n        'Sorry, there was an error: we were not able to add the item to your cart.'\n      );\n    }\n  };\n\n  return (\n    <Container>\n      {!loading && (\n        <Center>\n          <Category>\n            <Link to='/'>\n              <CategoryLink>Home</CategoryLink>\n            </Link>\n            <ArrowIcon>\n              <AngleRight />\n            </ArrowIcon>\n            <Link to='/shop'>\n              <CategoryLink>Shop</CategoryLink>\n            </Link>\n\n            {item.categories.map((category) => {\n              return (\n                <React.Fragment key={category}>\n                  <ArrowIcon>\n                    <AngleRight />\n                  </ArrowIcon>\n                  <Link to={`/shop/${encodeURI(category)}`}>\n                    <CategoryLink>{formatNavLink(category)}</CategoryLink>\n                  </Link>\n                </React.Fragment>\n              );\n            })}\n          </Category>\n\n          <Informations>\n            <ImagesPreview images={item.images} size={35} />\n            <Details>\n              <Row>\n                <Name>{item.name}</Name>\n                <Icon onClick={() => handleFavorite(item.id)}>\n                  {favorites.includes(item.id) ? <HeartFilled /> : <Heart />}\n                </Icon>\n              </Row>\n              <Price>£{item.price}</Price>\n              <Description>\n                {item.description.map((paragraph, index) => {\n                  return <p key={'description' + index}>{paragraph}</p>;\n                })}\n              </Description>\n\n              <Selection onSubmit={handleAddToCart}>\n                <div>\n                  <TextLabel>Color: </TextLabel>\n                  <Choice> {currentColor}</Choice>\n                </div>\n                <ColorList>\n                  {item.colors.map((color) => {\n                    return (\n                      <li key={color.description}>\n                        <ColorLabel\n                          htmlFor={color.description}\n                          value={color.value}\n                          title={color.description}\n                          isSelected={currentColor === color.description}\n                        />\n                        <Checkbox\n                          type='checkbox'\n                          id={color.description}\n                          name={color.description}\n                          onClick={(e) => setCurrentColor(e.target.name)}\n                        />\n                      </li>\n                    );\n                  })}\n                </ColorList>\n\n                <div>\n                  {Object.keys(item.options).map((option, index) => {\n                    return (\n                      <OptionsField key={option}>\n                        <TextLabel>{option}: </TextLabel>\n                        <Options>\n                          {item.options[option].map((choice) => {\n                            return (\n                              <>\n                                <OptionLabel\n                                  htmlFor={choice.option}\n                                  isSelected={\n                                    currentOption[index][option] ===\n                                    choice.option\n                                  }\n                                >\n                                  {choice.option}\n                                </OptionLabel>\n                                <Checkbox\n                                  type='checkbox'\n                                  id={choice.option}\n                                  name={choice.option}\n                                  onClick={() =>\n                                    setCurrentOption((prev) => {\n                                      return [...prev].map((prevOption) => {\n                                        if (\n                                          Object.keys(prevOption)[0] ===\n                                          option\n                                        ) {\n                                          return { [option]: choice.option };\n                                        } else {\n                                          return prevOption;\n                                        }\n                                      });\n                                    })\n                                  }\n                                />\n                              </>\n                            );\n                          })}\n                        </Options>\n                      </OptionsField>\n                    );\n                  })}\n                </div>\n\n                <Row>\n                  <div>\n                    <Label htmlFor='quantity'>Quantity: </Label>\n                    <Quantity\n                      type='text'\n                      id='quantity'\n                      name='quantity'\n                      value={quantity}\n                      required\n                      onChange={(e) => {\n                        const quantity = e.target.value.replace(\n                          /[^0-9]/g,\n                          ''\n                        );\n                        setQuantity(quantity);\n                      }}\n                      onBlur={(e) => {\n                        if (e.target.value < 1) setQuantity(1);\n                      }}\n                    />\n                  </div>\n                  <Column>\n                    <SubmitBtn type='submit'>Add to Basket</SubmitBtn>\n                    <CSSTransition\n                      in={message.length !== 0}\n                      timeout={300}\n                      classNames='fade'\n                    >\n                      <Message>{message}</Message>\n                    </CSSTransition>\n                  </Column>\n                </Row>\n              </Selection>\n\n              <Additional>\n                <AdditionalBtn\n                  onClick={() => setAreDetailsOpen(!areDetailsOpen)}\n                >\n                  Additional Information\n                  {areDetailsOpen ? <Minus /> : <Plus />}\n                </AdditionalBtn>\n\n                <CSSTransition\n                  in={areDetailsOpen}\n                  timeout={500}\n                  classNames='details'\n                  mountOnEnter={true}\n                >\n                  <Dropdown>\n                    <DropdownColumn>\n                      <TextLabel>Dimensions (cm)</TextLabel>\n                      <ul>\n                        {Object.keys(item.dimensions).map((dimension) => {\n                          return (\n                            <Li key={dimension}>\n                              <AdditionalLabel>{dimension}:</AdditionalLabel>\n                              <AdditionalInfo>\n                                {' '}\n                                {item.dimensions[dimension]}\n                              </AdditionalInfo>\n                            </Li>\n                          );\n                        })}\n                      </ul>\n                    </DropdownColumn>\n\n                    <DropdownColumn>\n                      <TextLabel>Details</TextLabel>\n                      <ul>\n                        {Object.keys(item.additional).map((info) => {\n                          return (\n                            <Li key={info}>\n                              <AdditionalLabel>{info}:</AdditionalLabel>\n                              <AdditionalInfo>\n                                {' '}\n                                {item.additional[info]}\n                              </AdditionalInfo>\n                            </Li>\n                          );\n                        })}\n                      </ul>\n                    </DropdownColumn>\n                  </Dropdown>\n                </CSSTransition>\n              </Additional>\n            </Details>\n          </Informations>\n        </Center>\n      )}\n    </Container>\n  );\n}\n\nexport default ItemDetails;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.js",["224"],"import React, { useEffect, useState, useRef } from 'react';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../../utils/utils';\nimport { Link } from 'react-router-dom';\n\n// Styled components\n\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey\n  tertiary: 'hsl(0, 0%, 100%)', // White\n};\n\nconst Container = styled.nav`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${colors.secondary};\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  z-index: 3;\n  background: ${colors.tertiary};\n  top: ${(props) => props.margin}px;\n  width: 100%;\n  box-shadow: 0 0px 4px -3px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Category = styled.span`\n  cursor: pointer;\n  flex: 1;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 0 calc(0.75rem - 2px) 0;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    border-bottom: 2px solid ${colors.tertiary};\n  }\n`;\n\nconst Subcategory = styled.span`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Item = styled.span`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n`;\n\n// Displays shopping categories (types of furnitures...)\nfunction ShopNav() {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [hovered, setHovered] = useState('');\n  const navRef = useRef();\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  return (\n    <Container\n      onMouseLeave={() => {\n        setDropdown(false);\n      }}\n    >\n      <Nav ref={navRef}>\n        {/* Sort the categories by order before displaying them */}\n        {Object.keys(categories)\n          .sort((a, b) => categories[a].order - categories[b].order)\n          .map((category, index) => {\n            return (\n              <Category\n                key={category + index}\n                onMouseOver={() => {\n                  setDropdown(true);\n                  setHovered(category);\n                }}\n              >\n                <Link to={`/shop/${encodeURIComponent(category)}`}>\n                  {formatNavLink(category)}\n                </Link>\n              </Category>\n            );\n          })}\n      </Nav>\n\n      {dropdown && Object.keys(categories[hovered].categories).length !== 0 && (\n        <DropdownContainer margin={navRef.current.offsetHeight}>\n          <Dropdown>\n            {/* Sort the subcategories by order before displaying them */}\n            {Object.keys(categories[hovered].categories)\n              .sort(\n                (a, b) =>\n                  categories[hovered].categories[a].order -\n                  categories[hovered].categories[b].order\n              )\n              .map((subcategory, index) => {\n                return (\n                  <Column key={subcategory + index}>\n                    <Subcategory>\n                      <Link to={`/shop/${encodeURIComponent(subcategory)}`}>\n                        {formatNavLink(subcategory)}\n                      </Link>\n                    </Subcategory>\n                    <div>\n                      {categories[hovered].categories[\n                        subcategory\n                      ].categories.map((item, index) => {\n                        return (\n                          <Item key={item + index}>\n                            <Link to={`/shop/${encodeURIComponent(item)}`}>\n                              {formatNavLink(item)}\n                            </Link>\n                          </Item>\n                        );\n                      })}\n                    </div>\n                  </Column>\n                );\n              })}\n          </Dropdown>\n        </DropdownContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default ShopNav;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.js",["225","226"],"import React, { useEffect, useState } from 'react';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../../utils/utils';\n\n// Icons\nimport { ReactComponent as Hamburger } from '../../../assets/icons/icon-hamburger.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey,\n  tertiary: 'hsl(0, 0%, 100%)', // White\n  background: 'hsl(0, 0%, 100%)',\n};\n\nconst Icon = styled.button`\n  color: ${colors.secondary};\n  margin: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nconst Container = styled.nav`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: ${(props) => props.top}px;\n  height: calc(100% - ${(props) => props.top}px);\n  border-top: 1px solid ${colors.secondary};\n  background: ${colors.secondary};\n  font-size: 0.825rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  transition: all 0.3s linear;\n  transform: translateX(${(props) => (props.isNavOpen ? '0' : '-100')}%);\n\n  @media all and (max-width: 600px) {\n    width: ${props => props.isDropdownOpen ? '100vw' : 'initial'};\n    max-width: ${props => props.isDropdownOpen ? '100%' : 'initial'};\n  }\n\n  @media all and (max-width: 500px) {\n    height: 100%;\n  }\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n`;\n\nconst Category = styled.a`\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 2rem calc(0.75rem - 2px) 2rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '3')}%);\n  }\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: '';\n    display: block;\n    width: 2px;\n    left: 1rem;\n    position: absolute;\n    background: #fff;\n    transition: height 0.3s ease 0s, top 0.3s ease 0s;\n    height: ${(props) => (props.selected ? '90%' : '0')};\n    top: ${(props) => (props.selected ? '5%' : '50%')};\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  background: ${colors.tertiary};\n  width: 100%;\n  box-shadow: 0 5px 5px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-flow: row;\n  grid-gap: 3rem 1rem;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n\n  @media all and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Subcategory = styled.a`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  transition: all 0.15s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nconst Item = styled.a`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n  transition: all 0.15s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nfunction SideNav({ nav }) {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [activeCategory, setActiveCategory] = useState('');\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setHeight(nav.current.offsetHeight);\n  }, []);\n\n  return (\n    <>\n      <Icon onClick={() => {\n        setIsNavOpen(!isNavOpen);\n        isNavOpen && setIsDropdownOpen(false);\n      }}>\n        <Hamburger />\n      </Icon>\n\n      <Container\n        top={height}\n        isNavOpen={isNavOpen}\n        isDropdownOpen={isDropdownOpen}\n      >\n        <Nav>\n          {/* Sort the categories by order before displaying them */}\n          {Object.keys(categories)\n            .sort((a, b) => categories[a].order - categories[b].order)\n            .map((category, index) => {\n              return (\n                <Category\n                  key={category + index}\n                  selected={activeCategory === category}\n                  onClick={() => {\n                    setIsDropdownOpen(true);\n                    setActiveCategory(category);\n                  }}\n                >\n                  {formatNavLink(category)}\n                </Category>\n              );\n            })}\n        </Nav>\n\n        {isDropdownOpen && Object.keys(categories[activeCategory].categories).length !== 0 && isNavOpen && (\n          <DropdownContainer>\n            <Dropdown>\n              {/* Sort the subcategories by order before displaying them */}\n              {Object.keys(categories[activeCategory].categories)\n                .sort(\n                  (a, b) =>\n                    categories[activeCategory].categories[a].order -\n                    categories[activeCategory].categories[b].order\n                )\n                .map((subcategory, index) => {\n                  return (\n                    <Column key={subcategory + index}>\n                      <Subcategory>{formatNavLink(subcategory)}</Subcategory>\n                      <div>\n                        {categories[activeCategory].categories[\n                          subcategory\n                        ].categories.map((item, index) => {\n                          return (\n                            <Item key={item + index}>\n                              {formatNavLink(item)}\n                            </Item>\n                          );\n                        })}\n                      </div>\n                    </Column>\n                  );\n                })}\n            </Dropdown>\n          </DropdownContainer>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default SideNav;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.js",["227"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { Link } from 'react-router-dom';\n\n// Icon\nimport { ReactComponent as Delete } from '../../../assets/icons/icon-x-med.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 15%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 55%)', // Bright Grey\n  border: 'hsl(0, 0%, 90%)'\n};\n\nconst Item = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  align-items: center;\n  justify-items: center;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst Information = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 1.125rem;\n  width: 20rem;\n`;\n\nconst Image = styled.img`\n  width: 10rem;\n  height: 10rem;\n  margin-right: 1rem;\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\nconst Type = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Option = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n`;\n\nconst Capitalize = styled.span`\n  text-transform: capitalize;\n`;\n\nconst Quantity = styled.input`\n  font-family: 'Source Sans Pro', sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  font-size: 1.25rem;\n  color: ${colors.primary};\n  cursor: pointer;\n\n  &:hover {\n    color: initial;\n  }\n`;\nfunction CartItem({ item }) {\n  const [quantity, setQuantity] = useState(item.quantity);\n  const { currentUser } = useAuth();\n  const { deleteFromCart, updateCartQuantity } = useFirestore();\n\n  useEffect(() => {\n    updateCartQuantity(currentUser.uid, item.id, quantity)\n  }, [quantity])\n\n  return (\n    <Item>\n      <Information>\n        <Image src={item.image} alt='Item preview' />\n        <div>\n          <Name><Link to={`/shop/item/${item.id}`}>{item.name}</Link></Name>\n          <Type>\n            {item.type} - {item.color}\n          </Type>\n          <div>\n            {item.options.map((option) => {\n              return (\n                <Option option={option} key={option}>\n                  <Capitalize>{Object.keys(option)[0]}</Capitalize> -{' '}\n                  {Object.values(option)[0]}\n                </Option>\n              );\n            })}\n          </div>\n        </div>\n      </Information>\n      <Price>£{item.price}</Price>\n\n      <div>\n        <Button\n          onClick={() => setQuantity((prev) => (+prev < 2 ? '1' : prev - 1))}\n        >\n          -\n        </Button>\n        <Quantity\n          value={quantity}\n          onChange={(e) => {\n            let quantity = e.target.value.replace(/[^0-9]/g, '');\n            if (+quantity < 1 || !quantity) quantity = '1';\n            setQuantity(quantity);\n          }}\n        />\n        <Button onClick={() => setQuantity((prev) => +prev + 1)}>\n          +\n        </Button>\n      </div>\n      <Price>£{item.price * quantity}</Price>\n      <Button onClick={() => deleteFromCart(currentUser.uid, item.id)}><Delete/></Button>\n    </Item>\n  );\n}\n\nexport default CartItem;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ShopItemPreview.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImagesPreview.js",["228"],"import React, { useState, useEffect } from 'react';\nimport ImageMagnifier from './ImageMagnifier';\nimport styled from 'styled-components';\nimport { CSSTransition } from 'react-transition-group';\n\n// Svgs\nimport { ReactComponent as AngleLeft } from '../../../assets/icons/icon-angle-left.svg';\nimport { ReactComponent as AngleRight } from '../../../assets/icons/icon-angle-right.svg';\n\nconst colors = {\n  border: 'hsl(0, 0%, 80%)',\n  button: 'hsl(0, 0%, 50%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${(props) => props.size}rem;\n  height: ${(props) => props.size}rem;\n  border: 1px solid ${colors.border};\n`;\n\nconst Carousel = styled.div`\n  width: ${(props) => props.size}rem;\n  height: calc((${(props) => props.size}rem - 7rem) / 4);\n  margin-top: 1rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 2rem;\n  padding: 0;\n  cursor: pointer;\n  color: ${colors.button};\n`;\n\nconst Gallery = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Slides = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n`;\n\nconst Slide = styled.li`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n`;\n\nconst Preview = styled.div`\n  height: calc((${(props) => props.size}rem - 7rem) / 4);\n  width: calc((${(props) => props.size}rem - 7rem) / 4);\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border: 1px solid ${colors.border};\n`;\n\nfunction ImagesPreview({ images, size }) {\n  const [currentImage, setCurrentImage] = useState(images[0]);\n  const [slides, setSlides] = useState([]);\n  const [transition, setTransition] = useState(0);\n  const [transitionDuration, setTransitionDuration] = useState(0.3);\n  const [isImageChanging, setIsImageChanging] = useState(false);\n\n  // Organize slides.\n  // 1 \"slide\" = 1 group of 4 mini preview pictures.\n  useEffect(() => {\n    const slides = [];\n    images.forEach((image, index) => {\n      index % 4 === 0\n        ? slides.push([image])\n        : slides[slides.length - 1].push(image);\n    });\n\n    // If there aren't enough preview images to fill the last slide, empty space is added to compensate.\n    while (slides[slides.length - 1].length < 4) {\n      slides[slides.length - 1].push(null);\n    }\n    setSlides(slides);\n  }, []);\n\n  // Functions to change slide\n  const next = () => {\n    setTransition((prev) => prev - 100);\n  };\n\n  const previous = () => {\n    setTransition((prev) => prev + 100);\n  };\n\n  /* At the end of each slider transition:\n  - The transition duration is set to 0. It allows us to silently reset transform: translateX to 0.\n  - The slides order is changed so that there is always a \"previous slide\" and a \"next slide\" to go to without jumping too far.\n  - Thanks to useEffect, the transition duration is put back to 0.3s to have a smooth animation.\n  */\n\n  const handleTransitionEnd = () => {\n    setTransitionDuration(0);\n    setTransition(0);\n    setSlides((prev) => {\n      const slides = [...prev];\n      const prevSlide = slides.shift();\n      slides.push(prevSlide);\n      return slides;\n    });\n  };\n\n  useEffect(() => {\n    if (transitionDuration === 0) {\n      setTransitionDuration(0.3);\n    }\n  }, [transitionDuration]);\n\n  useEffect(() => {\n    if (isImageChanging) {\n      setTimeout(() => setIsImageChanging(false), 350)\n    }\n  }, [isImageChanging]);\n\n  return (\n    <div>\n      <Container size={size}>\n        <CSSTransition\n          in={isImageChanging}\n          timeout={350}\n          classNames='image-preview'\n        >\n          <ImageMagnifier image={currentImage} />\n        </CSSTransition>\n      </Container>\n\n      <Carousel size={size}>\n        <Button onClick={previous} disabled={slides.length < 2}>\n          <AngleLeft />\n        </Button>\n        <Gallery>\n          <Slides\n            onTransitionEnd={handleTransitionEnd}\n            transition={transition}\n            transitionDuration={transitionDuration}\n          >\n            {slides.map((slide, index) => {\n              return (\n                <Slide size={size} key={index}>\n                  {slides &&\n                    slide.map((image, index) => {\n                      if (image) {\n                        return (\n                          <Preview size={size} key={image}>\n                            <Image\n                              src={image}\n                              alt='Item Preview'\n                              onClick={() => {\n                                if (currentImage === image) return;\n                                setIsImageChanging(true);\n                                setCurrentImage(image);\n                              }}\n                            />\n                          </Preview>\n                        );\n                      } else {\n                        return <Preview size={size} key={`empty-${index}`}/>;\n                      }\n                    })}\n                </Slide>\n              );\n            })}\n          </Slides>\n        </Gallery>\n        <Button onClick={next} disabled={slides.length < 2}>\n          <AngleRight />\n        </Button>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default ImagesPreview;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImageMagnifier.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.js",["229","230"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport CartItem from '../../../components/shop/cart/CartItem';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useSignIn } from '../../../hooks/useSignIn';\nimport { Link } from 'react-router-dom';\n\n// Icons\nimport { ReactComponent as Basket } from '../../../assets/icons/icon-basket.svg';\n\n// Styled components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Darker grey - for payment background\n  text: 'hsl(0, 0%, 95%)', // White - for payment text\n  button: 'hsl(0, 0%, 100%)',\n  border: 'hsl(0, 0%, 90%)',\n  hover: 'hsl(0, 0%, 0%)', // Black - Continue Shopping Hover\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst ShoppingCart = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst ItemList = styled.div`\n  margin-right: 5rem;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Legend = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  border-bottom: 1px solid ${colors.border};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  justify-items: center;\n  padding-bottom: 0.75rem;\n`;\n\nconst Product = styled.div`\n  min-width: 320px;\n`;\n\nconst Placeholder = styled.div`\n  width: 20px;\n`;\n\nconst Subtotal = styled.div`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Bottom = styled.div`\n  margin: 1rem 0;\n  color: ${colors.secondary};\n  display: flex;\n  justify-content: space-between;\n\n  &:hover {\n    color: ${colors.hover};\n  }\n`;\n\n// Empty Cart\n\nconst EmptyCart = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst EmptyCartText = styled.div`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 1.125rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\n// Proceed to payment window\nconst ToPayment = styled.div`\n  background: ${colors.secondary};\n  color: ${colors.text};\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PaymentText = styled.div`\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n`;\n\nconst PaymentTitle = styled.h2`\n  font-size: 1.25rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst PaymentHeading = styled.div`\n  align-self: center;\n  text-align: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst PaymentChoice = styled.span`\n  font-size: 1.125rem;\n`;\n\nconst button = `\n  display: inline-block;\n  background: ${colors.text};\n  color: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  margin: 1rem 0;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &:hover {\n    background: ${colors.button};\n}`;\n\nconst PaymentLink = styled(Link)`\n  ${button}\n  align-self: center;\n`;\n\nconst PaymentBtn = styled.button`\n  ${button}\n\n  &:disabled {\n    background: ${colors.primary};\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  background: ${colors.text};\n  padding: 1.25rem;\n  margin: 1rem 1rem 0 1rem;\n  border-radius: 3px;\n\n  & > *:first-child {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  color: ${colors.secondary};\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  background: none;\n  border-bottom: 1px solid ${colors.lightGrey};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.lightGrey};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Error = styled.div`\n  font-size: 0.825rem;\n  color: ${colors.secondary};\n  line-height: 1rem;\n`;\n\nconst Message = styled(Error)`\n  cursor: pointer;\n`;\n\nfunction Cart() {\n  const [cart, setCart] = useState([]);\n  const { getCart, cartListener } = useFirestore();\n\n  // Used to sign in before checking out.\n  const { currentUser } = useAuth();\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    emailError,\n    passwordError,\n    loading,\n    handleSignIn,\n    handleForgotPassword,\n  } = useSignIn();\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) return;\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!currentUser) return;\n    const unsubscribe = cartListener(currentUser.uid, async () => {\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Helper functions to render\n  const renderCart = (cart) => {\n    if (cart.length === 0) {\n      return (\n        <EmptyCart>\n          <Heading>Shopping Cart</Heading>\n          <Basket />\n          <EmptyCartText>Oh no, it seems that your cart is empty.</EmptyCartText>\n          <div>We have a lot of lovely ideas to help you fill it.</div>\n          <Link to='/shop'><Button>Inspire Me</Button></Link>\n        </EmptyCart>\n      )\n    } else {\n      return (\n        <ItemList>\n            <Heading>Shopping Cart</Heading>\n            <Legend>\n              <Product>Product</Product>\n              <div>Price</div>\n              <div>Quantity</div>\n              <div>Total</div>\n              {/* Replace the \"X\" Icon to align the grid */}\n              <Placeholder></Placeholder>\n            </Legend>\n            <div>\n              <ul>\n                {cart.map((item) => {\n                  return (\n                    <li key={item.id}>\n                      <CartItem item={item} />\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n\n            <Bottom>\n              <Link to='/shop'>← Continue Shopping</Link>\n              <Subtotal>\n                Subtotal: £\n                {cart.reduce(\n                  (sum, item) => +item.price * +item.quantity + sum,\n                  0\n                )}\n              </Subtotal>\n            </Bottom>\n          </ItemList>\n      )\n    }\n  }\n\n  const renderBox = (cart, currentUser) => {\n    if (cart.length === 0) return;\n\n    // If the user isn't logged in, we'll suggest him to create an account / log in.\n    if (currentUser && currentUser.isAnonymous) {\n      return (\n        <ToPayment>\n            <PaymentHeading>\n              <PaymentTitle>Thank you for shopping with us!</PaymentTitle>\n              <PaymentText>\n                We sincerely hope that all our products will satisfy your needs\n                and enhance your interior.\n              </PaymentText>\n            </PaymentHeading>\n\n            <PaymentChoice>Already a customer ?</PaymentChoice>\n            <PaymentText>Sign in to continue shopping.</PaymentText>\n\n            <form onSubmit={handleSignIn}>\n              <Form>\n                <Field>\n                  <Label>Email</Label>\n                  <Input\n                    type='text'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  {emailError && <Error>{emailError}</Error>}\n                </Field>\n\n                <Field>\n                  <Label>Password</Label>\n                  <Input\n                    type='password'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  {passwordError && <Error>{passwordError}</Error>}\n                </Field>\n                <Message onClick={handleForgotPassword}>\n                  Forgot your password?\n                </Message>\n              </Form>\n\n              <Flex>\n                <PaymentBtn type='submit' disabled={loading}>\n                  Sign In\n                </PaymentBtn>\n              </Flex>\n            </form>\n\n            <PaymentChoice>Don't have an account yet?</PaymentChoice>\n            <PaymentText>\n              Create one to quickly manage your orders and checkout. We promise\n              it will only take a minute.\n            </PaymentText>\n              <PaymentLink\n                to={{\n                  pathname: '/account/entry',\n                  state: {\n                    isPaying: true,\n                  },\n                }}\n              >\n                Create an account\n              </PaymentLink>\n\n            <PaymentText>Or simply proceed to checkout as a guest.</PaymentText>\n              <PaymentLink\n                to={{\n                  pathname: '/shop/personal',\n                  state: {\n                    isPaying: true,\n                  },\n                }}\n              >\n                Checkout as a guest\n              </PaymentLink>\n          </ToPayment>\n      )\n    // Else, we'll just let him proceed.\n    } else {\n      return (\n        <ToPayment>\n          <PaymentHeading>\n            <PaymentTitle>Thank you for shopping with us!</PaymentTitle>\n          </PaymentHeading>\n\n\n          <PaymentText>\n            We sincerely hope that all our products will satisfy your needs\n            and enhance your interior.\n          </PaymentText>\n\n              <PaymentLink\n                to={{\n                  pathname: '/shop/personal',\n                  state: {\n                    isPaying: true,\n                  },\n                }}\n              >\n                Continue\n              </PaymentLink>\n\n        </ToPayment>\n      )\n    }\n  }\n\n  return (\n    <Container>\n      <ShoppingCart>\n        {renderCart(cart)}\n        {renderBox(cart, currentUser)}\n      </ShoppingCart>\n    </Container>\n  );\n}\n\nexport default Cart;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.js",["231"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Order from '../../../components/shop/checkout/Order';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\n\n// Icon\nimport check from '../../../assets/icons/icon-check.svg';\nimport iconX from '../../../assets/icons/icon-x.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Button and checkbox\n  tertiary: 'hsl(0, 0%, 90%)',\n  input: 'hsl(0, 0%, 70%)', // Input lines\n  black: 'hsl(0, 0%, 0%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst Left = styled.div`\n  min-width: 40vw;\n`;\n\nconst Category = styled.div`\n  margin-bottom: 2.5rem;\n`;\n\nconst CategoryName = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.25rem;\n`;\n\nconst Informations = styled.div`\n  line-height: 1.125rem;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem 5rem;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst HiddenInput = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: '';\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => (props.isChecked ? colors.secondary : '')};\n    background-image: ${(props) => (props.isChecked ? `url(${check})` : '')};\n    background-position: ${(props) => (props.isChecked ? 'center' : '')};\n  }\n`;\n\nconst Li = styled.li`\n  padding-left: 1rem;\n  text-indent: 1rem;\n  line-height: 1.25rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    background: url(${iconX});\n  }\n`;\n\nconst CardButton = styled.button`\n  margin-left: auto;\n  color: ${colors.secondary};\n\n  &:hover {\n    color: ${colors.black};\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nfunction Payment({ location }) {\n  /* Props :\n    - location.state.personal : informations the user entered on the informations page.\n  */\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [date, setDate] = useState('');\n  const [cvc, setCvc] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  const history = useHistory();\n  const { currentUser } = useAuth();\n  const {\n    addCard,\n    getCards,\n    getCart,\n    createOrder,\n    deleteCart,\n  } = useFirestore();\n\n  // If the user is logged in, they might have saved cards.\n  // We display them so that they can checkout faster.\n  useEffect(() => {\n    if (currentUser.isAnonymous) return;\n    (async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n    })();\n  }, []);\n\n  const confirmOrder = async (e) => {\n    e.preventDefault();\n\n    const cart = await getCart(currentUser.uid);\n\n    // If the user is logged in, we add their id in the order so that we can add it to their orders list.\n    const order = await createOrder(\n      cart,\n      location.state.personal,\n      {\n        name,\n        number,\n        date,\n        cvc,\n      },\n      currentUser.uid\n    );\n    await deleteCart(currentUser.uid);\n\n    if (remember) {\n      addCard(currentUser.uid, name, number, date, cvc);\n    }\n\n    history.push({\n      pathname: `/shop/confirmation/${order}`,\n      state: {\n        payment: true,\n      },\n    });\n  };\n\n  return (\n    <>\n      {location.state ? (\n          <Container>\n            <Main>\n              <Left>\n                <Heading>Checkout</Heading>\n\n                <Category>\n                  <Subheading>Shipping Details</Subheading>\n                  <Informations>\n                    <div>\n                      {location.state.personal.firstName}{' '}\n                      {location.state.personal.lastName}\n                    </div>\n                    <div>{location.state.personal.address}</div>\n                    <div>\n                      {location.state.personal.zipCode}{' '}\n                      {location.state.personal.city}\n                    </div>\n                    <div>{location.state.personal.country}</div>\n                  </Informations>\n                </Category>\n\n                <Category>\n                  <Subheading>Payment Details</Subheading>\n                  {cards.length !== 0 && (\n                    <>\n                      <CategoryName>Use an existing card</CategoryName>\n\n                      <Category>\n                        {cards.map((card) => {\n                          return (\n                            <Li key={card.id}>\n                              <div>\n                                <strong>{card.name}</strong> —{' '}\n                                {card.number.slice(-4)}\n                              </div>\n                              <CardButton\n                                type='button'\n                                onClick={async () => {\n                                  const cart = await getCart(currentUser.uid);\n                                  const order = await createOrder(\n                                    cart,\n                                    location.state.personal,\n                                    {\n                                      name: card.name,\n                                      number: card.number,\n                                      date: card.date,\n                                      cvc: card.cvc,\n                                    },\n                                    currentUser.uid\n                                  );\n                                  await deleteCart(currentUser.uid);\n\n                                  history.push({\n                                    pathname: `/shop/confirmation/${order}`,\n                                    state: {\n                                      payment: true,\n                                    },\n                                  });\n                                }}\n                              >\n                                Pay with this card →\n                              </CardButton>\n                            </Li>\n                          );\n                        })}\n                      </Category>\n\n                      <CategoryName>Use another card</CategoryName>\n                    </>\n                  )}\n\n                  <Form onSubmit={confirmOrder}>\n                    <Fields>\n                      <FieldLarge>\n                        <Label htmlFor='name'>Name on card</Label>\n                        <Input\n                          type='text'\n                          value={name}\n                          id='name'\n                          onChange={(e) => setName(e.target.value)}\n                          placeholder='Enter your full name'\n                        />\n                      </FieldLarge>\n\n                      <FieldLarge>\n                        <Label htmlFor='card_number'>Card number</Label>\n                        <Input\n                          type='text'\n                          value={number}\n                          id='card_number'\n                          onChange={(e) => {\n                            let number = e.target.value.replace(/[^0-9]/g, '');\n                            setNumber(number);\n                          }}\n                          placeholder='Enter your card number'\n                        />\n                      </FieldLarge>\n\n                      <Field>\n                        <Label htmlFor='date'>Valid Through</Label>\n                        <Input\n                          type='text'\n                          id='date'\n                          value={date}\n                          onChange={(e) => setDate(e.target.value)}\n                          placeholder='MM / YY'\n                        />\n                      </Field>\n\n                      <Field>\n                        <Label htmlFor='cvc'>CVC Code</Label>\n                        <Input\n                          type='text'\n                          id='cvc'\n                          value={cvc}\n                          onChange={(e) => {\n                            let cvc = e.target.value.replace(/[^0-9]/g, '');\n                            setCvc(cvc);\n                          }}\n                          placeholder='Enter your CVC code'\n                        />\n                      </Field>\n\n                      {!currentUser.isAnonymous && (\n                        <>\n                          <CheckboxLabel\n                            htmlFor='remember'\n                            isChecked={remember}\n                          >\n                            Remember my card for easier checkout.\n                          </CheckboxLabel>\n                          <HiddenInput\n                            type='checkbox'\n                            id='remember'\n                            name='remember'\n                            checked={remember}\n                            onChange={() => setRemember(!remember)}\n                          />\n                        </>\n                      )}\n                    </Fields>\n\n                    <Button type='submit'>Confirm my order</Button>\n                  </Form>\n                </Category>\n              </Left>\n\n              <Order />\n            </Main>\n          </Container>\n      ) : (\n        <Redirect to='/shop/cart' />\n      )}\n    </>\n  );\n}\n\nexport default Payment;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.js",["232"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport Order from '../../../components/shop/checkout/Order';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n// Icon\nimport check from '../../../assets/icons/icon-check.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Button and checkbox\n  tertiary: 'hsl(0, 0%, 90%)',\n  input: 'hsl(0, 0%, 70%)', // Input lines\n  black: 'hsl(0, 0%, 0%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst OrderRecap = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 40vw;\n`;\n\nconst Category = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem 5rem;\n  margin: 1.25rem 0 3rem 0;\n`;\n\nconst CategoryName = styled.div`\n  grid-column: 1 / -1;\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Checkbox = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: '';\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => (props.isChecked ? colors.secondary : '')};\n    background-image: ${(props) => (props.isChecked ? `url(${check})` : '')};\n    background-position: ${(props) => (props.isChecked ? 'center' : '')};\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\n// Address Book\n\nconst Addresses = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n  margin-bottom: 2.5rem;\n`;\n\nfunction Personal({ location }) {\n  /* Props :\n    - location.state.isPaying : true if user comes from /shop/cart.\n  */\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [country, setCountry] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [additional, setAdditional] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n\n  const { currentUser } = useAuth();\n  const { addAddress, getAddresses } = useFirestore();\n  const history = useHistory();\n\n  // If the user is logged in, they might have saved addresses.\n  // We display them so that they can checkout faster.\n  useEffect(() => {\n    if (currentUser.isAnonymous) return;\n    (async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n    })();\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (remember) {\n      addAddress(\n        currentUser.uid,\n        firstName,\n        lastName,\n        address,\n        zipCode,\n        city,\n        country,\n        phone,\n        email,\n      );\n    }\n\n    history.push({\n      pathname: '/shop/payment',\n      state: {\n        personal: {\n          firstName,\n          lastName,\n          email,\n          phone,\n          address,\n          city,\n          zipCode,\n          country\n        },\n      },\n    });\n  };\n\n  return (\n    <>\n      {/* If the user didn't access to this page via the cart links,\n       - Redirect them to their cart.\n       - Otherwise, ask for their personal details. */}\n      {location.state ? (\n        <Container>\n          <OrderRecap>\n            <Form onSubmit={handleSubmit}>\n              <Heading>Personal Details</Heading>\n\n              {!currentUser.isAnonymous && addresses.length !== 0 &&\n                <>\n                <Subheading>Address Book</Subheading>\n                <Addresses>\n                  {addresses.map(address => {\n                    return (\n                      <div>\n                        <div>{address.firstName} {address.lastName}</div>\n                        <div>{address.address}</div>\n                        <div>{address.zipCode} {address.city}</div>\n                        <div>{address.country}</div>\n                        <Button onClick={() => {\n                          history.push({\n                            pathname: '/shop/payment',\n                            state: {\n                              personal: {\n                                firstName: address.firstName,\n                                lastName: address.lastName,\n                                address: address.address,\n                                zipCode: address.zipCode,\n                                country: address.country,\n                                city: address.city,\n                                email: address.email,\n                                phone: address.phone,\n                                additional,\n                              },\n                            }\n                          })\n                        }}>Use this address</Button>\n                      </div>\n                    )\n                  })}\n                </Addresses>\n\n                <Subheading>Use another address</Subheading>\n\n                </>\n              }\n\n              <CategoryName>General</CategoryName>\n              <Category>\n                <Field>\n                  <Label htmlFor='first_name'>First Name</Label>\n                  <Input\n                    type='text'\n                    value={firstName}\n                    id='first_name'\n                    onChange={(e) => setFirstName(e.target.value)}\n                    placeholder='Enter your first name'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='last_name'>Last Name</Label>\n                  <Input\n                    type='text'\n                    value={lastName}\n                    id='last_name'\n                    onChange={(e) => setLastName(e.target.value)}\n                    placeholder='Enter your last name'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='email'>Email</Label>\n                  <Input\n                    type='email'\n                    id='email'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder='Enter your email'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='phone'>Phone Number</Label>\n                  <Input\n                    type='tel'\n                    id='phone'\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    placeholder='Enter your phone number'\n                  />\n                </Field>\n              </Category>\n\n              <CategoryName>Delivery</CategoryName>\n              <Category>\n                <Field>\n                  <Label htmlFor='address'>Address</Label>\n                  <Input\n                    type='text'\n                    id='address'\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    placeholder='Enter your address'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='zip_code'>Zip Code</Label>\n                  <Input\n                    type='text'\n                    id='zip_code'\n                    value={zipCode}\n                    onChange={(e) => setZipCode(e.target.value)}\n                    placeholder='Enter your zip code'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='city'>City</Label>\n                  <Input\n                    type='text'\n                    id='city'\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    placeholder='Enter your city'\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor='country'>Country</Label>\n                  <Input\n                    type='text'\n                    id='country'\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                    placeholder='Enter your country'\n                  />\n                </Field>\n\n                <FieldLarge>\n                  <Label htmlFor='additional'>Additional Informations</Label>\n                  <Input\n                    type='text'\n                    id='additional'\n                    value={additional}\n                    onChange={(e) => setAdditional(e.target.value)}\n                    placeholder='Anything else you would like to tell us (building entrance codes, prefered delivery time...)'\n                  />\n                </FieldLarge>\n              </Category>\n\n              {currentUser && !currentUser.isAnonymous && (\n                <>\n                  <CheckboxLabel htmlFor='remember' isChecked={remember}>\n                    Remember my informations for easier checkout.\n                  </CheckboxLabel>\n                  <Checkbox\n                    type='checkbox'\n                    id='remember'\n                    name='remember'\n                    checked={remember}\n                    onChange={() => setRemember(!remember)}\n                  />\n                </>\n              )}\n\n              <Button type='submit'>Proceed to Payment</Button>\n            </Form>\n            <Order />\n          </OrderRecap>\n        </Container>\n      ) : (\n        <Redirect to='/shop/cart' />\n      )}\n    </>\n  );\n}\n\nexport default Personal;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.js",["233"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { Link } from 'react-router-dom';\n\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Darker grey - for background\n  text: 'hsl(0, 0%, 95%)',\n  white: 'hsl(0, 0%, 100%)',\n  small: 'hsl(0, 0%, 85%)',\n  accent: 'hsl(46, 65%, 52%)', // Gold\n};\n\nconst Container = styled.div`\n  margin-left: 5rem;\n  background: ${colors.secondary};\n  color: ${colors.text};\n  padding: 3rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Cart = styled.div`\n  line-height: 1.25rem;\n`;\n\nconst Heading = styled.h3`\n  font-size: 1.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-row-gap: 1rem;\n\n  &:after {\n    content: '';\n    grid-column: 1 / -1;\n    width: 100%;\n    height: 1px;\n    margin-bottom: 1rem;\n    background: ${colors.primary};\n    background: linear-gradient(\n      90deg,\n      ${colors.secondary} 0%,\n      ${colors.accent} 40%,\n      ${colors.accent} 60%,\n      ${colors.secondary} 100%\n    );\n  }\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n`;\n\nconst Type = styled.div`\n  font-style: italic;\n  color: ${colors.small};\n`;\n\nconst Quantity = styled.div`\n  font-size: 0.9rem;\n  justify-self: end;\n`;\n\nconst Price = styled.div`\n  grid-column: -2;\n  font-weight: 600;\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  margin: .5rem 0;\n`;\n\nconst Total = styled.div`\n  margin: 1.5rem 0;\n`;\n\nconst TotalLabel = styled.div`\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.accent};\n`;\n\nconst TotalPrice = styled.div`\n  font-weight: 600;\n  font-size: 1.125rem;\n`;\n\nconst GoBack = styled.div`\n  &:hover {\n    color: ${colors.white};\n  }\n`;\n\nfunction Order() {\n  const [cart, setCart] = useState([]);\n  const { getCart } = useFirestore();\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) return;\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <Heading>Order Summary</Heading>\n      <Cart>\n        <ul>\n          {cart.map((item) => {\n            return (\n              <Item key={item.id}>\n                <div>\n                  <Name>{item.name}</Name>\n                  <Type>\n                    {item.type} in {item.color}\n                  </Type>\n                </div>\n                <Quantity>{item.quantity}</Quantity>\n                <Price>£{item.price}</Price>\n              </Item>\n            );\n          })}\n        </ul>\n        <Row>\n          <div>Items</div>\n          <Price>£{cart.reduce((sum, item) => sum + +item.price, 0)}</Price>\n        </Row>\n        <Row>\n          <div>Shipping</div>\n          <Price>£0</Price>\n        </Row>\n        <Total>\n          <Row>\n            <TotalLabel>Total</TotalLabel>\n            <TotalPrice>\n              £{cart.reduce((sum, item) => sum + +item.price, 0)}\n            </TotalPrice>\n          </Row>\n        </Total>\n      </Cart>\n\n      <GoBack>\n        <Link to='/shop/cart'>← Edit your cart</Link>\n      </GoBack>\n    </Container>\n  );\n}\n\nexport default Order;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Confirmation.js",["234"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport CartPreview from '../../../components/shop/cart/CartPreview';\n\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Darker grey - for payment background\n  text: 'hsl(0, 0%, 95%)', // White - for payment text\n  button: 'hsl(0, 0%, 100%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst Order = styled.div`\n  min-width: 40vw;\n`;\n\nconst Summary = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Message = styled.aside`\n  margin-left: 5rem;\n  background: ${colors.secondary};\n  color: ${colors.text};\n  padding: 4rem;\n  display: flex;\n  flex-direction: column;\n  max-width: 25rem;\n  line-height: 1.25rem;\n  text-align: justify;\n\n  & > * {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst MessageHeading = styled.h2`\n  text-transform: uppercase;\n  font-size: 1.125rem;\n  letter-spacing: 1px;\n  align-self: center;\n  margin-bottom: 2rem;\n`;\n\nconst MessageLink = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst CategoryName = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  background: ${colors.text};\n  color: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  margin: 1rem 0;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &:hover {\n    background: ${colors.button};\n  }\n`;\n\nfunction Confirmation({ match, location }) {\n  const [order, setOrder] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { getOrder } = useFirestore();\n\n  console.log(location);\n  console.log(match.params.id);\n\n  useEffect(() => {\n    (async () => {\n      const order = await getOrder(match.params.id);\n      setOrder(order);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Container>\n        <Main>\n          {!loading && (\n            <Order>\n              <Heading>Order Confirmation</Heading>\n\n              <Summary>\n                <CategoryName>Order Summary</CategoryName>\n                <CartPreview cart={order.products} />\n              </Summary>\n\n              <div>\n                <CategoryName>Shipping Details</CategoryName>\n                {order.shipping.firstName} {order.shipping.lastName}\n                <br />\n                {order.shipping.address}\n                <br />\n                {order.shipping.zipCode} {order.shipping.city}\n                <br />\n                {order.shipping.country}\n              </div>\n            </Order>\n          )}\n\n          <Message>\n            <MessageHeading>Confirmation</MessageHeading>\n\n            <p>\n              Your order n°<strong>{match.params.id}</strong> has been\n              confirmed. You will be receiving a confirmation mail with your\n              order details shortly.\n            </p>\n\n            <p>\n              You can follow your order's status at any given time{' '}\n              <MessageLink>\n                <Link to='/'>here</Link>\n              </MessageLink>\n              . If you have any other questions, feel free to{' '}\n              <MessageLink>\n                <Link to='/contact'>contact us.</Link>\n              </MessageLink>\n            </p>\n\n            <p>Thank you for shopping with us!</p>\n\n            <Button>\n              <Link to='/shop'>Continue Shopping</Link>\n            </Button>\n          </Message>\n        </Main>\n      </Container>\n    </div>\n  );\n}\n\nexport default Confirmation;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/SignIn.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Entry.js",["235"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport SignIn from '../../../components/shop/account/SignIn';\nimport SignUp from '../../../components/shop/account/SignUp';\n\nimport background from '../../../assets/images/entry.png';\n\n// Styled components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Darker grey\n  background: 'hsl(0, 0%, 100%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  background: url(${background});\n  background-size: cover;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst Card = styled.div`\n  width: 100vw;\n  max-width: 500px;\n  border: 1px solid ${colors.secondary};\n  height: 45rem;\n  perspective: 150rem;\n  padding: 0 5rem;\n  background: ${colors.background};\n\n  @media all and (max-width: 600px) {\n    border: none;\n    height: 100%;\n    max-width: none;\n  }\n`;\n\nconst CardInner = styled.div`\n  position: relative;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  transform: ${(props) => (props.isFlipped ? 'rotateY(180deg)' : '')};\n  height: 100%;\n  width: 100%;\n`;\n\nconst CardSide = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst CardBackSide = styled(CardSide)`\n  transform: rotateY(180deg);\n`;\n\nfunction Entry({ location }) {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isPaying, setIsPaying] = useState(false);\n\n  useEffect(() => {\n    location.state && location.state.isPaying ?\n    setIsPaying(true) : setIsPaying(false)\n  }, [])\n\n  const flip = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  return (\n    <Container>\n      <Main>\n        <Card>\n          <CardInner isFlipped={isFlipped}>\n            <CardSide>\n              <SignUp flip={flip} isPaying={isPaying} />\n            </CardSide>\n            <CardBackSide>\n              <SignIn flip={flip} isPaying={isPaying} />\n            </CardBackSide>\n          </CardInner>\n        </Card>\n      </Main>\n    </Container>\n  );\n}\n\nexport default Entry;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/SignUp.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useSignUp.js",[],"/home/aureen/the_odin_project/room_homepage/src/contexts/FavoriteContext.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/types/PublicRoute.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/types/PrivateRoute.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartPreview.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/account/AccessSettings.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Favorite.js",["236"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ShopItemPreview from '../../../components/shop/items/ShopItemPreview';\nimport { useFavorite } from '../../../contexts/FavoriteContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { Link } from 'react-router-dom';\n\n// Icons\nimport { ReactComponent as Basket } from '../../../assets/icons/icon-basket.svg';\n\n// Styled Components\nconst colors = {\n  button: 'hsl(0, 0%, 27%)', // Darker grey\n  text: 'hsl(0, 0%, 95%)', // White\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst ItemsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 3vw;\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst EmptyText = styled.div`\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 1.125rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.button};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nfunction Favorite() {\n  const { getItem } = useFirestore();\n  const { favorites } = useFavorite([]);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const favoritesItems = [];\n      for (const favorite of favorites) {\n        const item = await getItem(favorite);\n        favoritesItems.push(item);\n      }\n      setFavoriteItems(favoritesItems);\n    })();\n  }, [favorites]);\n\n  return (\n    <Container>\n      <div>\n        {favorites.length === 0 ? (\n          <Empty>\n            <Heading>Favorites</Heading>\n            <Basket />\n            <EmptyText>It seems that you haven't saved any items yet.</EmptyText>\n            <div>We have a lot of lovely ideas to help you fill it.</div>\n            <Link to='/shop'><Button>Inspire Me</Button></Link>\n          </Empty>\n        ) : (\n          <>\n            <Heading>Favorites</Heading>\n            <ItemsList>\n              {favoriteItems.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <ShopItemPreview\n                      name={item.name}\n                      images={item.images}\n                      price={item.price}\n                      id={item.id}\n                      isFavorite={favorites.includes(item.id)}\n                    />\n                  </li>\n                );\n              })}\n            </ItemsList>\n          </>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nexport default Favorite;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Settings.js",["237","238"],"import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useUserSettings } from '../../../hooks/useUserSettings';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport AccountNav from '../../../components/shop/account/AccountNav';\nimport styled from 'styled-components';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Button and checkbox\n  tertiary: 'hsl(0, 0%, 90%)',\n  input: 'hsl(0, 0%, 70%)', // Input lines\n  black: 'hsl(0, 0%, 0%)',\n};\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 40vw;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem 5rem;\n  margin: 1.25rem 0 3rem 0;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nfunction Settings() {\n  const { currentUser } = useAuth();\n  const { getUserName, updateFirstName, updateLastName } = useFirestore();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [currentName, setCurrentName] = useState({\n    firstName: '',\n    lastName: '',\n  });\n  const {\n    email,\n    setEmail,\n    emailError,\n    currentPassword,\n    setCurrentPassword,\n    currentPasswordError,\n    newPassword,\n    setNewPassword,\n    newPasswordError,\n    newPasswordConfirmation,\n    setNewPasswordConfirmation,\n    newPasswordConfirmationError,\n    clearErrors,\n    handleUpdateEmail,\n    handleUpdatePassword,\n    message,\n    setMessage,\n  } = useUserSettings();\n\n  // Loads current user data\n  useEffect(() => {\n    (async () => {\n      const user = await getUserName(currentUser.uid);\n      setCurrentName(user);\n      setFirstName(user.firstName);\n      setLastName(user.lastName);\n    })();\n    setEmail(currentUser.email);\n  }, []);\n\n  const handleSaveChanges = async (e) => {\n    e.preventDefault();\n    clearErrors();\n\n    if (currentName.firstName !== firstName) {\n      updateFirstName(currentUser.uid, firstName);\n      setMessage('Your information was successfully updated.');\n    }\n\n    if (currentName.lastName !== lastName) {\n      updateLastName(currentUser.uid, lastName);\n      setMessage('Your information was successfully updated.');\n    }\n\n    if (email !== currentUser.email) {\n      handleUpdateEmail();\n    }\n\n    if (newPassword) {\n      handleUpdatePassword();\n    }\n  };\n\n  return (\n    <section>\n      <Heading>Settings</Heading>\n\n      <Form onSubmit={handleSaveChanges}>\n        <Fields>\n          <Field>\n            <Label htmlFor='first_name'>First Name</Label>\n            <Input\n              type='text'\n              value={firstName}\n              id='first_name'\n              onChange={(e) => setFirstName(e.target.value)}\n              placeholder='Enter your first name'\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor='last_name'>Last Name</Label>\n            <Input\n              type='text'\n              value={lastName}\n              id='last_name'\n              onChange={(e) => setLastName(e.target.value)}\n              placeholder='Enter your last name'\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor='email'>Email</Label>\n            <Input\n              type='email'\n              id='email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder='Enter your email'\n            />\n            {emailError && <Message>{emailError}</Message>}\n          </Field>\n\n          <Field>\n            <Label htmlFor='current_password'>Current Password</Label>\n            <Input\n              type='password'\n              id='current_password'\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              placeholder='Enter your current password'\n            />\n            {currentPasswordError && (\n              <Message>{currentPasswordError}</Message>\n            )}\n          </Field>\n\n          <Field>\n            <Label htmlFor='new_password'>New Password</Label>\n            <Input\n              type='password'\n              id='new_password'\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              placeholder='Enter your new password'\n            />\n            {newPasswordError && <Message>{newPasswordError}</Message>}\n          </Field>\n\n          <Field>\n            <Label htmlFor='new_password_confirmation'>\n              New Password Confirmation\n            </Label>\n            <Input\n              type='password'\n              id='new_password_confirmation'\n              value={newPasswordConfirmation}\n              onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n              placeholder='Enter your new password again'\n            />\n            {newPasswordConfirmationError && (\n              <Message>{newPasswordConfirmationError}</Message>\n            )}\n          </Field>\n        </Fields>\n\n        <Button type='submit'>Save Changes</Button>\n        <Message>{message}</Message>\n      </Form>\n    </section>\n  );\n}\n\nexport default Settings;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Payment.js",["239","240","241"],"import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\n\n// Icons\nimport { ReactComponent as Plus } from '../../../assets/icons/icon-plus.svg';\nimport { ReactComponent as Minus } from '../../../assets/icons/icon-minus.svg';\nimport { ReactComponent as Close } from '../../../assets/icons/icon-close.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 70%)', // Bright Grey\n  text: 'hsl(0, 0%, 85%)',\n  label: 'hsl(0, 0%, 100%)',\n  dark: 'hsl(0, 0%, 0%)',\n};\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormHeading = styled(Subheading)`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Category = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  margin: 1rem 0;\n  color: ${colors.secondary};\n`;\n\nconst CardsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  margin: 2rem;\n  grid-gap: 2rem;\n`;\n\nconst Card = styled.div`\n  padding: 1rem;\n  border: 1px solid ${colors.tertiary};\n  border-radius: 5px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem 5rem;\n  margin-bottom: 2.5rem;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst ButtonEmpty = styled(Button)`\n  background: transparent;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n\n  &:hover {\n    color: ${colors.dark};\n  }\n`;\n\nconst EditModal = styled(Modal)`\n  position: absolute;\n  max-width: 600px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${colors.label};\n  padding: 4rem;\n  border: 1px solid ${colors.secondary};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst EditHeading = styled.h2`\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Icon = styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: 1rem;\n  right: 1rem;\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nfunction Payment() {\n  const { currentUser } = useAuth();\n  const {\n    addCard,\n    deleteCard,\n    editCard,\n    getCards,\n    cardListener,\n  } = useFirestore();\n\n  const [cards, setCards] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  // Add card\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [date, setDate] = useState('');\n  const [cvc, setCvc] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Edit card\n  const [nameEdit, setNameEdit] = useState('');\n  const [numberEdit, setNumberEdit] = useState('');\n  const [dateEdit, setDateEdit] = useState('');\n  const [cvcEdit, setCvcEdit] = useState('');\n  const [messageEdit, setMessageEdit] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = cardListener(currentUser.uid, async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n    });\n    return unsubscribe;\n  }, []);\n\n  const handleAddCard = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      await addCard(currentUser.uid, name, number, date, cvc);\n      setName('');\n      setNumber('');\n      setDate('');\n      setCvc('');\n      setMessage('Your card was successfully saved.');\n    } catch (e) {\n      setMessage('Sorry, we could not add your card.');\n    }\n  };\n\n  const openEdit = (card) => {\n    setIsEditing(true);\n    setNameEdit(card.name);\n    setNumberEdit(card.number);\n    setDateEdit(card.date);\n    setCvcEdit(card.cvc);\n  };\n\n  return (\n    <div>\n      <Heading>Payment</Heading>\n      <div>\n        <Subheading>Current Cards</Subheading>\n        <CardsList>\n          {cards.map((card) => {\n            return (\n              <React.Fragment key={card.id}>\n                <Card>\n                  <strong>{card.name}</strong>\n                  <div>{card.number.slice(-4)} (Last 4 digits)</div>\n\n                  <Buttons>\n                    <ButtonEmpty onClick={() => openEdit(card)}>\n                      Edit\n                    </ButtonEmpty>\n                    <Button\n                      onClick={() => deleteCard(currentUser.uid, card.id)}\n                    >\n                      Delete\n                    </Button>\n                  </Buttons>\n                </Card>\n\n                <EditModal\n                  isOpen={isEditing}\n                  onRequestClose={() => setIsEditing(false)}\n                  style={{\n                    overlay: {\n                      backgroundColor: 'rgba(255, 255, 255, .55)',\n                    },\n                  }}\n                >\n                  <EditHeading>Edit your card</EditHeading>\n                  <Icon onClick={() => setIsEditing(false)}>\n                    <Close />\n                  </Icon>\n                  <Form\n                    onSubmit={async (e) => {\n                      e.preventDefault();\n                      setMessageEdit('');\n\n                      try {\n                        await editCard(\n                          currentUser.uid,\n                          card.id,\n                          nameEdit,\n                          numberEdit,\n                          dateEdit,\n                          cvcEdit\n                        );\n                        setIsEditing(false);\n                      } catch (e) {\n                        setMessageEdit('Sorry, we could not update your card.');\n                      }\n                    }}\n                  >\n                    <Fields>\n                      <FieldLarge>\n                        <Label htmlFor='name_edit'>Name on card</Label>\n                        <Input\n                          type='text'\n                          value={nameEdit}\n                          id='name_edit'\n                          onChange={(e) => setNameEdit(e.target.value)}\n                          placeholder='Enter your full name'\n                        />\n                      </FieldLarge>\n\n                      <FieldLarge>\n                        <Label htmlFor='card_number_edit'>Card number</Label>\n                        <Input\n                          type='text'\n                          value={numberEdit}\n                          id='card_number_edit'\n                          onChange={(e) => {\n                            let number = e.target.value.replace(/[^0-9]/g, '');\n                            setNumberEdit(number);\n                          }}\n                          placeholder='Enter your card number'\n                        />\n                      </FieldLarge>\n\n                      <Field>\n                        <Label htmlFor='date_edit'>Valid Through</Label>\n                        <Input\n                          type='text'\n                          id='date_edit'\n                          value={dateEdit}\n                          onChange={(e) => setDateEdit(e.target.value)}\n                          placeholder='MM / YY'\n                        />\n                      </Field>\n\n                      <Field>\n                        <Label htmlFor='cvc_edit'>CVC Code</Label>\n                        <Input\n                          type='text'\n                          id='cvc_edit'\n                          value={cvcEdit}\n                          onChange={(e) => {\n                            let cvc = e.target.value.replace(/[^0-9]/g, '');\n                            setCvcEdit(cvc);\n                          }}\n                          placeholder='Enter your CVC code'\n                        />\n                      </Field>\n                    </Fields>\n                    <Buttons>\n                      <ButtonEmpty onClick={() => setIsEditing(false)}>\n                        Cancel\n                      </ButtonEmpty>\n                      <Button type='submit'>Edit your card</Button>\n                    </Buttons>\n                    <Message>{messageEdit}</Message>\n                  </Form>\n                </EditModal>\n              </React.Fragment>\n            );\n          })}\n        </CardsList>\n      </div>\n\n      <FormHeading onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n        Add a new card\n        {isDropdownOpen ? <Minus /> : <Plus />}\n      </FormHeading>\n\n      {isDropdownOpen && (\n        <Form onSubmit={handleAddCard}>\n          <Category>General</Category>\n          <Fields>\n            <FieldLarge>\n              <Label htmlFor='name'>Name on card</Label>\n              <Input\n                type='text'\n                value={name}\n                id='name'\n                onChange={(e) => setName(e.target.value)}\n                placeholder='Enter your full name'\n              />\n            </FieldLarge>\n\n            <FieldLarge>\n              <Label htmlFor='card_number'>Card number</Label>\n              <Input\n                type='text'\n                value={number}\n                id='card_number'\n                onChange={(e) => {\n                  let number = e.target.value.replace(/[^0-9]/g, '');\n                  setNumber(number);\n                }}\n                placeholder='Enter your card number'\n              />\n            </FieldLarge>\n\n            <Field>\n              <Label htmlFor='date'>Valid Through</Label>\n              <Input\n                type='text'\n                id='date'\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                placeholder='MM / YY'\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor='cvc'>CVC Code</Label>\n              <Input\n                type='text'\n                id='cvc'\n                value={cvc}\n                onChange={(e) => {\n                  // Makes sure the user can only write 3 numbers.\n                  let cvc = e.target.value.replace(/[^0-9]/g, '');\n                  if (cvc.length > 3) cvc = cvc.slice(0, 3);\n                  setCvc(cvc);\n                }}\n                placeholder='Enter your CVC code'\n              />\n            </Field>\n          </Fields>\n\n          <Button type='submit'>Add a new card</Button>\n          <Message>{message}</Message>\n        </Form>\n      )}\n    </div>\n  );\n}\n\nexport default Payment;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/AccountNav.js",["242"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey\n};\n\nconst Nav = styled.nav`\n  margin-right: 5rem;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: capitalize;\n\n  & > * {\n    margin: .5rem 0;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  color: ${colors.secondary};\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    transform: translateX(${(props) => (props.selected ? '0' : '3')}%);\n  }\n  \n`;\n\nconst CurrentLink = styled.span`\n  position: relative;\n  color: ${colors.primary};\n  font-weight: 600;\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: '';\n    display: block;\n    width: 2px;\n    left: -1rem;\n    position: absolute;\n    background: ${colors.secondary};\n    transition: height 0.3s ease 0s, top 0.3s ease 0s;\n    height: 110%;\n    top: -5%;\n  }\n`;\n\nfunction AccountNav({ currentLink }) {\n  const [links, setLinks] = useState([\n    'user',\n    'orders',\n    'addresses',\n    'payment',\n  ]);\n\n  return (\n    <div>\n    <Nav>\n      {links.map((link) => {\n        return currentLink === link ? (\n          <CurrentLink key={link}>{link}</CurrentLink>\n        ) : (\n          <NavLink to={`/account/${link}`} key={link}>{link}</NavLink>\n        );\n      })}\n    </Nav>\n    </div>\n  );\n}\n\nexport default AccountNav;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useUserSettings.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Orders.js",["243"],"import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport Order from '../../../components/shop/account/Order';\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nfunction Orders() {\n  const { currentUser } = useAuth();\n  const { getOrders } = useFirestore();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const orders = await getOrders(currentUser.uid);\n      setOrders(orders);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Heading>Orders</Heading>\n        <div>\n          {orders.map(order => {\n            return (\n              <Order order={order} key={order.id}/>\n          )})}\n        </div>\n    </div>\n  );\n}\n\nexport default Orders;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Addresses.js",["244","245"],"import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\n\n// Icons\nimport { ReactComponent as Plus } from '../../../assets/icons/icon-plus.svg';\nimport { ReactComponent as Minus } from '../../../assets/icons/icon-minus.svg';\nimport { ReactComponent as Close } from '../../../assets/icons/icon-close.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 27%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 70%)', // Bright Grey\n  text: 'hsl(0, 0%, 85%)',\n  label: 'hsl(0, 0%, 100%)',\n  dark: 'hsl(0, 0%, 0%)',\n};\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: 'Playfair Display', sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormHeading = styled(Subheading)`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Category = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  margin: 1rem 0;\n  color: ${colors.secondary};\n`;\n\nconst AddressBook = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  margin: 2rem;\n  grid-gap: 2rem;\n`;\n\nconst Address = styled.div`\n  padding: 1rem;\n  border: 1px solid ${colors.tertiary};\n  border-radius: 5px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem 5rem;\n  margin-bottom: 2.5rem;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst ButtonEmpty = styled(Button)`\n  background: transparent;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n\n  &:hover {\n    color: ${colors.dark};\n  }\n`;\n\nconst EditModal = styled(Modal)`\n  position: absolute;\n  max-width: 600px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${colors.label};\n  padding: 4rem;\n  border: 1px solid ${colors.secondary};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst EditHeading = styled.h2`\n  text-align: center;\n  font-family: 'Playfair Display', sans-serif;\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Icon = styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: 1rem;\n  right: 1rem;\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nfunction Addresses() {\n  const [addresses, setAddresses] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  // Add address\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [country, setCountry] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Edit address\n  const [firstNameEdit, setFirstNameEdit] = useState('');\n  const [lastNameEdit, setLastNameEdit] = useState('');\n  const [addressEdit, setAddressEdit] = useState('');\n  const [cityEdit, setCityEdit] = useState('');\n  const [zipCodeEdit, setZipCodeEdit] = useState('');\n  const [countryEdit, setCountryEdit] = useState('');\n  const [emailEdit, setEmailEdit] = useState('');\n  const [phoneEdit, setPhoneEdit] = useState('');\n  const [messageEdit, setMessageEdit] = useState('');\n\n  const { currentUser } = useAuth();\n  const {\n    addAddress,\n    deleteAddress,\n    editAddress,\n    getAddresses,\n    addressListener,\n  } = useFirestore();\n\n  useEffect(() => {\n    (async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = addressListener(currentUser.uid, async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n    });\n    return unsubscribe;\n  }, []);\n\n  const handleAddAddress = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    try {\n      await addAddress(\n        currentUser.uid,\n        firstName,\n        lastName,\n        address,\n        zipCode,\n        city,\n        country,\n        phone,\n        email\n      );\n      setFirstName('');\n      setLastName('');\n      setAddress('');\n      setZipCode('');\n      setCity('');\n      setCountry('');\n      setPhone('');\n      setEmail('');\n      setMessage('Your address was successfully saved.');\n    } catch (e) {\n      setMessage('Sorry, we could not add your address.');\n    }\n  };\n\n  const openEdit = (address) => {\n    setIsEditing(true);\n    setFirstNameEdit(address.firstName);\n    setLastNameEdit(address.lastName);\n    setAddressEdit(address.address);\n    setCityEdit(address.city);\n    setZipCodeEdit(address.zipCode);\n    setCountryEdit(address.country);\n    setEmailEdit(address.email);\n    setPhoneEdit(address.phone);\n  };\n\n  return (\n    <div>\n      <Heading>Address Book</Heading>\n      <div>\n        <Subheading>Current addresses</Subheading>\n        {addresses.length === 0 ? (\n          <Instructions>\n            <div>You do not currently have any saved addresses.</div>\n            <div>Add one by completing the form below.</div>\n          </Instructions>\n        ) : (\n          <AddressBook>\n            {addresses.map((address) => {\n              return (\n                <>\n                  <Address>\n                    <strong>\n                      {address.firstName} {address.lastName}\n                    </strong>\n                    <div>{address.address}</div>\n                    <div>\n                      {address.zipCode} {address.city}\n                    </div>\n                    <div>{address.country}</div>\n\n                    <Buttons>\n                      <ButtonEmpty onClick={() => openEdit(address)}>\n                        Edit\n                      </ButtonEmpty>\n                      <Button\n                        onClick={() =>\n                          deleteAddress(currentUser.uid, address.id)\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </Buttons>\n                  </Address>\n\n                  <EditModal\n                    isOpen={isEditing}\n                    onRequestClose={() => setIsEditing(false)}\n                    style={{\n                      overlay: {\n                        backgroundColor: 'rgba(255, 255, 255, .55)',\n                      },\n                    }}\n                  >\n                    <EditHeading>Edit your address</EditHeading>\n                    <Icon onClick={() => setIsEditing(false)}><Close /></Icon>\n                    <Form\n                      onSubmit={async (e) => {\n                        e.preventDefault();\n                        setMessageEdit('');\n\n                        try {\n                        await editAddress(\n                          currentUser.uid,\n                          address.id,\n                          firstNameEdit,\n                          lastNameEdit,\n                          addressEdit,\n                          zipCodeEdit,\n                          cityEdit,\n                          countryEdit,\n                          phoneEdit,\n                          emailEdit\n                        );\n                          setIsEditing(false);\n                        } catch(e) {\n                          setMessageEdit('Sorry, we could not update your address.')\n                        }\n                      }}\n                    >\n                      <Category>General</Category>\n                      <Fields>\n                        <Field>\n                          <Label htmlFor='first_name_edit'>First Name</Label>\n                          <Input\n                            type='text'\n                            value={firstNameEdit}\n                            id='first_name_edit'\n                            onChange={(e) => setFirstNameEdit(e.target.value)}\n                            placeholder='Enter your first name'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='last_name_edit'>Last Name</Label>\n                          <Input\n                            type='text'\n                            value={lastNameEdit}\n                            id='last_name_edit'\n                            onChange={(e) => setLastNameEdit(e.target.value)}\n                            placeholder='Enter your last name'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='email_edit'>Email</Label>\n                          <Input\n                            type='email'\n                            id='email_edit'\n                            value={emailEdit}\n                            onChange={(e) => setEmailEdit(e.target.value)}\n                            placeholder='Enter your email'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='phone_edit'>Phone Number</Label>\n                          <Input\n                            type='tel'\n                            id='phone_edit'\n                            value={phoneEdit}\n                            onChange={(e) => setPhoneEdit(e.target.value)}\n                            placeholder='Enter your phone number'\n                          />\n                        </Field>\n                      </Fields>\n\n                      <Category>Delivery</Category>\n\n                      <Fields>\n                        <Field>\n                          <Label htmlFor='address_edit'>Address</Label>\n                          <Input\n                            type='text'\n                            id='address_edit'\n                            value={addressEdit}\n                            onChange={(e) => setAddressEdit(e.target.value)}\n                            placeholder='Enter your address'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='zip_code_edit'>Zip Code</Label>\n                          <Input\n                            type='text'\n                            id='zip_code_edit'\n                            value={zipCodeEdit}\n                            onChange={(e) => setZipCodeEdit(e.target.value)}\n                            placeholder='Enter your zip code'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='city_edit'>City</Label>\n                          <Input\n                            type='text'\n                            id='city_edit'\n                            value={cityEdit}\n                            onChange={(e) => setCityEdit(e.target.value)}\n                            placeholder='Enter your city'\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor='country_edit'>Country</Label>\n                          <Input\n                            type='text'\n                            id='country_edit'\n                            value={countryEdit}\n                            onChange={(e) => setCountryEdit(e.target.value)}\n                            placeholder='Enter your country'\n                          />\n                        </Field>\n                      </Fields>\n                      <Buttons>\n                        <ButtonEmpty onClick={() => setIsEditing(false)}>\n                          Cancel\n                        </ButtonEmpty>\n                        <Button type='submit'>Edit your address</Button>\n                      </Buttons>\n                      <Message>{messageEdit}</Message>\n                    </Form>\n                  </EditModal>\n                </>\n              );\n            })}\n          </AddressBook>\n        )}\n\n        <FormHeading onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n          Add a new address\n          {isDropdownOpen ? <Minus /> : <Plus />}\n        </FormHeading>\n\n        {isDropdownOpen && (\n          <Form onSubmit={handleAddAddress}>\n            <Category>General</Category>\n            <Fields>\n              <Field>\n                <Label htmlFor='first_name'>First Name</Label>\n                <Input\n                  type='text'\n                  value={firstName}\n                  id='first_name'\n                  onChange={(e) => setFirstName(e.target.value)}\n                  placeholder='Enter your first name'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='last_name'>Last Name</Label>\n                <Input\n                  type='text'\n                  value={lastName}\n                  id='last_name'\n                  onChange={(e) => setLastName(e.target.value)}\n                  placeholder='Enter your last name'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='email'>Email</Label>\n                <Input\n                  type='email'\n                  id='email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder='Enter your email'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='phone'>Phone Number</Label>\n                <Input\n                  type='tel'\n                  id='phone'\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  placeholder='Enter your phone number'\n                />\n              </Field>\n            </Fields>\n\n            <Category>Delivery</Category>\n\n            <Fields>\n              <Field>\n                <Label htmlFor='address'>Address</Label>\n                <Input\n                  type='text'\n                  id='address'\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                  placeholder='Enter your address'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='zip_code'>Zip Code</Label>\n                <Input\n                  type='text'\n                  id='zip_code'\n                  value={zipCode}\n                  onChange={(e) => setZipCode(e.target.value)}\n                  placeholder='Enter your zip code'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='city'>City</Label>\n                <Input\n                  type='text'\n                  id='city'\n                  value={city}\n                  onChange={(e) => setCity(e.target.value)}\n                  placeholder='Enter your city'\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor='country'>Country</Label>\n                <Input\n                  type='text'\n                  id='country'\n                  value={country}\n                  onChange={(e) => setCountry(e.target.value)}\n                  placeholder='Enter your country'\n                />\n              </Field>\n            </Fields>\n\n            <Button type='submit'>Add a new address</Button>\n            <Message>{message}</Message>\n          </Form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Addresses;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/account/Order.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Shop.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/account/Account.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/orders/Tracking.js",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":56,"column":10,"nodeType":"252","messageId":"253","endLine":56,"endColumn":17},{"ruleId":"250","severity":1,"message":"254","line":56,"column":19,"nodeType":"252","messageId":"253","endLine":56,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":32,"column":6,"nodeType":"257","endLine":32,"endColumn":13,"suggestions":"258"},{"ruleId":"255","severity":1,"message":"259","line":307,"column":6,"nodeType":"257","endLine":307,"endColumn":8,"suggestions":"260"},{"ruleId":"255","severity":1,"message":"261","line":107,"column":6,"nodeType":"257","endLine":107,"endColumn":8,"suggestions":"262"},{"ruleId":"255","severity":1,"message":"261","line":153,"column":6,"nodeType":"257","endLine":153,"endColumn":8,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"264","line":157,"column":6,"nodeType":"257","endLine":157,"endColumn":8,"suggestions":"265"},{"ruleId":"255","severity":1,"message":"266","line":86,"column":6,"nodeType":"257","endLine":86,"endColumn":16,"suggestions":"267"},{"ruleId":"255","severity":1,"message":"268","line":93,"column":6,"nodeType":"257","endLine":93,"endColumn":8,"suggestions":"269"},{"ruleId":"255","severity":1,"message":"270","line":243,"column":6,"nodeType":"257","endLine":243,"endColumn":8,"suggestions":"271"},{"ruleId":"255","severity":1,"message":"272","line":252,"column":6,"nodeType":"257","endLine":252,"endColumn":8,"suggestions":"273"},{"ruleId":"255","severity":1,"message":"274","line":203,"column":6,"nodeType":"257","endLine":203,"endColumn":8,"suggestions":"275"},{"ruleId":"255","severity":1,"message":"276","line":173,"column":6,"nodeType":"257","endLine":173,"endColumn":8,"suggestions":"277"},{"ruleId":"255","severity":1,"message":"270","line":115,"column":6,"nodeType":"257","endLine":115,"endColumn":8,"suggestions":"278"},{"ruleId":"255","severity":1,"message":"279","line":113,"column":6,"nodeType":"257","endLine":113,"endColumn":8,"suggestions":"280"},{"ruleId":"255","severity":1,"message":"281","line":76,"column":6,"nodeType":"257","endLine":76,"endColumn":8,"suggestions":"282"},{"ruleId":"255","severity":1,"message":"283","line":74,"column":6,"nodeType":"257","endLine":74,"endColumn":17,"suggestions":"284"},{"ruleId":"250","severity":1,"message":"285","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"255","severity":1,"message":"286","line":120,"column":6,"nodeType":"257","endLine":120,"endColumn":8,"suggestions":"287"},{"ruleId":"250","severity":1,"message":"288","line":52,"column":7,"nodeType":"252","messageId":"253","endLine":52,"endColumn":19},{"ruleId":"255","severity":1,"message":"289","line":218,"column":6,"nodeType":"257","endLine":218,"endColumn":8,"suggestions":"290"},{"ruleId":"255","severity":1,"message":"291","line":226,"column":6,"nodeType":"257","endLine":226,"endColumn":8,"suggestions":"292"},{"ruleId":"250","severity":1,"message":"293","line":54,"column":17,"nodeType":"252","messageId":"253","endLine":54,"endColumn":25},{"ruleId":"255","severity":1,"message":"294","line":24,"column":6,"nodeType":"257","endLine":24,"endColumn":8,"suggestions":"295"},{"ruleId":"255","severity":1,"message":"296","line":222,"column":6,"nodeType":"257","endLine":222,"endColumn":8,"suggestions":"297"},{"ruleId":"255","severity":1,"message":"298","line":230,"column":6,"nodeType":"257","endLine":230,"endColumn":8,"suggestions":"299"},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategoryItems'. Either include it or remove the dependency array.","ArrayExpression",["302"],"React Hook useEffect has missing dependencies: 'getItem' and 'match.params.itemId'. Either include them or remove the dependency array.",["303"],"React Hook useEffect has a missing dependency: 'getShopCategories'. Either include it or remove the dependency array.",["304"],["305"],"React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array. If 'setHeight' needs the current value of 'nav', you can also switch to useReducer instead of useState and read 'nav' in the reducer.",["306"],"React Hook useEffect has missing dependencies: 'currentUser.uid', 'item.id', and 'updateCartQuantity'. Either include them or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["308"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getCart'. Either include them or remove the dependency array.",["309"],"React Hook useEffect has missing dependencies: 'cartListener', 'currentUser', and 'getCart'. Either include them or remove the dependency array.",["310"],"React Hook useEffect has missing dependencies: 'currentUser.isAnonymous', 'currentUser.uid', and 'getCards'. Either include them or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'currentUser.isAnonymous', 'currentUser.uid', and 'getAddresses'. Either include them or remove the dependency array.",["312"],["313"],"React Hook useEffect has missing dependencies: 'getOrder' and 'match.params.id'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["315"],"React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.",["316"],"'AccountNav' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.uid', 'getUserName', and 'setEmail'. Either include them or remove the dependency array.",["317"],"'Instructions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'getCards'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has missing dependencies: 'cardListener', 'currentUser.uid', and 'getCards'. Either include them or remove the dependency array.",["319"],"'setLinks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'getOrders'. Either include them or remove the dependency array.",["320"],"React Hook useEffect has missing dependencies: 'currentUser.uid' and 'getAddresses'. Either include them or remove the dependency array.",["321"],"React Hook useEffect has missing dependencies: 'addressListener', 'currentUser.uid', and 'getAddresses'. Either include them or remove the dependency array.",["322"],"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"327","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"336","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [getCategoryItems, match]",{"range":"363","text":"364"},"Update the dependencies array to be: [getItem, match.params.itemId]",{"range":"365","text":"366"},"Update the dependencies array to be: [getShopCategories]",{"range":"367","text":"368"},{"range":"369","text":"368"},"Update the dependencies array to be: [nav]",{"range":"370","text":"371"},"Update the dependencies array to be: [currentUser.uid, item.id, quantity, updateCartQuantity]",{"range":"372","text":"373"},"Update the dependencies array to be: [images]",{"range":"374","text":"375"},"Update the dependencies array to be: [currentUser, getCart]",{"range":"376","text":"377"},"Update the dependencies array to be: [cartListener, currentUser, getCart]",{"range":"378","text":"379"},"Update the dependencies array to be: [currentUser.isAnonymous, currentUser.uid, getCards]",{"range":"380","text":"381"},"Update the dependencies array to be: [currentUser.isAnonymous, currentUser.uid, getAddresses]",{"range":"382","text":"383"},{"range":"384","text":"377"},"Update the dependencies array to be: [getOrder, match.params.id]",{"range":"385","text":"386"},"Update the dependencies array to be: [location.state]",{"range":"387","text":"388"},"Update the dependencies array to be: [favorites, getItem]",{"range":"389","text":"390"},"Update the dependencies array to be: [currentUser.email, currentUser.uid, getUserName, setEmail]",{"range":"391","text":"392"},"Update the dependencies array to be: [currentUser.uid, getCards]",{"range":"393","text":"394"},"Update the dependencies array to be: [cardListener, currentUser.uid, getCards]",{"range":"395","text":"396"},"Update the dependencies array to be: [currentUser.uid, getOrders]",{"range":"397","text":"398"},"Update the dependencies array to be: [currentUser.uid, getAddresses]",{"range":"399","text":"400"},"Update the dependencies array to be: [addressListener, currentUser.uid, getAddresses]",{"range":"401","text":"402"},[852,859],"[getCategoryItems, match]",[6973,6975],"[getItem, match.params.itemId]",[2378,2380],"[getShopCategories]",[3747,3749],[3819,3821],"[nav]",[1873,1883],"[currentUser.uid, item.id, quantity, updateCartQuantity]",[2472,2474],"[images]",[4836,4838],"[currentUser, getCart]",[5069,5071],"[cartListener, currentUser, getCart]",[4467,4469],"[currentUser.isAnonymous, currentUser.uid, getCards]",[4212,4214],"[currentUser.isAnonymous, currentUser.uid, getAddresses]",[2257,2259],[2439,2441],"[getOrder, match.params.id]",[1732,1734],"[location.state]",[1800,1811],"[favorites, getItem]",[2823,2825],"[currentUser.email, currentUser.uid, getUserName, setEmail]",[4702,4704],"[currentUser.uid, getCards]",[4909,4911],"[cardListener, currentUser.uid, getCards]",[690,692],"[currentUser.uid, getOrders]",[5122,5124],"[currentUser.uid, getAddresses]",[5348,5350],"[addressListener, currentUser.uid, getAddresses]"]