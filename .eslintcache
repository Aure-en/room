[{"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js":"1","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js":"2","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js":"3","/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js":"4","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignUp.js":"5","/home/aureen/the_odin_project/room_homepage/src/hooks/useUserSettings.js":"6","/home/aureen/the_odin_project/room_homepage/src/hooks/useShop.js":"7","/home/aureen/the_odin_project/room_homepage/src/hooks/useOrder.js":"8","/home/aureen/the_odin_project/room_homepage/src/hooks/useCart.js":"9","/home/aureen/the_odin_project/room_homepage/src/hooks/useDesign.js":"10","/home/aureen/the_odin_project/room_homepage/src/hooks/useAddress.js":"11","/home/aureen/the_odin_project/room_homepage/src/hooks/usePayment.js":"12","/home/aureen/the_odin_project/room_homepage/src/hooks/useUser.js":"13","/home/aureen/the_odin_project/room_homepage/src/hooks/useCarousel.js":"14","/home/aureen/the_odin_project/room_homepage/src/hooks/useWindowSize.js":"15","/home/aureen/the_odin_project/room_homepage/src/index.jsx":"16","/home/aureen/the_odin_project/room_homepage/src/App.jsx":"17","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.jsx":"18","/home/aureen/the_odin_project/room_homepage/src/contexts/FavoriteContext.jsx":"19","/home/aureen/the_odin_project/room_homepage/src/routes/general/About.jsx":"20","/home/aureen/the_odin_project/room_homepage/src/routes/general/Home.jsx":"21","/home/aureen/the_odin_project/room_homepage/src/routes/general/Contact.jsx":"22","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Shop.jsx":"23","/home/aureen/the_odin_project/room_homepage/src/routes/account/Account.jsx":"24","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.jsx":"25","/home/aureen/the_odin_project/room_homepage/src/routes/account/Favorite.jsx":"26","/home/aureen/the_odin_project/room_homepage/src/routes/account/Entry.jsx":"27","/home/aureen/the_odin_project/room_homepage/src/routes/general/HandleShop.jsx":"28","/home/aureen/the_odin_project/room_homepage/src/components/Nav.jsx":"29","/home/aureen/the_odin_project/room_homepage/src/components/Carousel.jsx":"30","/home/aureen/the_odin_project/room_homepage/src/routes/types/PublicRoute.jsx":"31","/home/aureen/the_odin_project/room_homepage/src/routes/types/PrivateRoute.jsx":"32","/home/aureen/the_odin_project/room_homepage/src/routes/shop/orders/Tracking.jsx":"33","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Category.jsx":"34","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Main.jsx":"35","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/ItemDetails.jsx":"36","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Design.jsx":"37","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/NewIn.jsx":"38","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.jsx":"39","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.jsx":"40","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Confirmation.jsx":"41","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Orders.jsx":"42","/home/aureen/the_odin_project/room_homepage/src/components/account/AccountNav.jsx":"43","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Addresses.jsx":"44","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Payment.jsx":"45","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Settings.jsx":"46","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.jsx":"47","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.jsx":"48","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Footer.jsx":"49","/home/aureen/the_odin_project/room_homepage/src/components/account/SignIn.jsx":"50","/home/aureen/the_odin_project/room_homepage/src/components/account/SignUp.jsx":"51","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ShopItemPreview.jsx":"52","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.jsx":"53","/home/aureen/the_odin_project/room_homepage/src/components/account/Order.jsx":"54","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Filters.jsx":"55","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/SideFilters.jsx":"56","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Sort.jsx":"57","/home/aureen/the_odin_project/room_homepage/src/components/FullCarousel.jsx":"58","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Designs.jsx":"59","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Recommendations.jsx":"60","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ImagesPreview.jsx":"61","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartPreview.jsx":"62","/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.jsx":"63","/home/aureen/the_odin_project/room_homepage/src/components/account/AccessSettings.jsx":"64","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.jsx":"65","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ImageMagnifier.jsx":"66","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.jsx":"67"},{"size":641,"mtime":1612805752693,"results":"68","hashOfConfig":"69"},{"size":444,"mtime":1611937493436,"results":"70","hashOfConfig":"69"},{"size":2345,"mtime":1612805998865,"results":"71","hashOfConfig":"69"},{"size":367,"mtime":1612806047965,"results":"72","hashOfConfig":"69"},{"size":1892,"mtime":1612807550657,"results":"73","hashOfConfig":"69"},{"size":3727,"mtime":1612806076765,"results":"74","hashOfConfig":"69"},{"size":3439,"mtime":1612805962973,"results":"75","hashOfConfig":"69"},{"size":1348,"mtime":1612805935421,"results":"76","hashOfConfig":"69"},{"size":2747,"mtime":1612805892853,"results":"77","hashOfConfig":"69"},{"size":574,"mtime":1612805922069,"results":"78","hashOfConfig":"69"},{"size":5121,"mtime":1612807530845,"results":"79","hashOfConfig":"69"},{"size":3330,"mtime":1612805948101,"results":"80","hashOfConfig":"69"},{"size":1061,"mtime":1612806061149,"results":"81","hashOfConfig":"69"},{"size":2950,"mtime":1612805879685,"results":"82","hashOfConfig":"69"},{"size":532,"mtime":1612806089225,"results":"83","hashOfConfig":"69"},{"size":197,"mtime":1612807827357,"results":"84","hashOfConfig":"69"},{"size":1099,"mtime":1615072089927,"results":"85","hashOfConfig":"69"},{"size":1690,"mtime":1612807507029,"results":"86","hashOfConfig":"69"},{"size":2289,"mtime":1612807487657,"results":"87","hashOfConfig":"69"},{"size":3095,"mtime":1612808553205,"results":"88","hashOfConfig":"69"},{"size":4059,"mtime":1612808528625,"results":"89","hashOfConfig":"69"},{"size":6822,"mtime":1612806264857,"results":"90","hashOfConfig":"69"},{"size":2929,"mtime":1612807797285,"results":"91","hashOfConfig":"69"},{"size":2594,"mtime":1612807626469,"results":"92","hashOfConfig":"69"},{"size":10638,"mtime":1612808282297,"results":"93","hashOfConfig":"69"},{"size":3136,"mtime":1612808186169,"results":"94","hashOfConfig":"69"},{"size":2134,"mtime":1615071288086,"results":"95","hashOfConfig":"69"},{"size":211,"mtime":1612806271133,"results":"96","hashOfConfig":"69"},{"size":3665,"mtime":1612805661245,"results":"97","hashOfConfig":"69"},{"size":5901,"mtime":1612805635097,"results":"98","hashOfConfig":"69"},{"size":555,"mtime":1612806571849,"results":"99","hashOfConfig":"69"},{"size":571,"mtime":1612806565457,"results":"100","hashOfConfig":"69"},{"size":3633,"mtime":1612806537629,"results":"101","hashOfConfig":"69"},{"size":5809,"mtime":1612807893357,"results":"102","hashOfConfig":"69"},{"size":3597,"mtime":1612806500725,"results":"103","hashOfConfig":"69"},{"size":19005,"mtime":1612808139317,"results":"104","hashOfConfig":"69"},{"size":3930,"mtime":1612808170685,"results":"105","hashOfConfig":"69"},{"size":5687,"mtime":1612808157169,"results":"106","hashOfConfig":"69"},{"size":11280,"mtime":1612806697629,"results":"107","hashOfConfig":"69"},{"size":11767,"mtime":1612807877385,"results":"108","hashOfConfig":"69"},{"size":4180,"mtime":1612806368169,"results":"109","hashOfConfig":"69"},{"size":981,"mtime":1612806141273,"results":"110","hashOfConfig":"69"},{"size":2266,"mtime":1612806626457,"results":"111","hashOfConfig":"69"},{"size":15456,"mtime":1612806125053,"results":"112","hashOfConfig":"69"},{"size":11518,"mtime":1612806160425,"results":"113","hashOfConfig":"69"},{"size":8189,"mtime":1612806179981,"results":"114","hashOfConfig":"69"},{"size":4699,"mtime":1612807394801,"results":"115","hashOfConfig":"69"},{"size":4922,"mtime":1612807390669,"results":"116","hashOfConfig":"69"},{"size":2971,"mtime":1612805232081,"results":"117","hashOfConfig":"69"},{"size":4401,"mtime":1612806642137,"results":"118","hashOfConfig":"69"},{"size":5002,"mtime":1612806669313,"results":"119","hashOfConfig":"69"},{"size":3443,"mtime":1612805108065,"results":"120","hashOfConfig":"69"},{"size":35378,"mtime":1612807404873,"results":"121","hashOfConfig":"69"},{"size":4676,"mtime":1612804753537,"results":"122","hashOfConfig":"69"},{"size":16823,"mtime":1612803831533,"results":"123","hashOfConfig":"69"},{"size":14960,"mtime":1612805152921,"results":"124","hashOfConfig":"69"},{"size":1249,"mtime":1612805215149,"results":"125","hashOfConfig":"69"},{"size":5487,"mtime":1612808497617,"results":"126","hashOfConfig":"69"},{"size":4501,"mtime":1612807227253,"results":"127","hashOfConfig":"69"},{"size":3885,"mtime":1612807359157,"results":"128","hashOfConfig":"69"},{"size":4491,"mtime":1612807344489,"results":"129","hashOfConfig":"69"},{"size":3137,"mtime":1612808351781,"results":"130","hashOfConfig":"69"},{"size":3875,"mtime":1612807209521,"results":"131","hashOfConfig":"69"},{"size":3309,"mtime":1612806617049,"results":"132","hashOfConfig":"69"},{"size":9013,"mtime":1612807398285,"results":"133","hashOfConfig":"69"},{"size":1777,"mtime":1612807267389,"results":"134","hashOfConfig":"69"},{"size":4047,"mtime":1612806817169,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"9sjnut",{"filePath":"139","messages":"140","errorCount":6,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"138"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":19,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"138"},{"filePath":"165","messages":"166","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"138"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"170","messages":"171","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"138"},{"filePath":"182","messages":"183","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"138"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"138"},{"filePath":"192","messages":"193","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"138"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"138"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"138"},{"filePath":"216","messages":"217","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"138"},{"filePath":"222","messages":"223","errorCount":6,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"138"},{"filePath":"228","messages":"229","errorCount":20,"warningCount":0,"fixableErrorCount":10,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"138"},{"filePath":"234","messages":"235","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":35,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"138"},{"filePath":"240","messages":"241","errorCount":6,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":20,"warningCount":0,"fixableErrorCount":11,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"138"},{"filePath":"246","messages":"247","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":7,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"138"},{"filePath":"255","messages":"256","errorCount":12,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"138"},{"filePath":"263","messages":"264","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"138"},{"filePath":"266","messages":"267","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"138"},{"filePath":"269","messages":"270","errorCount":3,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":5,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"138"},{"filePath":"275","messages":"276","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":75,"warningCount":0,"fixableErrorCount":32,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"138"},{"filePath":"281","messages":"282","errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","errorCount":50,"warningCount":0,"fixableErrorCount":36,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"138"},{"filePath":"287","messages":"288","errorCount":52,"warningCount":0,"fixableErrorCount":38,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"138"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"292","messages":"293","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"138"},{"filePath":"295","messages":"296","errorCount":8,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"138"},{"filePath":"298","messages":"299","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"138"},{"filePath":"301","messages":"302","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"138"},{"filePath":"304","messages":"305","errorCount":9,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"138"},{"filePath":"307","messages":"308","errorCount":10,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"138"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"312","messages":"313","errorCount":6,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"138"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"317","messages":"318","errorCount":10,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"138"},"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js",[],["320","321","322","323","324"],"/home/aureen/the_odin_project/room_homepage/src/utils/utils.js",["325","326","327","328","329","330"],"export const formatNavLink = (link) => {\n  return (\n    link\n      // Replace '_' with spaces\n      .replace(/_/gi, ' ')\n      // Uppercase the first letter of each words except \"of\"\n      .replace(/\\b(\\w+?)\\b/gi, (match, content) => {\n        return capitalize(content);\n      })\n  );\n};\n\nconst capitalize = (word) => {\n  if (!['of', 'and'].includes(word)) {\n    return word[0].toUpperCase() + word.slice(1);\n  } else {\n    return word\n  }\n};\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js",["331"],"import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nfunction useSignIn() {\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { signIn, resetPassword } = useAuth();\n  const history = useHistory();\n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  async function handleSignIn(isPaying) {\n    clearErrors();\n\n    if (!password && !email) {\n      setPasswordError(\"This field is required\");\n      setEmailError(\"This field is required\");\n      return;\n    }\n    if (!password) {\n      setPasswordError(\"This field is required\");\n      return;\n    }\n    if (!email) {\n      setEmailError(\"This field is required\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await signIn(email, password);\n      isPaying ? history.push(\"/shop/cart\") : history.push(\"/shop\");\n      setLoading(false);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-not-found\":\n        case \"auth/wrong-password\":\n          setEmailError(\"Login or password is invalid\");\n          setPasswordError(\"Login or password is invalid\");\n          setLoading(false);\n          break;\n        default:\n          setPasswordError(\"Sorry, the sign in failed.\");\n          setLoading(false);\n      }\n    }\n  }\n\n  const handleForgotPassword = async () => {\n    clearErrors();\n    if (!email) {\n      setEmailError(\"This field is required\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await resetPassword(email);\n      setLoading(false);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-not-found\":\n          setEmailError(\"Email does not exist\");\n          break;\n        default:\n          setEmailError(\"Sorry, we were unable to reset your password.\");\n      }\n    }\n  };\n\n  return {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    emailError,\n    setEmailError,\n    passwordError,\n    setPasswordError,\n    loading,\n    setLoading,\n    handleSignIn,\n    handleForgotPassword,\n  };\n}\n\nexport default useSignIn;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useSignUp.js",["332"],"import { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport useUser from \"./useUser\";\n\nfunction useSignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [terms, setTerms] = useState(false);\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [isFormCompleted, setIsFormCompleted] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const { currentUser, signUp, signUpFromAnonymous } = useAuth();\n  const { createUser } = useUser();\n\n  useEffect(() => {\n    email && firstName && lastName && password && terms\n      ? setIsFormCompleted(false)\n      : setIsFormCompleted(true);\n  }, [email, firstName, lastName, password, terms]);\n\n  async function handleSignUp() {\n    setLoading(true);\n    setEmailError(\"\");\n    setPasswordError(\"\");\n\n    try {\n      const user =\n        currentUser && currentUser.isAnonymous\n          ? await signUpFromAnonymous(email, password)\n          : await signUp(email, password);\n      await createUser(user.user.uid, firstName, lastName, email);\n      setLoading(false);\n    } catch (err) {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n        default:\n      }\n      setLoading(false);\n    }\n  }\n\n  return {\n    email,\n    setEmail,\n    firstName,\n    setFirstName,\n    lastName,\n    setLastName,\n    password,\n    setPassword,\n    terms,\n    setTerms,\n    emailError,\n    passwordError,\n    isFormCompleted,\n    loading,\n    handleSignUp,\n  };\n}\n\nexport default useSignUp;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useUserSettings.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useShop.js",["333","334"],"import { firestore } from \"../firebase/firebase\";\n\nfunction useShop() {\n  // Create a document where we'll store an item.\n  // Returns the id we will attribute to the item.\n  const createItem = async () => {\n    return firestore.collection(\"products\").add({});\n  };\n\n  // Puts the item data in the document.\n  const addItem = async (\n    id,\n    name,\n    price,\n    type,\n    dimensions,\n    images,\n    description,\n    colors,\n    additional,\n    options,\n    categories,\n    queries\n  ) => {\n    await firestore.collection(\"products\").doc(id).set({\n      id,\n      name,\n      price,\n      type,\n      dimensions,\n      images,\n      description,\n      colors,\n      additional,\n      options,\n      categories,\n      queries,\n      new: false,\n      date: new Date(),\n    });\n    return id;\n  };\n\n  // Returns an object representing all the shopping categories.\n  const getShopCategories = async () => {\n    const categories = await firestore\n      .collection(\"navigation\")\n      .doc(\"categories\")\n      .get();\n    return categories.data();\n  };\n\n  // Returns all the products we are selling.\n  const getShopItems = async () => {\n    const itemsList = [];\n    const items = await firestore.collection(\"products\").get();\n    items.docs.map((doc) => itemsList.push(doc.data()));\n    return itemsList;\n  };\n\n  // Returns only the products from a certain category\n  const getCategoryItems = async (category) => {\n    const itemsList = [];\n    const items = await firestore\n      .collection(\"products\")\n      .where(\"categories\", \"array-contains\", category)\n      .get();\n    items.docs.map((doc) => itemsList.push(doc.data()));\n    return itemsList;\n  };\n\n  const getNewItems = async () => {\n    const itemsList = [];\n    const items = await firestore\n      .collection(\"products\")\n      .where(\"new\", \"==\", true)\n      .get();\n    items.docs.map((doc) => itemsList.push(doc.data()));\n    return itemsList;\n  };\n\n  // Gets an item's data\n  const getItem = async (id) => {\n    const doc = await firestore.collection(\"products\").doc(id).get();\n    return doc.data();\n  };\n\n  // Gets similar items to recommend them to the user\n  const getRecommendations = async (id) => {\n    const item = await getItem(id);\n    const recommendations = [];\n\n    const sameCollection = await firestore\n      .collection(\"products\")\n      .where(\"name\", \"==\", item.name)\n      .where(\"id\", \"!=\", item.id)\n      .limit(12)\n      .get();\n\n    const sameCategory = await firestore\n      .collection(\"products\")\n      .where(\n        \"categories\",\n        \"array-contains\",\n        item.categories[item.categories.length - 1]\n      )\n      .where(\"id\", \"!=\", item.id)\n      .limit(12)\n      .get();\n\n    sameCollection.docs.forEach((item) => recommendations.push(item.data()));\n    // Filter to avoid having the same item twice.\n    sameCategory.docs.forEach(\n      (item) =>\n        recommendations.filter(\n          (recommendation) => recommendation.id === item.id\n        ).length === 0 && recommendations.push(item.data())\n    );\n    return recommendations;\n  };\n\n  // Search for an item\n  const searchItem = (query) => {\n    return firestore\n      .collection(\"products\")\n      .where(\"queries.search\", \"array-contains\", query)\n      .get();\n  };\n\n  return {\n    createItem,\n    addItem,\n    getShopCategories,\n    getShopItems,\n    getCategoryItems,\n    getNewItems,\n    getItem,\n    getRecommendations,\n    searchItem,\n  };\n}\n\nexport default useShop;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useOrder.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useCart.js",["335","336"],"import { firestore } from \"../firebase/firebase\";\n\nfunction useCart() {\n  // Add an item to the user's cart\n  // In the cart, each product chosen has their own id.\n  const addToCart = async (\n    userId,\n    productId,\n    name,\n    image,\n    color,\n    options,\n    quantity,\n    type,\n    price\n  ) => {\n    // If the same item is already in the cart, we simply increase the quantity.\n    const sameItem = await firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .where(\"productId\", \"==\", productId)\n      .where(\"color\", \"==\", color)\n      .where(\"options\", \"==\", options)\n      .get();\n\n    if (sameItem.docs.length > 0) {\n      const currentQuantity = sameItem.docs[0].data().quantity;\n      sameItem.docs[0].ref.update({ quantity: +currentQuantity + +quantity });\n      return;\n    }\n\n    // If the item is not already in the cart, we create a document for it.\n    const docRef = await firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .doc();\n\n    const { id } = docRef;\n\n    return firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .doc(id)\n      .set({\n        id,\n        productId,\n        name,\n        image,\n        color,\n        options,\n        quantity,\n        type,\n        price,\n      });\n  };\n\n  const deleteFromCart = (userId, id) => {\n    return firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .doc(id)\n      .delete();\n  };\n\n  const updateCartQuantity = (userId, id, quantity) => {\n    return firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .doc(id)\n      .update({ quantity });\n  };\n\n  // To delete the cart (=subcollection), we have to retrieve all the documents within the collection and delete them.\n  const deleteCart = async (userId) => {\n    const itemsId = [];\n    const docs = await firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .get();\n    docs.forEach((doc) => itemsId.push(doc.id));\n    for (const id of itemsId) {\n      deleteFromCart(userId, id);\n    }\n  };\n\n  // Get an user's cart.\n  const getCart = async (userId) => {\n    const cart = [];\n    const items = await firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .get();\n    items.forEach((item) => cart.push(item.data()));\n    return cart;\n  };\n\n  const cartListener = (userId, callback) => {\n    return firestore\n      .collection(\"carts\")\n      .doc(userId)\n      .collection(\"items\")\n      .onSnapshot(callback);\n  };\n\n  return {\n    addToCart,\n    deleteFromCart,\n    updateCartQuantity,\n    deleteCart,\n    getCart,\n    cartListener,\n  };\n}\n\nexport default useCart;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useDesign.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useAddress.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355"],"import { useState } from \"react\";\nimport { firestore } from \"../firebase/firebase\";\n\nfunction useAddress() {\n  // Add address\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Edit address\n  const [isEditing, setIsEditing] = useState(false);\n  const [firstNameEdit, setFirstNameEdit] = useState(\"\");\n  const [lastNameEdit, setLastNameEdit] = useState(\"\");\n  const [addressEdit, setAddressEdit] = useState(\"\");\n  const [cityEdit, setCityEdit] = useState(\"\");\n  const [zipCodeEdit, setZipCodeEdit] = useState(\"\");\n  const [countryEdit, setCountryEdit] = useState(\"\");\n  const [emailEdit, setEmailEdit] = useState(\"\");\n  const [phoneEdit, setPhoneEdit] = useState(\"\");\n  const [messageEdit, setMessageEdit] = useState(\"\");\n\n  // Add an address to the user's address book\n  const addAddress = async (\n    userId,\n    firstName,\n    lastName,\n    address,\n    zipCode,\n    city,\n    country,\n    phone,\n    email\n  ) => {\n    const docRef = await firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .doc();\n    const { id } = docRef;\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .doc(id)\n      .set({\n        id,\n        firstName,\n        lastName,\n        address,\n        zipCode,\n        city,\n        country,\n        phone,\n        email,\n      });\n  };\n\n  const handleAddAddress = async (userId) => {\n    setMessage(\"\");\n    try {\n      await addAddress(\n        userId,\n        firstName,\n        lastName,\n        address,\n        zipCode,\n        city,\n        country,\n        phone,\n        email\n      );\n      setFirstName(\"\");\n      setLastName(\"\");\n      setAddress(\"\");\n      setZipCode(\"\");\n      setCity(\"\");\n      setCountry(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n      setMessage(\"Your address was successfully saved.\");\n    } catch (e) {\n      setMessage(\"Sorry, we could not add your address.\");\n    }\n  };\n\n  // Automatically enters the previous data in the fields.\n  const handleStartEditing = (address) => {\n    setIsEditing(true);\n    setFirstNameEdit(address.firstName);\n    setLastNameEdit(address.lastName);\n    setAddressEdit(address.address);\n    setCityEdit(address.city);\n    setZipCodeEdit(address.zipCode);\n    setCountryEdit(address.country);\n    setEmailEdit(address.email);\n    setPhoneEdit(address.phone);\n  };\n\n  const editAddress = (\n    userId,\n    id,\n    firstName,\n    lastName,\n    address,\n    zipCode,\n    city,\n    country,\n    phone,\n    email\n  ) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .doc(id)\n      .update({\n        firstName,\n        lastName,\n        address,\n        zipCode,\n        city,\n        country,\n        phone,\n        email,\n      });\n  };\n\n  const handleEditAddress = async (userId, addressId) => {\n    setMessageEdit(\"\");\n    try {\n      await editAddress(\n        userId,\n        addressId,\n        firstNameEdit,\n        lastNameEdit,\n        addressEdit,\n        zipCodeEdit,\n        cityEdit,\n        countryEdit,\n        phoneEdit,\n        emailEdit\n      );\n      setIsEditing(false);\n    } catch (e) {\n      setMessageEdit(\"Sorry, we could not update your address.\");\n    }\n  };\n\n\n  // Remove an address from the user's address book\n  const deleteAddress = (userId, id) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .doc(id)\n      .delete();\n  };\n\n  // Get the user's addresses\n  const getAddresses = async (userId) => {\n    const addressBook = [];\n    const addresses = await firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .get();\n    addresses.forEach((address) => addressBook.push(address.data()));\n    return addressBook;\n  };\n\n  const addressListener = (userId, callback) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"addresses\")\n      .onSnapshot(callback);\n  };\n\n  return {\n    handleAddAddress,\n    handleStartEditing,\n    handleEditAddress,\n    deleteAddress,\n    getAddresses,\n    addressListener,\n\n    firstName,\n    setFirstName,\n    lastName,\n    setLastName,\n    address,\n    setAddress,\n    city,\n    setCity,\n    zipCode,\n    setZipCode,\n    country,\n    setCountry,\n    email,\n    setEmail,\n    phone,\n    setPhone,\n    message,\n    setMessage,\n    isEditing,\n    setIsEditing,\n    firstNameEdit,\n    setFirstNameEdit,\n    lastNameEdit,\n    setLastNameEdit,\n    addressEdit,\n    setAddressEdit,\n    cityEdit,\n    setCityEdit,\n    zipCodeEdit,\n    setZipCodeEdit,\n    countryEdit,\n    setCountryEdit,\n    emailEdit,\n    setEmailEdit,\n    phoneEdit,\n    setPhoneEdit,\n    messageEdit,\n    setMessageEdit,\n  };\n}\n\nexport default useAddress;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/usePayment.js",["356","357","358","359","360","361","362","363","364"],"import { useState } from \"react\";\nimport { firestore } from \"../firebase/firebase\";\n\nfunction usePayment() {\n  // Add card\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Edit card\n  const [nameEdit, setNameEdit] = useState(\"\");\n  const [numberEdit, setNumberEdit] = useState(\"\");\n  const [dateEdit, setDateEdit] = useState(\"\");\n  const [cvcEdit, setCvcEdit] = useState(\"\");\n  const [messageEdit, setMessageEdit] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Add a card to the user's cards list\n  const addCard = async (userId, name, number, date, cvc) => {\n    const docRef = await firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .doc();\n    const { id } = docRef;\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .doc(id)\n      .set({\n        id,\n        name,\n        number,\n        date,\n        cvc,\n      });\n  };\n\n  const handleAddCard = async (userId) => {\n    setMessage(\"\");\n    try {\n      await addCard(userId, name, number, date, cvc);\n      setName(\"\");\n      setNumber(\"\");\n      setDate(\"\");\n      setCvc(\"\");\n      setMessage(\"Your card was successfully saved.\");\n    } catch (e) {\n      setMessage(\"Sorry, we could not add your card.\");\n    }\n  };\n\n  // Remove a card from the user's cards list\n  const deleteCard = (userId, id) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .doc(id)\n      .delete();\n  };\n\n  // Get the user's cards\n  const getCards = async (userId) => {\n    const cardsList = [];\n    const cards = await firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .get();\n    cards.forEach((card) => cardsList.push(card.data()));\n    return cardsList;\n  };\n\n  const handleStartEditing = (card) => {\n    setIsEditing(true);\n    setNameEdit(card.name);\n    setNumberEdit(card.number);\n    setDateEdit(card.date);\n    setCvcEdit(card.cvc);\n  };\n\n  const handleEditCard = async (userId, cardId) => {\n    setMessageEdit(\"\");\n    try {\n      await editCard(userId, cardId, nameEdit, numberEdit, dateEdit, cvcEdit);\n      setIsEditing(false);\n    } catch (e) {\n      setMessageEdit(\"Sorry, we could not update your card.\");\n    }\n  };\n\n  const editCard = (userId, id, name, number, date, cvc) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .doc(id)\n      .update({\n        name,\n        number,\n        date,\n        cvc,\n      });\n  };\n\n  const cardListener = (userId, callback) => {\n    return firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cards\")\n      .onSnapshot(callback);\n  };\n\n  return {\n    handleAddCard,\n    handleStartEditing,\n    handleEditCard,\n    deleteCard,\n    getCards,\n    cardListener,\n    name,\n    setName,\n    number,\n    setNumber,\n    date,\n    setDate,\n    cvc,\n    setCvc,\n    message,\n    nameEdit,\n    setNameEdit,\n    numberEdit,\n    setNumberEdit,\n    dateEdit,\n    setDateEdit,\n    cvcEdit,\n    setCvcEdit,\n    messageEdit,\n    isEditing,\n    setIsEditing,\n    addCard,\n  };\n}\n\nexport default usePayment;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useUser.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useCarousel.js",["365","366","367","368"],"import { useState, useEffect } from \"react\";\n\nfunction useCarousel(slides, number) {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slidesNumber, setSlidesNumber] = useState(number);\n  const [slidesGroups, setSlidesGroups] = useState([]);\n  const [transition, setTransition] = useState(0);\n  const [transitionDuration, setTransitionDuration] = useState(0.3);\n  const [isNext, setIsNext] = useState(false); // Indicates the carousel direction (previous/next)\n\n  const previous = () => {\n    setIsNext(false);\n    setTransition((prev) => prev + 100 / slidesGroups.length);\n    setCurrentSlide((prev) => {\n      return prev === 0 ? slidesGroups.length - 1 : prev - 1;\n    });\n  };\n\n  const next = () => {\n    setIsNext(true);\n    setTransition((prev) => prev - 100 / slidesGroups.length);\n    setCurrentSlide((prev) => {\n      return prev === slidesGroups.length - 1 ? 0 : prev + 1;\n    });\n  };\n\n  /* At the end of each transition:\n  - The transition duration is set to 0. It allows us to silently reset transform: translateX to 0.\n  - The slides order is changed so that there is always a \"previous slide\" and a \"next slide\" to go to without jumping too far.\n  - Thanks to useEffect, the transition duration is put back to 0.3s to have a smooth animation.\n  */\n  const handleTransitionEnd = () => {\n    setTransitionDuration(0);\n    setTransition(-100 / slidesGroups.length);\n\n    if (isNext) {\n      setSlidesGroups((prev) => {\n        const slides = [...prev];\n        slides.pop();\n        const prevSlide = slides.shift();\n        slides.push(prevSlide);\n        slides.push(slides[0]);\n        return slides;\n      });\n    } else {\n      setSlidesGroups((prev) => {\n        const slides = [...prev];\n        slides.shift();\n        const lastSlide = slides.pop();\n        slides.unshift(lastSlide);\n        slides.unshift(slides[slides.length - 1]);\n        return slides;\n      });\n    }\n  };\n\n  // Organize slides.\n  // 1 \"slide\" = 1 group of slidesNumber mini preview pictures.\n  useEffect(() => {\n    const slidesGroups = [];\n    slides.forEach((slide, index) => {\n      index % slidesNumber === 0\n        ? slidesGroups.push([slide])\n        : slidesGroups[slidesGroups.length - 1].push(slide);\n    });\n\n    // If there aren't enough preview images to fill the last slide, empty space is added to compensate.\n    while (slidesGroups[slidesGroups.length - 1].length < slidesNumber) {\n      slidesGroups[slidesGroups.length - 1].push(null);\n    }\n    setSlidesGroups([slidesGroups[slidesGroups.length - 1], ...slidesGroups]);\n    setTransition(-100 / (slidesGroups.length + 1));\n  }, []);\n\n  useEffect(() => {\n    if (transitionDuration === 0) {\n      setTransitionDuration(0.3);\n    }\n  }, [transitionDuration]);\n\n  return {\n    currentSlide,\n    slidesNumber,\n    slidesGroups,\n    setSlidesNumber,\n    transition,\n    transitionDuration,\n    previous,\n    next,\n    handleTransitionEnd,\n  };\n}\n\nexport default useCarousel;\n","/home/aureen/the_odin_project/room_homepage/src/hooks/useWindowSize.js",[],"/home/aureen/the_odin_project/room_homepage/src/index.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/App.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.jsx",["369"],"import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport { auth } from \"../firebase/firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const signInAnonymously = () => {\n    return auth.signInAnonymously();\n  };\n\n  const signUpFromAnonymous = async (email, password) => {\n    const credential = await firebase.auth.EmailAuthProvider.credential(\n      email,\n      password\n    );\n    return auth.currentUser.linkWithCredential(credential);\n  };\n\n  const signUp = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const signIn = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const signOut = () => {\n    return auth.signOut();\n  };\n\n  const resetPassword = (email) => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    signUp,\n    signIn,\n    signOut,\n    signInAnonymously,\n    signUpFromAnonymous,\n    currentUser,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};","/home/aureen/the_odin_project/room_homepage/src/contexts/FavoriteContext.jsx",["370","371","372","373"],"import React, { useContext, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport PropTypes from \"prop-types\";\nimport { firestore } from \"../firebase/firebase\";\nimport { useAuth } from \"./AuthContext\";\n\nconst FavoriteContext = React.createContext();\n\nexport function useFavorite() {\n  return useContext(FavoriteContext);\n}\n\nexport function FavoriteProvider({ children }) {\n  const { currentUser } = useAuth();\n  const [favorites, setFavorites] = useState([]);\n\n  // Get a user's saved items\n  const getFavorites = async (userId) => {\n    const items = await firestore.collection(\"favorites\").doc(userId).get();\n    return items.data();\n  };\n\n  // Add favorite\n  const addFavorite = (userId, id) => {\n    return firestore\n      .collection(\"favorites\")\n      .doc(userId)\n      .set(\n        {\n          [id]: true,\n        },\n        { merge: true }\n      );\n  };\n\n  // Delete favorite\n  const deleteFavoriteList = (userId) => {\n    return firestore.collection(\"favorites\").doc(userId).delete();\n  };\n\n  const deleteFavorite = async (userId, id) => {\n    await firestore\n      .collection(\"favorites\")\n      .doc(userId)\n      .update({\n        [id]: firebase.firestore.FieldValue.delete(),\n      });\n\n    const favorites = await getFavorites(userId);\n    if (Object.keys(favorites).length === 0) {\n      deleteFavoriteList(userId);\n    }\n  };\n\n  useEffect(() => {\n    if (!currentUser) return;\n    const unsubscribe = firestore\n      .collection(\"favorites\")\n      .doc(currentUser.uid)\n      .onSnapshot(async () => {\n        const favoritesArray = [];\n        const favorites = await getFavorites(currentUser.uid);\n        if (!favorites) return;\n        for (const favorite of Object.keys(favorites)) {\n          favoritesArray.push(favorite);\n        }\n        setFavorites(favoritesArray);\n      });\n    return unsubscribe;\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (!currentUser) setFavorites([]);\n  }, [currentUser]);\n\n  const value = {\n    addFavorite,\n    deleteFavorite,\n    favorites,\n  };\n\n  return (\n    <FavoriteContext.Provider value={value}>\n      {children}\n    </FavoriteContext.Provider>\n  );\n}\n\nFavoriteProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","/home/aureen/the_odin_project/room_homepage/src/routes/general/About.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/routes/general/Home.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/routes/general/Contact.jsx",["374"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Nav from \"../../components/Nav\";\n\n// Social Icons\nimport { ReactComponent as Facebook } from \"../../assets/icons/icon-facebook.svg\";\nimport { ReactComponent as Instagram } from \"../../assets/icons/icon-instagram.svg\";\nimport { ReactComponent as Pinterest } from \"../../assets/icons/icon-pinterest.svg\";\nimport { ReactComponent as Twitter } from \"../../assets/icons/icon-twitter.svg\";\n\n// Styled Components\nconst colors = {\n  white: \"hsl(0, 100%, 100%)\",\n  black: \"hsl(0, 0%, 0%)\",\n  background: \"hsl(10, 5%, 90%)\",\n  darkGrey: \"hsl(0, 0%, 20%)\",\n  grey: \"hsl(0, 0%, 50%)\",\n  border: \"hsl(0, 0%, 70%)\",\n};\n\nconst grid = `  \n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 3rem;\n\n  @media all and (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst input = `\n  border: none;\n  border-bottom: 1px solid ${colors.border};\n  padding: .5rem 0 .25rem 0;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &::placeholder {\n    color: ${colors.border};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }`;\n\nconst label = `\n  text-transform: uppercase;\n  font-size: .825rem;\n  letter-spacing: 1px;\n`;\n\n// Left - Image\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  max-width: 100%;\n  max-height: 100%;\n  display: flex;\n\n  @media all and (max-width: 830px) {\n    flex-direction: column;\n  }\n`;\n\nconst Image = styled.div`\n  background: url(\"https://firebasestorage.googleapis.com/v0/b/room-f191c.appspot.com/o/contact%2Froom.png?alt=media&token=758d37b5-6d9d-427b-a387-f81f6380fdd4\");\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 50%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n\n  @media all and (max-width: 830px) {\n    width: 100%;\n    background-position: 0 60%;\n    align-items: center;\n    padding: 5rem 0;\n  }\n`;\n\nconst Heading = styled.h2`\n  font-size: 3.5rem;\n  line-height: 4rem;\n  color: ${colors.white};\n  font-family: \"Playfair Display\", sans-serif;\n  max-width: 35rem;\n  margin-top: 10rem;\n  padding: 0 5rem;\n\n  @media all and (max-width: 830px) {\n    margin-top: 0rem;\n  }\n`;\n\n// Right - Contact\n// Contact Form\nconst Heading2 = styled.h3`\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n  margin: 5rem 0;\n\n  @media all and (max-width: 830px) {\n    margin: 3rem 0;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5rem;\n  flex: 1;\n`;\n\nconst Form = styled.form`\n  ${grid}\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MessageField = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Label = styled.label`\n  ${label}\n`;\n\nconst Input = styled.input`\n  ${input}\n`;\n\nconst TextArea = styled.textarea`\n  ${input}\n`;\n\nconst SubmitBtn = styled.button`\n  justify-self: start;\n  padding: 0;\n  cursor: pointer;\n  transition: all 0.2s linear;\n\n  &:hover {\n    letter-spacing: 0.5px;\n  }\n`;\n\n// Room Informations\nconst Social = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3rem;\n\n  & > div:first-child:after {\n    content: \"\";\n    display: inline-block;\n    height: 1px;\n    width: 5rem;\n    vertical-align: middle;\n    margin: 0 1rem;\n    background-color: ${colors.grey};\n  }\n`;\n\nconst Information = styled.div`\n  ${grid}\n  margin-top: 5rem;\n`;\n\nconst InformationType = styled.div`\n  ${label};\n  color: ${colors.grey};\n  margin-bottom: 0.25rem;\n`;\n\nconst Icon = styled.a`\n  display: inline-block;\n  color: ${colors.grey};\n  cursor: pointer;\n  margin: 0 0.25rem;\n\n  &:hover {\n    color: ${colors.black};\n  }\n`;\n\nfunction Contact() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <Nav />\n      <Container>\n        <Image>\n          <Heading>We'd love to hear from you</Heading>\n        </Image>\n        <Center>\n          <Heading2>Contact Us</Heading2>\n          <Form onSubmit={handleFormSubmit}>\n            <Field>\n              <Label htmlFor=\"first_name\">First Name</Label>\n              <Input\n                type=\"text\"\n                value={firstName}\n                id=\"first_name\"\n                onChange={(e) => setFirstName(e.target.value)}\n                placeholder=\"Enter your first name\"\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor=\"last_name\">Last Name</Label>\n              <Input\n                type=\"text\"\n                value={lastName}\n                id=\"last_name\"\n                onChange={(e) => setLastName(e.target.value)}\n                placeholder=\"Enter your last name\"\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your email\"\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor=\"phone\">Phone Number</Label>\n              <Input\n                type=\"tel\"\n                id=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                placeholder=\"Enter your phone number\"\n              />\n            </Field>\n\n            <MessageField>\n              <Label htmlFor=\"message\">Message</Label>\n              <TextArea\n                value={message}\n                id=\"message\"\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Enter your message\"\n                rows={1}\n              />\n            </MessageField>\n\n            <SubmitBtn>Send message ⟶</SubmitBtn>\n          </Form>\n\n          <Information>\n            <Field>\n              <InformationType>Email</InformationType>\n              <div>enquiries@room.com</div>\n            </Field>\n\n            <Field>\n              <InformationType>Phone</InformationType>\n              <div>+1 23 456 789</div>\n            </Field>\n          </Information>\n\n          <Social>\n            <InformationType>Follow us</InformationType>\n            <Icon href=\"#\">\n              <Facebook />\n            </Icon>\n\n            <Icon href=\"#\">\n              <Instagram />\n            </Icon>\n\n            <Icon href=\"#\">\n              <Pinterest />\n            </Icon>\n\n            <Icon href=\"#\">\n              <Twitter />\n            </Icon>\n          </Social>\n        </Center>\n      </Container>\n    </>\n  );\n}\n\nexport default Contact;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Shop.jsx",["375","376","377"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Switch, Route } from \"react-router-dom\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\nimport Nav from \"../../components/shop/nav/Nav\";\nimport ShopNav from \"../../components/shop/nav/ShopNav\";\nimport Footer from \"../../components/shop/nav/Footer\";\nimport Favorite from \"../account/Favorite\";\nimport Entry from \"../account/Entry\";\nimport PublicRoute from \"../types/PublicRoute\";\nimport HandleShop from \"../general/HandleShop\";\nimport Tracking from \"./orders/Tracking\";\nimport Category from \"./display/Category\";\nimport ItemDetails from \"./display/ItemDetails\";\nimport Main from \"./display/Main\";\nimport NewIn from \"./display/NewIn\";\nimport Design from \"./display/Design\";\nimport Cart from \"./checkout/Cart\";\nimport Payment from \"./checkout/Payment\";\nimport Personal from \"./checkout/Personal\";\nimport Confirmation from \"./checkout/Confirmation\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n`;\n\nfunction Shop({ match }) {\n  const { windowSize } = useWindowSize();\n\n  return (\n    <Wrapper>\n      <header>\n        <Nav />\n        {windowSize.width > 500 && <ShopNav />}\n      </header>\n\n      <Container>\n        <Switch>\n          <Route exact path={`${match.path}`} component={Main} />\n          <PublicRoute exact path={`${match.path}/entry`} component={Entry} />\n          <Route exact path={`${match.path}/cart`} component={Cart} />\n          <Route exact path={`${match.path}/payment`} component={Payment} />\n          <Route exact path={`${match.path}/personal`} component={Personal} />\n          <Route\n            exact\n            path={`${match.path}/confirmation/:id`}\n            component={Confirmation}\n          />\n          <Route exact path={`${match.path}/favorite`} component={Favorite} />\n          <Route exact path={`${match.path}/tracking`} component={Tracking} />\n          <Route\n            exact\n            path={`${match.path}/handleshop`}\n            component={HandleShop}\n          />\n          <Route\n            exact\n            path={`${match.path}/item/:itemId`}\n            render={(props) => (\n              <ItemDetails key={props.match.params.itemId} {...props} />\n            )}\n          />\n          <Route exact path={`${match.path}/new_in`} component={NewIn} />\n          <Route exact path={`${match.path}/design/:id`} component={Design} />\n          <Route exact path={`${match.path}/:category`} component={Category} />\n        </Switch>\n      </Container>\n\n      <Footer />\n    </Wrapper>\n  );\n}\n\nShop.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string,\n    params: PropTypes.shape({\n      itemId: PropTypes.string,\n    }),\n  }),\n};\n\nShop.defaultProps = {\n  match: {\n    path: \"\",\n  },\n};\n\nexport default Shop;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/Account.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.jsx",["378","379","380","381","382","383","384"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useCart from \"../../../hooks/useCart\";\nimport useSignIn from \"../../../hooks/useSignIn\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport CartItem from \"../../../components/shop/cart/CartItem\";\n\n// Icons\nimport { ReactComponent as Basket } from \"../../../assets/icons/icon-basket.svg\";\n\n// Styled components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Darker grey - for payment background\n  text: \"hsl(0, 0%, 95%)\", // White - for payment text\n  button: \"hsl(0, 0%, 100%)\",\n  border: \"hsl(0, 0%, 90%)\",\n  hover: \"hsl(0, 0%, 0%)\", // Black - Continue Shopping Hover\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin-top: 3rem;\n\n  @media all and (min-width: 576px) {\n    margin: 5rem;\n  }\n`;\n\nconst ShoppingCart = styled.div`\n  @media all and (min-width: 900px) {\n    display: flex;\n    align-items: start;\n    max-width: 1400px;\n  }\n`;\n\nconst ItemList = styled.div`\n  @media all and (min-width: 576px) {\n    padding: 0 2rem;\n  }\n\n  @media all and (min-width: 900px) {\n    padding: 0;\n    padding-left: 2rem;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-left: 3rem;\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n\n  @media all and (min-width: 900px) {\n    margin-left: initial;\n  }\n`;\n\nconst Legend = styled.div`\n  padding-left: 0.25rem;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  border-bottom: 1px solid ${colors.border};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  justify-items: center;\n  padding-bottom: 0.75rem;\n`;\n\nconst Product = styled.div`\n  min-width: 320px;\n`;\n\nconst Placeholder = styled.div`\n  width: 32px;\n`;\n\nconst Subtotal = styled.div`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Bottom = styled.div`\n  margin: 1rem;\n  color: ${colors.secondary};\n  display: flex;\n  justify-content: space-between;\n\n  &:hover {\n    color: ${colors.hover};\n  }\n`;\n\n// Empty Cart\nconst EmptyCart = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1rem;\n`;\n\nconst EmptyCartText = styled.div`\n  font-family: \"Playfair Display\", sans-serif;\n  font-size: 1.125rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\n// Proceed to payment window\nconst ToPayment = styled.div`\n  background: ${colors.secondary};\n  color: ${colors.text};\n  display: flex;\n  flex-direction: column;\n  margin: 3rem;\n  padding: 3rem;\n\n  @media all and (min-width: 900px) {\n    padding: 2rem;\n  }\n\n  @media all and (min-width: 1100px) {\n    padding: 3rem;\n  }\n`;\n\nconst PaymentText = styled.div`\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  text-align: center;\n\n  @media all and (min-width: 900px) {\n    text-align: initial;\n  }\n`;\n\nconst PaymentTitle = styled.h2`\n  font-size: 1.25rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst PaymentHeading = styled.div`\n  align-self: center;\n  text-align: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst PaymentChoice = styled.span`\n  font-size: 1.125rem;\n`;\n\nconst button = `\n  display: inline-block;\n  background: ${colors.text};\n  color: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  margin: 1rem 0;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  font-family: 'Source Sans Pro', sans-serif;\n\n  &:hover {\n    background: ${colors.button};\n}`;\n\nconst PaymentLink = styled(Link)`\n  ${button}\n  align-self: center;\n`;\n\nconst PaymentBtn = styled.button`\n  ${button}\n\n  &:disabled {\n    background: ${colors.primary};\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Form = styled.div`\n  background: ${colors.text};\n  padding: 1.25rem;\n  margin: 1rem 1rem 0 1rem;\n  border-radius: 3px;\n\n  & > *:first-child {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  color: ${colors.secondary};\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  background: none;\n  border-bottom: 1px solid ${colors.lightGrey};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.lightGrey};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Error = styled.div`\n  font-size: 0.825rem;\n  color: ${colors.secondary};\n  line-height: 1rem;\n`;\n\nconst Message = styled(Error)`\n  cursor: pointer;\n`;\n\nconst BasketIcon = styled(Basket)`\n  max-width: 30rem;\n  max-height: 30rem;\n`;\n\nfunction Cart() {\n  const [cart, setCart] = useState([]);\n  const { getCart, cartListener } = useCart();\n  const { windowSize } = useWindowSize();\n\n  // Used to sign in before checking out.\n  const { currentUser } = useAuth();\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    emailError,\n    passwordError,\n    loading,\n    handleSignIn,\n    handleForgotPassword,\n  } = useSignIn();\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) return;\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!currentUser) return;\n    const unsubscribe = cartListener(currentUser.uid, async () => {\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    });\n    return unsubscribe;\n  }, []);\n\n  // Helper functions to render\n  const renderCart = (cart) => {\n    if (cart.length === 0) {\n      return (\n        <EmptyCart>\n          <Heading>Shopping Cart</Heading>\n          <BasketIcon />\n          <EmptyCartText>\n            Oh no, it seems that your cart is empty.\n          </EmptyCartText>\n          <div>We have a lot of lovely ideas to help you fill it.</div>\n          <Link to=\"/shop\">\n            <Button>Inspire Me</Button>\n          </Link>\n        </EmptyCart>\n      );\n    }\n    return (\n      <ItemList>\n        <Heading>Shopping Cart</Heading>\n        {windowSize.width > 620 && (\n          <Legend>\n            <Product>Product</Product>\n            <div>Price</div>\n            <div>Quantity</div>\n            <div>Total</div>\n            {/* Replace the \"X\" Icon to align the grid */}\n            <Placeholder />\n          </Legend>\n        )}\n        <div>\n          <ul>\n            {cart.map((item) => {\n              return (\n                <li key={item.id}>\n                  <CartItem item={item} />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <Bottom>\n          <Link to=\"/shop\">← Continue Shopping</Link>\n          <Subtotal>\n            Subtotal: £\n            {cart.reduce((sum, item) => +item.price * +item.quantity + sum, 0)}\n          </Subtotal>\n        </Bottom>\n      </ItemList>\n    );\n  };\n\n  const renderBox = (cart, currentUser) => {\n    if (cart.length === 0) return <></>;\n\n    // If the user isn't logged in, we'll suggest him to create an account / log in.\n    if (currentUser && currentUser.isAnonymous) {\n      return (\n        <ToPayment>\n          <PaymentHeading>\n            <PaymentTitle>Thank you for shopping with us!</PaymentTitle>\n            <PaymentText>\n              We sincerely hope that all our products will satisfy your needs\n              and enhance your interior.\n            </PaymentText>\n          </PaymentHeading>\n\n          <PaymentChoice>Already a customer ?</PaymentChoice>\n          <PaymentText>Sign in to continue shopping.</PaymentText>\n\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleSignIn(true);\n            }}\n          >\n            <Form>\n              <Field>\n                <Label>Email</Label>\n                <Input\n                  type=\"text\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n                {emailError && <Error>{emailError}</Error>}\n              </Field>\n\n              <Field>\n                <Label>Password</Label>\n                <Input\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                {passwordError && <Error>{passwordError}</Error>}\n              </Field>\n              <Message onClick={handleForgotPassword}>\n                Forgot your password?\n              </Message>\n            </Form>\n\n            <Flex>\n              <PaymentBtn type=\"submit\" disabled={loading}>\n                Sign In\n              </PaymentBtn>\n            </Flex>\n          </form>\n\n          <PaymentChoice>Don't have an account yet?</PaymentChoice>\n          <PaymentText>\n            Create one to quickly manage your orders and checkout. We promise it\n            will only take a minute.\n          </PaymentText>\n          <PaymentLink\n            to={{\n              pathname: \"/account/entry\",\n              state: {\n                isPaying: true,\n              },\n            }}\n          >\n            Create an account\n          </PaymentLink>\n\n          <PaymentText>Or simply proceed to checkout as a guest.</PaymentText>\n          <PaymentLink\n            to={{\n              pathname: \"/shop/personal\",\n              state: {\n                isPaying: true,\n              },\n            }}\n          >\n            Checkout as a guest\n          </PaymentLink>\n        </ToPayment>\n      );\n      // Else, we'll just let him proceed.\n    }\n    return (\n      <ToPayment>\n        <PaymentHeading>\n          <PaymentTitle>Thank you for shopping with us!</PaymentTitle>\n        </PaymentHeading>\n\n        <PaymentText>\n          We sincerely hope that all our products will satisfy your needs and\n          enhance your interior.\n        </PaymentText>\n\n        <PaymentLink\n          to={{\n            pathname: \"/shop/personal\",\n            state: {\n              isPaying: true,\n            },\n          }}\n        >\n          Continue\n        </PaymentLink>\n      </ToPayment>\n    );\n  };\n\n  return (\n    <Container>\n      <ShoppingCart>\n        {renderCart(cart)}\n        {renderBox(cart, currentUser)}\n      </ShoppingCart>\n    </Container>\n  );\n}\n\nexport default Cart;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/Favorite.jsx",["385","386","387"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport ShopItemPreview from \"../../components/shop/display/ShopItemPreview\";\nimport { useFavorite } from \"../../contexts/FavoriteContext\";\nimport useShop from \"../../hooks/useShop\";\n\n// Icons\nimport { ReactComponent as Basket } from \"../../assets/icons/icon-basket.svg\";\n\n// Styled Components\nconst colors = {\n  button: \"hsl(0, 0%, 27%)\", // Darker grey\n  text: \"hsl(0, 0%, 95%)\", // White\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n\n  padding: 5rem 0;\n\n  @media all and (min-width: 600px) {\n    padding: 5rem 3rem;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst ItemsList = styled.ul`\n  display: grid;\n  grid-gap: 3vw;\n\n  @media all and (min-width: 500px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media all and (min-width: 992px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media all and (min-width: 1300px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nconst Empty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst EmptyText = styled.div`\n  font-family: \"Playfair Display\", sans-serif;\n  font-size: 1.125rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.button};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nfunction Favorite() {\n  const { getItem } = useShop();\n  const { favorites } = useFavorite([]);\n  const [favoriteItems, setFavoriteItems] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const favoritesItems = [];\n      for (const favorite of favorites) {\n        const item = await getItem(favorite);\n        favoritesItems.push(item);\n      }\n      setFavoriteItems(favoritesItems);\n    })();\n  }, [favorites]);\n\n  return (\n    <Container>\n      <div>\n        <Heading>Favorites</Heading>\n        {favorites.length === 0 ? (\n          <Empty>\n            <Basket />\n            <EmptyText>\n              It seems that you haven't saved any items yet.\n            </EmptyText>\n            <div>We have a lot of lovely ideas to help you fill it.</div>\n            <Link to=\"/shop\">\n              <Button>Inspire Me</Button>\n            </Link>\n          </Empty>\n        ) : (\n          <>\n            <ItemsList>\n              {favoriteItems.map((item) => {\n                return (\n                  <li key={item.id}>\n                    <ShopItemPreview\n                      name={item.name}\n                      images={item.images}\n                      price={item.price}\n                      id={item.id}\n                      isFavorite={favorites.includes(item.id)}\n                    />\n                  </li>\n                );\n              })}\n            </ItemsList>\n          </>\n        )}\n      </div>\n    </Container>\n  );\n}\n\nexport default Favorite;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/Entry.jsx",["388","389","390","391","392"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SignIn from \"../../components/account/SignIn\";\nimport SignUp from \"../../components/account/SignUp\";\n\nimport background from \"../../assets/images/entry.png\";\n\n// Styled components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Darker grey\n  background: \"hsl(0, 0%, 100%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  background: url(${background});\n  background-size: cover;\n  padding: 3rem 0;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  align-items: start;\n  max-width: 1400px;\n`;\n\nconst Card = styled.div`\n  width: calc(100vw - 16px);\n  max-width: 500px;\n  border: 1px solid ${colors.secondary};\n  height: 45rem;\n  perspective: 150rem;\n  padding: 0 5rem;\n  background: ${colors.background};\n`;\n\nconst CardInner = styled.div`\n  position: relative;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  transform: ${(props) => (props.isFlipped ? \"rotateY(180deg)\" : \"\")};\n  height: 100%;\n  width: 100%;\n`;\n\nconst CardSide = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst CardBackSide = styled(CardSide)`\n  transform: rotateY(180deg);\n`;\n\nfunction Entry({ location }) {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isPaying, setIsPaying] = useState(false);\n\n  useEffect(() => {\n    location.state && location.state.isPaying\n      ? setIsPaying(true)\n      : setIsPaying(false);\n  }, []);\n\n  const flip = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  return (\n    <Container>\n      <Main>\n        <Card>\n          <CardInner isFlipped={isFlipped}>\n            <CardSide>\n              <SignUp flip={flip} isPaying={isPaying} />\n            </CardSide>\n            <CardBackSide>\n              <SignIn flip={flip} isPaying={isPaying} />\n            </CardBackSide>\n          </CardInner>\n        </Card>\n      </Main>\n    </Container>\n  );\n}\n\nexport default Entry;\n","/home/aureen/the_odin_project/room_homepage/src/routes/general/HandleShop.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/Nav.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/Carousel.jsx",["393","394","395"],"import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// Images\nimport { ReactComponent as AngleLeft } from \"../assets/icons/icon-angle-left.svg\";\nimport { ReactComponent as AngleRight } from \"../assets/icons/icon-angle-right.svg\";\n\nconst colors = {\n  black: \"hsl(0, 0%, 0%)\",\n  darkGrey: \"hsl(0, 0%, 27%)\",\n};\n\nconst size = `\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n\n  @media all and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst CarouselComponent = styled.div`\n  position: relative;\n  max-width: 840px;\n  max-height: 534px;\n  min-width: 0;\n  height: 100%;\n`;\n\nconst Slider = styled.div`\n  ${size}\n  overflow: hidden;\n`;\n\nconst Images = styled.div`\n  ${size}\n  transform: translateX(${(props) => props.transition}%);\n  transition: transform ${(props) => props.transitionDuration}s ease-in;\n  display: flex;\n`;\n\nconst Menu = styled.div`\n  position: absolute;\n  display: flex;\n  left: 100%;\n  bottom: 0;\n\n  @media all and (max-width: 1170px) {\n    left: initial;\n    right: 0;\n  }\n`;\n\nconst Button = styled.button`\n  background: ${colors.black};\n  padding: 1.5rem 2rem;\n  cursor: pointer;\n  color: #fff;\n\n  &:hover {\n    background: ${colors.darkGrey};\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 0;\n`;\n\nconst Card = styled.div`\n  max-width: 70%;\n  min-width: 450px;\n  padding: 2rem;\n  transition: all 0.25s ease-in-out;\n\n  @media all and (max-width: 576px) {\n    min-width: 0;\n    padding: 1rem;\n  }\n`;\n\nconst ShopLink = styled.span`\n  text-transform: uppercase;\n  letter-spacing: 0.5rem;\n  font-weight: 300;\n  font-size: 1.25rem;\n  margin-top: 2rem;\n  display: inline-block;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.grey};\n  }\n`;\n\nconst Text = styled.p`\n  line-height: 1.25rem;\n  color: ${colors.grey};\n`;\n\nconst Arrow = styled.svg`\n  margin-left: 2rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 2.75rem;\n  font-weight: 300;\n  margin-bottom: 2rem;\n`;\n\nfunction Carousel({ images, text }) {\n  const cardRef = useRef();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [slides, setSlides] = useState([images[images.length - 1], ...images]);\n  const [transition, setTransition] = useState(-100);\n  const [transitionDuration, setTransitionDuration] = useState(0.3);\n  const [isNext, setIsNext] = useState(false); // Indicates the carousel direction (previous/next)\n\n  // Functions\n  const next = () => {\n    setIsNext(true);\n    setTransition((prev) => prev - 100);\n    setCurrentSlide((prev) => {\n      return prev === images.length - 1 ? 0 : prev + 1;\n    });\n    cardRef.current.classList.add(\"active\");\n  };\n\n  const previous = () => {\n    setIsNext(false);\n    setTransition((prev) => prev + 100);\n    setCurrentSlide((prev) => {\n      return prev === 0 ? images.length - 1 : prev - 1;\n    });\n    cardRef.current.classList.add(\"active\");\n  };\n\n  /* At the end of each transition:\n  - The transition duration is set to 0. It allows us to silently reset transform: translateX to 0.\n  - The slides order is changed so that there is always a \"previous slide\" and a \"next slide\" to go to without jumping too far.\n  - Thanks to useEffect, the transition duration is put back to 0.3s to have a smooth animation.\n  */\n  const handleTransitionEnd = () => {\n    setTransitionDuration(0);\n    setTransition(-100);\n\n    if (isNext) {\n      setSlides((prev) => {\n        const slides = [...prev];\n        slides.pop();\n        const prevSlide = slides.shift();\n        slides.push(prevSlide);\n        slides.push(slides[0]);\n        return slides;\n      });\n    } else {\n      setSlides((prev) => {\n        const slides = [...prev];\n        slides.shift();\n        const lastSlide = slides.pop();\n        slides.unshift(lastSlide);\n        slides.unshift(slides[slides.length - 1]);\n        return slides;\n      });\n    }\n    cardRef.current.classList.remove(\"active\");\n  };\n\n  useEffect(() => {\n    if (transitionDuration === 0) {\n      setTransitionDuration(0.3);\n    }\n  }, [transitionDuration]);\n\n  return (\n    <Container>\n      <CarouselComponent>\n        <Slider>\n          <Images\n            onTransitionEnd={handleTransitionEnd}\n            transition={transition}\n            transitionDuration={transitionDuration}\n          >\n            {slides.map((image, index) => {\n              return <Image key={index} src={image} alt=\"Hero\" />;\n            })}\n          </Images>\n        </Slider>\n        <Menu>\n          <Button type=\"button\" onClick={previous}>\n            <AngleLeft />\n          </Button>\n          <Button type=\"button\" onClick={next}>\n            <AngleRight />\n          </Button>\n        </Menu>\n      </CarouselComponent>\n\n      <Center>\n        <Card ref={cardRef}>\n          <Title>{text[currentSlide].title}</Title>\n          <Text>{text[currentSlide].description}</Text>\n          <Link to=\"/shop\">\n            <ShopLink>\n              Shop now\n              <Arrow width=\"40\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M34.05 0l5.481 5.527h.008v.008L40 6l-.461.465v.063l-.062-.001L34.049 12l-.662-.668 4.765-4.805H0v-1h38.206l-4.82-4.86L34.05 0z\"\n                  fill=\"currentColor\"\n                  fillRule=\"nonzero\"\n                />\n              </Arrow>\n            </ShopLink>\n          </Link>\n        </Card>\n      </Center>\n    </Container>\n  );\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string),\n  text: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      description: PropTypes.string,\n    })\n  ),\n};\n\nCarousel.defaultProps = {\n  images: [],\n  text: [{ title: \"\", description: \"\" }],\n};\n\nexport default Carousel;\n","/home/aureen/the_odin_project/room_homepage/src/routes/types/PublicRoute.jsx",["396","397","398"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n// User can only access this route if they are logged out.\nfunction PublicRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser && !currentUser.isAnonymous ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        );\n      }}\n    />\n  );\n}\n\nexport default PublicRoute;\n","/home/aureen/the_odin_project/room_homepage/src/routes/types/PrivateRoute.jsx",["399","400","401"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n// User can only access those routes if they are logged in.\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser && !currentUser.isAnonymous ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/account/entry\" />\n        );\n      }}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/orders/Tracking.jsx",["402","403"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useOrder from \"../../../hooks/useOrder\";\nimport Order from \"../../../components/account/Order\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n  dark: \"hsl(0, 0%, 0%)\",\n};\n\nconst Container = styled.div`\n  margin: 5rem;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Category = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 40vw;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-gap: 3rem 5rem;\n  margin-bottom: 2.5rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nfunction Tracking() {\n  const [email, setEmail] = useState(\"\");\n  const [orderId, setOrderId] = useState(\"\");\n  const [order, setOrder] = useState();\n  const [message, setMessage] = useState(\"\");\n  const { searchOrder } = useOrder();\n\n  const handleSearchOrder = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    const order = await searchOrder(email, orderId);\n    order\n      ? setOrder(order)\n      : setMessage(\"Sorry, we could not find your order.\");\n  };\n\n  return (\n    <Container>\n      <Heading>Order Tracking</Heading>\n\n      <div>\n        <Category>Track your order</Category>\n        <Form onSubmit={handleSearchOrder}>\n          <Fields>\n            <Field>\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                value={email}\n                id=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter your email\"\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor=\"order_id\">Order</Label>\n              <Input\n                type=\"text\"\n                value={orderId}\n                id=\"order_id\"\n                onChange={(e) => setOrderId(e.target.value)}\n                placeholder=\"Enter your order number\"\n              />\n            </Field>\n          </Fields>\n          <Button type=\"submit\">Track your order</Button>\n          <Message>{message}</Message>\n        </Form>\n      </div>\n\n      {order && (\n        <div>\n          <Category>Order</Category>\n          <Order order={order} />\n        </div>\n      )}\n    </Container>\n  );\n}\n\nexport default Tracking;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Category.jsx",["404","405","406","407","408","409"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ShopItemPreview from \"../../../components/shop/display/ShopItemPreview\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport useShop from \"../../../hooks/useShop\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport SideFilters from \"../../../components/shop/display/SideFilters\";\nimport Filters from \"../../../components/shop/display/Filters\";\nimport Sort from \"../../../components/shop/display/Sort\";\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-gap: 3vw;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, auto);\n  }\n\n  @media all and (min-width: 1350px) {\n    grid-template-columns: repeat(3, auto);\n  }\n`;\n\nconst Content = styled.div`\n  justify-self: stretch;\n`;\n\nconst Shop = styled.div`\n  display: grid;\n  grid-column-gap: 1rem;\n  padding: 5rem 0;\n  justify-items: center;\n\n  @media all and (min-width: 768px) {\n    grid-template-columns: auto 1fr;\n  }\n\n  @media all and (min-width: 992px) {\n    width: 80%;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  justify-items: stretch;\n  grid-gap: 2rem;\n  margin-bottom: 1rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media all and (min-width: 830px) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nfunction Category({ match }) {\n  const [items, setItems] = useState([]); // All items that belong in the category\n  const [unsortedItems, setUnsortedItems] = useState([]); // Items when \"sorted\" by \"featured\".\n  const [sort, setSort] = useState(\"featured\");\n  const [filters, setFilters] = useState({\n    colors: [],\n    materials: [],\n    price: Infinity,\n    dimensions: {\n      width: Infinity,\n      height: Infinity,\n      depth: Infinity,\n    },\n    seats: [],\n  });\n  const [displayedItems, setDisplayedItems] = useState([]); // Items displayed after filters are applied\n  const { getCategoryItems } = useShop();\n  const { favorites } = useFavorite();\n  const { windowSize } = useWindowSize();\n\n  // Loads all category items and sets up filters\n  useEffect(() => {\n    (async () => {\n      const itemsList = await getCategoryItems(\n        decodeURIComponent(match.params.category)\n      );\n      setItems(itemsList);\n      setUnsortedItems(itemsList);\n    })();\n  }, [match]);\n\n  // Modify filters\n  const handleFilters = (field, value) => {\n    setFilters((filters) => {\n      return { ...filters, [field]: value };\n    });\n  };\n\n  // Sorting items\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n\n  // Update displayed items depending on which filters are applied.\n  useEffect(() => {\n    let displayedItems = [...items];\n\n    // Colors filter\n    if (filters.colors.length > 0) {\n      displayedItems = displayedItems.filter((item) =>\n        item.queries.colors.some((color) => filters.colors.includes(color))\n      );\n    }\n\n    // Materials filter\n    if (filters.materials.length > 0) {\n      displayedItems = displayedItems.filter((item) =>\n        item.queries.materials.some((material) =>\n          filters.materials.includes(material)\n        )\n      );\n    }\n\n    // Price filter\n    displayedItems = displayedItems.filter(\n      (item) => item.queries.price.min <= filters.price\n    );\n\n    // Dimensions filter\n    displayedItems = displayedItems.filter(\n      (item) =>\n        item.queries.dimensions.width.min <= filters.dimensions.width &&\n        item.queries.dimensions.height.min <= filters.dimensions.height &&\n        item.queries.dimensions.depth.min <= filters.dimensions.depth\n    );\n\n    // Seats filter\n    if (filters.seats.length > 0) {\n      displayedItems = displayedItems.filter(\n        (item) =>\n          item.queries.seats &&\n          item.queries.seats.some((number) => filters.seats.includes(number))\n      );\n    }\n    setDisplayedItems(displayedItems);\n    setUnsortedItems(displayedItems);\n  }, [items, filters]);\n\n  // Update displayed items depending on the sorting filter the user chooses.\n  useEffect(() => {\n    switch (sort) {\n      case \"featured\":\n        setItems(unsortedItems);\n        break;\n      case \"new\":\n        setDisplayedItems([...displayedItems].sort((a, b) => a.date - b.date));\n        break;\n      case \"alphabetical_increasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => a.name.localeCompare(b.name))\n        );\n        break;\n      case \"alphabetical_decreasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => b.name.localeCompare(a.name))\n        );\n        break;\n      case \"price_increasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => a.price - b.price)\n        );\n        break;\n      case \"price_decreasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => b.price - a.price)\n        );\n        break;\n      default:\n    }\n  }, [sort]);\n\n  return (\n    <Shop>\n      {windowSize.width > 830 && (\n        <SideFilters items={items} handleFilters={handleFilters} />\n      )}\n      <Content>\n        <Buttons>\n          <Sort handleSort={handleSort} />\n          {windowSize.width <= 830 && (\n            <Filters items={items} handleFilters={handleFilters} />\n          )}\n        </Buttons>\n        <ShopList>\n          {displayedItems.map((item) => {\n            return (\n              <li key={item.id}>\n                <ShopItemPreview\n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                  isFavorite={favorites.includes(item.id)}\n                  isNew={item.new}\n                />\n              </li>\n            );\n          })}\n        </ShopList>\n      </Content>\n    </Shop>\n  );\n}\n\nexport default Category;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Main.jsx",["410","411","412","413"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport useDesign from \"../../../hooks/useDesign\";\nimport FullCarousel from \"../../../components/FullCarousel\";\nimport Designs from \"../../../components/shop/display/Designs\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 27%)\", // Grey\n  secondary: \"hsl(0, 0%, 40%)\",\n  dark: \"hsl(0, 0%, 17%)\",\n  accent: \"hsl(46, 65%, 52%)\", // Gold\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Presentation = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${colors.secondary};\n  max-width: 40rem;\n  border: 5px solid ${colors.primary};\n  outline: 2px solid ${colors.primary};\n  outline-offset: 5px;\n  margin: 5rem;\n  padding: 3rem;\n  line-height: 1.5rem;\n  text-align: justify;\n\n  & > p {\n    margin-bottom: 1rem;\n  }\n\n  & > p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Decoration = styled.span`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  color: ${colors.accent};\n  margin: 1rem 0;\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    margin: 0 1rem;\n    height: 1px;\n    width: 5rem;\n    background: ${colors.accent};\n    background: linear-gradient(270deg, transparent, ${colors.accent});\n  }\n\n  &:before {\n    background: linear-gradient(270deg, ${colors.accent}, transparent);\n  }\n`;\n\nconst Heading = styled.h2`\n  color: ${colors.dark};\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 300;\n  font-size: 1.5rem;\n`;\n\nconst Featured = styled(Heading)`\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  justify-content: center;\n  color: ${colors.secondary};\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    margin: 0 1rem;\n    height: 1px;\n    width: 20%;\n    background: ${colors.secondary};\n    background: linear-gradient(270deg, transparent, ${colors.secondary});\n  }\n\n  &:before {\n    background: linear-gradient(270deg, ${colors.secondary}, transparent);\n  }\n`;\n\nfunction Main() {\n  const [designs, setDesigns] = useState([]);\n  const { getDesigns } = useDesign();\n\n  useEffect(() => {\n    (async () => {\n      const designs = await getDesigns();\n      setDesigns(designs);\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <FullCarousel />\n      <Presentation>\n        <Heading>Room</Heading>\n        <Decoration>⬧</Decoration>\n        <p>\n          The furniture is the foundation of a home. That's why Room is\n          passionate about offering a huge variety of furniture at all prices.\n          Whatever your style, whatever your needs, find furniture that's made\n          for you.\n        </p>\n\n        <p>\n          Each year, the collection is refreshed to stay on trend and keep up\n          with your needs, whilst also taking more care of the planet and its\n          inhabitants. Over half of our wooden furniture meets sustainable\n          criteria. Every year we progress with our products, but also in\n          raising awareness among design students and young designers to\n          encourage them to think about eco-design. We believe we can reduce the\n          impact on the environment without compromising on style. The second\n          life of products starts here!\n        </p>\n\n        <p>So, you're free to have your own style!</p>\n      </Presentation>\n\n      {designs.length !== 0 && (\n        <>\n          <Featured id=\"featured\">Featured Rooms</Featured>\n          <Designs designs={designs} />\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Main;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/ItemDetails.jsx",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport useShop from \"../../../hooks/useShop\";\nimport useCart from \"../../../hooks/useCart\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport { formatNavLink } from \"../../../utils/utils\";\nimport Recommendations from \"../../../components/shop/display/Recommendations\";\nimport ImagesPreview from \"../../../components/shop/display/ImagesPreview\";\n\n// Icons\nimport { ReactComponent as AngleRight } from \"../../../assets/icons/icon-small-arrow.svg\";\nimport { ReactComponent as Plus } from \"../../../assets/icons/icon-plus.svg\";\nimport { ReactComponent as Minus } from \"../../../assets/icons/icon-minus.svg\";\nimport { ReactComponent as Heart } from \"../../../assets/icons/icon-heart.svg\";\nimport { ReactComponent as HeartFilled } from \"../../../assets/icons/icon-heart-filled.svg\";\nimport iconX from \"../../../assets/icons/icon-x.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 15%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 35%)\",\n  button: \"hsl(0, 0%, 100%)\", // White\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 2rem;\n\n  @media all and (min-width: 1200px) {\n    padding: 1rem 3rem 5rem 3rem;\n  }\n`;\n\nconst Center = styled.section`\n  max-width: 1200px;\n  display: grid;\n  justify-items: center;\n\n  @media all and (min-width: 1000px) {\n    display: block;\n    margin-bottom: 3rem;\n  }\n`;\n\n// Category Links above the item preview\nconst Category = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n\n  @media all and (min-width: 1000px) {\n    padding: 0;\n    padding-left: 2rem;\n  }\n\n  @media all and (min-width: 1200px) {\n    padding-left: 0;\n  }\n`;\n\nconst CategoryLink = styled.span`\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nconst ArrowIcon = styled.span`\n  display: inline-block;\n  margin: 2px 0.5rem 0 0.5rem;\n  color: ${colors.primary};\n`;\n\n// Informations about the item\nconst Informations = styled.div`\n  display: grid;\n  justify-items: center;\n\n  @media all and (min-width: 1000px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Description = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  text-align: justify;\n  color: ${colors.text};\n  line-height: 1.25rem;\n`;\n\nconst Details = styled.div`\n  padding: 3rem 1rem 0 1rem;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n\n  @media all and (min-width: 500px) {\n    padding: 5rem 5rem 2rem 5rem;\n  }\n\n  @media all and (min-width: 1100px) {\n    padding: 0 5rem;\n  }\n`;\n\nconst Name = styled.h2`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 1.25rem;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\n// Selection and adding to basket\n\nconst Selection = styled.form`\n  border-top: 1px solid ${colors.tertiary};\n  border-bottom: 1px solid ${colors.tertiary};\n  padding: 0.5rem 0;\n\n  & > * {\n    margin: 1rem 0;\n  }\n`;\n\nconst Choice = styled.span`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n`;\n\nconst TextLabel = styled.span`\n  display: inline-block;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Checkbox = styled.input`\n  opacity: 0;\n  appearance: none;\n`;\n\nconst SubmitBtn = styled.button`\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 0.825rem;\n  padding: 0.75rem 1.25rem;\n  color: ${colors.button};\n  background: ${colors.primary};\n  transition: all 0.15s linear;\n  cursor: pointer;\n  width: 10.5rem;\n\n  &:hover {\n    letter-spacing: 1.5px;\n  }\n`;\n\n// Select the item's color\nconst ColorList = styled.ul`\n  display: flex;\n`;\n\nconst ColorLabel = styled.label`\n  display: inline-block;\n  width: 2rem;\n  height: 2rem;\n  background-color: ${(props) => props.value};\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.primary : colors.tertiary)};\n  cursor: pointer;\n  margin-right: 0.5rem;\n`;\n\n// Select an option\nconst Options = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr auto);\n`;\n\nconst OptionsField = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OptionLabel = styled.label`\n  cursor: pointer;\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  color: ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  outline: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : \"transparent\")};\n  padding: 0.5rem 1rem;\n  margin: 0 0 0.5rem 1rem;\n`;\n\n// Select a quantity\nconst Quantity = styled.input`\n  font-family: \"Source Sans Pro\", sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n  margin: 0 1rem;\n`;\n\n// Additional informations dropdown\n\nconst Additional = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n`;\n\nconst AdditionalBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n  font-size: 0.95rem;\n  cursor: pointer;\n  padding: 0;\n  padding-bottom: 1.5rem;\n`;\n\nconst Li = styled.li`\n  padding-left: 1rem;\n  text-indent: -1rem;\n  line-height: 1.25rem;\n\n  &:before {\n    content: \"\";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-bottom: -5px;\n    background: url(${iconX});\n  }\n`;\n\nconst AdditionalLabel = styled.span`\n  font-weight: 600;\n  text-transform: capitalize;\n`;\n\nconst AdditionalInfo = styled.span`\n  color: ${colors.text};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n\n  @media all and (min-width: 500px) {\n    grid-template-columns: 1fr 1.5fr;\n  }\n`;\n\nconst DropdownColumn = styled.div`\n  padding-bottom: 1.5rem;\n\n  & > *:first-child {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n  max-width: 168px; // Size of button\n`;\n\nconst Icon = styled.span`\n  color: ${colors.primary};\n  cursor: pointer;\n`;\n\nfunction ItemDetails({ match }) {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [currentPrice, setCurrentPrice] = useState(0);\n  const [currentDimensions, setCurrentDimensions] = useState({\n    width: 0,\n    height: 0,\n    depth: 0,\n  });\n  const [currentColor, setCurrentColor] = useState(\"\");\n  const [currentOption, setCurrentOption] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  const [areDetailsOpen, setAreDetailsOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [recommendations, setRecommendations] = useState([]);\n  const { currentUser, signInAnonymously } = useAuth();\n  const { favorites, addFavorite, deleteFavorite } = useFavorite();\n  const { getItem, getRecommendations } = useShop();\n  const { addToCart } = useCart();\n  const { windowSize } = useWindowSize();\n\n  const handleFavorite = async (id) => {\n    let userId = currentUser && currentUser.uid;\n\n    if (!currentUser) {\n      const user = await signInAnonymously();\n      userId = user.user.uid;\n    }\n    favorites.includes(id)\n      ? deleteFavorite(userId, id)\n      : addFavorite(userId, id);\n  };\n\n  // Fetch the item data and store it in the state\n  useEffect(() => {\n    (async () => {\n      const { itemId } = match.params;\n      const item = await getItem(itemId);\n      setItem(item);\n      setCurrentPrice(item.price);\n      setCurrentDimensions(item.dimensions);\n      setLoading(false);\n    })();\n  }, []);\n\n  // Sets the default color and the default option (if there are any)\n  useEffect(() => {\n    if (Object.keys(item).length === 0) return;\n    setCurrentColor(item.colors[0]);\n\n    if (Object.keys(item.options).length !== 0) {\n      const options = [];\n      for (const key of Object.keys(item.options)) {\n        options.push({ [key]: item.options[key][0] });\n      }\n      setCurrentOption(options);\n    }\n  }, [item]);\n\n  // Changes the item's price and dimensions depending on the options (number of seats, size...) the user chooses.\n  useEffect(() => {\n    if (currentOption.length === 0) return;\n    const optionName = Object.keys(currentOption[0])[0];\n    setCurrentPrice(currentOption[0][optionName].price);\n    setCurrentDimensions(currentOption[0][optionName].dimensions);\n  }, [currentOption]);\n\n  const handleAddToCart = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n\n    // If the user is not signed in, we sign him up anonymously to save his cart and allow him to order.\n\n    let userId = currentUser && currentUser.uid;\n\n    if (!currentUser) {\n      const user = await signInAnonymously();\n      userId = user.user.uid;\n    }\n\n    try {\n      await addToCart(\n        userId,\n        item.id,\n        item.name,\n        currentColor.image,\n        currentColor,\n        currentOption,\n        quantity,\n        item.type,\n        currentPrice\n      );\n      setMessage(\n        `${item.name} in ${currentColor.description} was added to your cart.`\n      );\n    } catch (e) {\n      setMessage(\n        \"Sorry, there was an error: we were not able to add the item to your cart.\"\n      );\n    }\n  };\n\n  // Get Recommendations\n  useEffect(() => {\n    (async () => {\n      if (!item.id) return;\n      const recommendations = await getRecommendations(item.id);\n      setRecommendations(recommendations);\n    })();\n  }, [item]);\n\n  return (\n    <Container>\n      {!loading && (\n        <Center>\n          {window.size > 500 && (\n            <Category>\n              <Link to=\"/\">\n                <CategoryLink>Home</CategoryLink>\n              </Link>\n              <ArrowIcon>\n                <AngleRight />\n              </ArrowIcon>\n              <Link to=\"/shop\">\n                <CategoryLink>Shop</CategoryLink>\n              </Link>\n\n              {item.categories.map((category) => {\n                return (\n                  <React.Fragment key={category}>\n                    <ArrowIcon>\n                      <AngleRight />\n                    </ArrowIcon>\n                    <Link to={`/shop/${encodeURI(category)}`}>\n                      <CategoryLink>{formatNavLink(category)}</CategoryLink>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n            </Category>\n          )}\n\n          <Informations>\n            {windowSize.width > 600 && (\n              <ImagesPreview images={item.images} size=\"35rem\" />\n            )}\n            {windowSize.width < 600 && (\n              <ImagesPreview images={item.images} size=\"80vw\" />\n            )}\n            <Details>\n              <Row>\n                <Name>{item.name}</Name>\n                <Icon onClick={() => handleFavorite(item.id)}>\n                  {favorites.includes(item.id) ? <HeartFilled /> : <Heart />}\n                </Icon>\n              </Row>\n              <Price>£{currentPrice}</Price>\n              <Description>\n                {item.description.map((paragraph, index) => {\n                  return <p key={`description${index}`}>{paragraph}</p>;\n                })}\n              </Description>\n\n              <Selection onSubmit={handleAddToCart}>\n                <div>\n                  <TextLabel>Color: </TextLabel>\n                  <Choice> {currentColor.description}</Choice>\n                </div>\n                <ColorList>\n                  {item.colors.map((color) => {\n                    return (\n                      <li key={color.description}>\n                        <ColorLabel\n                          htmlFor={color.description}\n                          value={color.value}\n                          title={color.description}\n                          isSelected={\n                            currentColor.description === color.description\n                          }\n                        />\n                        <Checkbox\n                          type=\"checkbox\"\n                          id={color.description}\n                          name={color.description}\n                          onClick={() => setCurrentColor(color)}\n                        />\n                      </li>\n                    );\n                  })}\n                </ColorList>\n\n                <div>\n                  {Object.keys(item.options).map((option, index) => {\n                    return (\n                      <OptionsField key={option}>\n                        <TextLabel>{option}: </TextLabel>\n                        <Options>\n                          {item.options[option].map((choice) => {\n                            return (\n                              <React.Fragment key={choice.option}>\n                                <OptionLabel\n                                  htmlFor={choice.option}\n                                  isSelected={\n                                    currentOption[index][option].option ===\n                                    choice.option\n                                  }\n                                >\n                                  {choice.option}\n                                </OptionLabel>\n                                <Checkbox\n                                  type=\"checkbox\"\n                                  id={choice.option}\n                                  name={choice.option}\n                                  onChange={() =>\n                                    setCurrentOption((prev) => {\n                                      return [...prev].map((prevOption) => {\n                                        if (\n                                          Object.keys(prevOption)[0] === option\n                                        ) {\n                                          return { [option]: choice };\n                                        }\n                                        return prevOption;\n                                      });\n                                    })\n                                  }\n                                />\n                              </React.Fragment>\n                            );\n                          })}\n                        </Options>\n                      </OptionsField>\n                    );\n                  })}\n                </div>\n\n                <Row>\n                  <div>\n                    <Label htmlFor=\"quantity\">Quantity: </Label>\n                    <Quantity\n                      type=\"text\"\n                      id=\"quantity\"\n                      name=\"quantity\"\n                      value={quantity}\n                      required\n                      onChange={(e) => {\n                        const quantity = e.target.value.replace(/[^0-9]/g, \"\");\n                        setQuantity(quantity);\n                      }}\n                      onBlur={(e) => {\n                        if (e.target.value < 1) setQuantity(1);\n                      }}\n                    />\n                  </div>\n                  <Column>\n                    <SubmitBtn type=\"submit\">Add to Basket</SubmitBtn>\n                    <CSSTransition\n                      in={message.length !== 0}\n                      timeout={300}\n                      classNames=\"fade\"\n                    >\n                      <Message>{message}</Message>\n                    </CSSTransition>\n                  </Column>\n                </Row>\n              </Selection>\n\n              <Additional>\n                <AdditionalBtn\n                  onClick={() => setAreDetailsOpen(!areDetailsOpen)}\n                >\n                  Additional Information\n                  {areDetailsOpen ? <Minus /> : <Plus />}\n                </AdditionalBtn>\n\n                <CSSTransition\n                  in={areDetailsOpen}\n                  timeout={500}\n                  classNames=\"dropdown\"\n                  mountOnEnter\n                >\n                  <Dropdown>\n                    <DropdownColumn>\n                      <TextLabel>Dimensions (cm)</TextLabel>\n                      <ul>\n                        {Object.keys(currentDimensions).map((dimension) => {\n                          return (\n                            <Li key={dimension}>\n                              <AdditionalLabel>{dimension}: </AdditionalLabel>\n                              <AdditionalInfo>\n                                {\" \"}\n                                {currentDimensions[dimension]}\n                              </AdditionalInfo>\n                            </Li>\n                          );\n                        })}\n                      </ul>\n                    </DropdownColumn>\n\n                    {Object.keys(item.additional).length !== 0 && (\n                      <DropdownColumn>\n                        <TextLabel>Details</TextLabel>\n                        <ul>\n                          {Object.keys(item.additional).map((info) => {\n                            return (\n                              <Li key={info}>\n                                <AdditionalLabel>{info}: </AdditionalLabel>\n                                <AdditionalInfo>\n                                  {\" \"}\n                                  {item.additional[info]}\n                                </AdditionalInfo>\n                              </Li>\n                            );\n                          })}\n                        </ul>\n                      </DropdownColumn>\n                    )}\n                  </Dropdown>\n                </CSSTransition>\n              </Additional>\n            </Details>\n          </Informations>\n        </Center>\n      )}\n      {recommendations.length !== 0 && windowSize.width > 1300 && (\n        <Recommendations recommendations={recommendations} number={4} />\n      )}\n      {recommendations.length !== 0 &&\n        windowSize.width > 800 &&\n        windowSize.width <= 1300 && (\n          <Recommendations recommendations={recommendations} number={3} />\n        )}\n      {recommendations.length !== 0 &&\n        windowSize.width > 500 &&\n        windowSize.width <= 800 && (\n          <Recommendations recommendations={recommendations} number={2} />\n        )}\n      {recommendations.length !== 0 && windowSize.width <= 500 && (\n        <Recommendations recommendations={recommendations} number={1} />\n      )}\n    </Container>\n  );\n}\n\nexport default ItemDetails;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/Design.jsx",["434","435","436","437","438","439","440","441","442"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport useDesign from \"../../../hooks/useDesign\";\nimport useShop from \"../../../hooks/useShop\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport ShopItemPreview from \"../../../components/shop/display/ShopItemPreview\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 27%)\", // Grey\n  secondary: \"hsl(0, 0%, 40%)\",\n  background: \"hsl(0, 0%, 100%)\",\n  accent: \"hsl(46, 65%, 52%)\", // Gold\n};\n\nconst Container = styled.div`\n  padding: 5rem 0;\n  max-width: 80%;\n`;\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  // grid-template-columns: repeat(3, 1fr);\n  grid-gap: 3vw;\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n\n  @media all and (min-width: 900px) {\n    width: 40rem;\n    height: 25rem;\n  }\n\n  @media all and (min-width: 1000px) {\n    width: 50rem;\n    height: 35rem;\n  }\n`;\n\nconst Presentation = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > *:first-child {\n    margin-bottom: 5rem;\n  }\n\n  @media all and (min-width: 1000px) {\n    margin-bottom: 7.5rem;\n  }\n`;\n\nconst Heading = styled.h2`\n  color: ${colors.dark};\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 300;\n  font-size: 1.5rem;\n`;\n\nconst Decoration = styled.span`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  color: ${colors.accent};\n  margin: 1rem 0;\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    margin: 0 1rem;\n    height: 1px;\n    width: 5rem;\n    background: ${colors.accent};\n    background: linear-gradient(270deg, transparent, ${colors.accent});\n  }\n\n  &:before {\n    background: linear-gradient(270deg, ${colors.accent}, transparent);\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  max-height: 100%;\n  object-fit: cover;\n`;\n\nconst Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: ${colors.background};\n  opacity: 0.95;\n  color: ${colors.secondary};\n  max-width: 25rem;\n  border: 5px solid ${colors.primary};\n  outline: 2px solid ${colors.primary};\n  outline-offset: 5px;\n  padding: 3rem;\n  line-height: 1.5rem;\n  text-align: justify;\n\n  & > p {\n    margin-bottom: 1rem;\n  }\n\n  & > p:last-child {\n    margin-bottom: 0;\n  }\n\n  @media all and (min-width: 1000px) {\n    position: absolute;\n    bottom: -5rem;\n    right: -5rem;\n  }\n`;\n\nfunction Design({ match }) {\n  const [design, setDesign] = useState();\n  const [items, setItems] = useState([]);\n  const { favorites } = useFavorite();\n  const { getDesign } = useDesign();\n  const { getItem } = useShop();\n\n  useEffect(() => {\n    (async () => {\n      const design = await getDesign(match.params.id);\n      setDesign(design);\n\n      const items = [];\n      for (const itemId of design.items) {\n        const item = await getItem(itemId);\n        items.push(item);\n      }\n      setItems(items);\n    })();\n  }, []);\n\n  return (\n    <Container>\n      {design && (\n        <>\n          <Presentation>\n            <ImageContainer>\n              <Image src={design.image} alt={design.name} />\n            </ImageContainer>\n\n            <Text>\n              <Heading>{design.name}</Heading>\n              <Decoration>⬧</Decoration>\n              {design.description.map((paragraph) => {\n                return <p>{paragraph}</p>;\n              })}\n            </Text>\n          </Presentation>\n\n          <ShopList>\n            {items.map((item) => {\n              return (\n                <ShopItemPreview\n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                  isFavorite={favorites.includes(item.id)}\n                  isNew={item.new}\n                />\n              );\n            })}\n          </ShopList>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Design;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/display/NewIn.jsx",["443","444","445"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport useShop from \"../../../hooks/useShop\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport ShopItemPreview from \"../../../components/shop/display/ShopItemPreview\";\nimport SideFilters from \"../../../components/shop/display/SideFilters\";\nimport Filters from \"../../../components/shop/display/Filters\";\nimport Sort from \"../../../components/shop/display/Sort\";\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-gap: 3vw;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, auto);\n  }\n\n  @media all and (min-width: 1350px) {\n    grid-template-columns: repeat(3, auto);\n  }\n`;\n\nconst Shop = styled.div`\n  display: grid;\n  grid-column-gap: 1rem;\n  padding: 5rem 0;\n  justify-items: center;\n\n  @media all and (min-width: 768px) {\n    grid-template-columns: auto 1fr;\n  }\n\n  @media all and (min-width: 992px) {\n    width: 80%;\n  }\n`;\n\nconst Content = styled.div`\n  justify-self: stretch;\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  justify-items: stretch;\n  grid-gap: 2rem;\n  margin-bottom: 1rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media all and (min-width: 830px) {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n\nfunction NewIn() {\n  const [items, setItems] = useState([]); // All items that belong in the category\n  const [unsortedItems, setUnsortedItems] = useState([]); // Items when \"sorted\" by \"featured\".\n  const [sort, setSort] = useState(\"featured\");\n  const [filters, setFilters] = useState({\n    colors: [],\n    materials: [],\n    price: Infinity,\n    dimensions: {\n      width: Infinity,\n      height: Infinity,\n      depth: Infinity,\n    },\n    seats: [],\n  });\n  const [displayedItems, setDisplayedItems] = useState([]); // Items displayed after filters are applied\n  const { getNewItems } = useShop();\n  const { favorites } = useFavorite();\n  const { windowSize } = useWindowSize();\n\n  // Loads all category items and sets up filters\n  useEffect(() => {\n    (async () => {\n      const itemsList = await getNewItems();\n      setItems(itemsList);\n    })();\n  }, []);\n\n  // Modify filters\n  const handleFilters = (field, value) => {\n    setFilters((filters) => {\n      return { ...filters, [field]: value };\n    });\n  };\n\n  // Sorting items\n  const handleSort = (sort) => {\n    setSort(sort);\n  };\n\n  // Update displayed items depending on which filters are applied.\n  useEffect(() => {\n    let displayedItems = [...items];\n\n    // Colors filter\n    if (filters.colors.length > 0) {\n      displayedItems = displayedItems.filter((item) =>\n        item.queries.colors.some((color) => filters.colors.includes(color))\n      );\n    }\n\n    // Materials filter\n    if (filters.materials.length > 0) {\n      displayedItems = displayedItems.filter((item) =>\n        item.queries.materials.some((material) =>\n          filters.materials.includes(material)\n        )\n      );\n    }\n\n    // Price filter\n    displayedItems = displayedItems.filter(\n      (item) => item.queries.price.min <= filters.price\n    );\n\n    // Dimensions filter\n    displayedItems = displayedItems.filter(\n      (item) =>\n        item.queries.dimensions.width.min <= filters.dimensions.width &&\n        item.queries.dimensions.height.min <= filters.dimensions.height &&\n        item.queries.dimensions.depth.min <= filters.dimensions.depth\n    );\n\n    // Seats filter\n    if (filters.seats.length > 0) {\n      displayedItems = displayedItems.filter(\n        (item) =>\n          item.queries.seats &&\n          item.queries.seats.some((number) => filters.seats.includes(number))\n      );\n    }\n    setDisplayedItems(displayedItems);\n    setUnsortedItems(displayedItems);\n  }, [items, filters]);\n\n  // Update displayed items depending on the sorting filter the user chooses.\n  useEffect(() => {\n    switch (sort) {\n      case \"featured\":\n        setItems(unsortedItems);\n        break;\n      case \"new\":\n        setDisplayedItems([...displayedItems].sort((a, b) => a.date - b.date));\n        break;\n      case \"alphabetical_increasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => a.name.localeCompare(b.name))\n        );\n        break;\n      case \"alphabetical_decreasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => b.name.localeCompare(a.name))\n        );\n        break;\n      case \"price_increasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => a.price - b.price)\n        );\n        break;\n      case \"price_decreasing\":\n        setDisplayedItems(\n          [...displayedItems].sort((a, b) => b.price - a.price)\n        );\n        break;\n      default:\n    }\n  }, [sort]);\n\n  return (\n    <Shop>\n      {windowSize.width > 830 && (\n        <SideFilters items={items} handleFilters={handleFilters} />\n      )}\n      <Content>\n        <Buttons>\n          <Sort handleSort={handleSort} />\n          {windowSize.width <= 830 && (\n            <Filters items={items} handleFilters={handleFilters} />\n          )}\n        </Buttons>\n        <ShopList>\n          {displayedItems.map((item) => {\n            return (\n              <li key={item.id}>\n                <ShopItemPreview\n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                  isFavorite={favorites.includes(item.id)}\n                  isNew={item.new}\n                />\n              </li>\n            );\n          })}\n        </ShopList>\n      </Content>\n    </Shop>\n  );\n}\n\nexport default NewIn;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.jsx",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Order from \"../../../components/shop/checkout/Order\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useCart from \"../../../hooks/useCart\";\nimport useOrder from \"../../../hooks/useOrder\";\nimport usePayment from \"../../../hooks/usePayment\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\n\n// Icon\nimport check from \"../../../assets/icons/icon-check.svg\";\nimport iconX from \"../../../assets/icons/icon-x.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Button and checkbox\n  tertiary: \"hsl(0, 0%, 90%)\",\n  input: \"hsl(0, 0%, 70%)\", // Input lines\n  black: \"hsl(0, 0%, 0%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem 2rem;\n\n  @media all and (min-width: 576px) {\n    margin: 5rem;\n  }\n`;\n\nconst Content = styled.div`\n  width: 100%;\n\n  @media all and (min-width: 900px) {\n    display: flex;\n    align-items: start;\n    max-width: 1400px;\n    width: 80%;\n  }\n`;\n\nconst Left = styled.div`\n  min-width: 40vw;\n`;\n\nconst Category = styled.div`\n  margin-bottom: 2.5rem;\n`;\n\nconst CategoryName = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.25rem;\n`;\n\nconst Informations = styled.div`\n  line-height: 1.125rem;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-gap: 3rem 5rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst HiddenInput = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: \"\";\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => props.isChecked && colors.secondary};\n    background-image: ${(props) => props.isChecked && `url(${check})`};\n    background-position: ${(props) => props.isChecked && \"center\"};\n  }\n`;\n\nconst Li = styled.li`\n  padding-left: 1rem;\n  text-indent: 1rem;\n  line-height: 1.25rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n\n  &:before {\n    content: \"\";\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    background: url(${iconX});\n  }\n`;\n\nconst CardButton = styled.button`\n  margin-left: auto;\n  color: ${colors.secondary};\n\n  &:hover {\n    color: ${colors.black};\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 2.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nfunction Payment({ location }) {\n  /* Props :\n    - location.state.personal : informations the user entered on the informations page.\n  */\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  const history = useHistory();\n  const { windowSize } = useWindowSize();\n  const { currentUser } = useAuth();\n  const { getCart, deleteCart } = useCart();\n  const { addCard, getCards } = usePayment();\n  const { createOrder } = useOrder();\n\n  // If the user is logged in, they might have saved cards.\n  // We display them so that they can checkout faster.\n  useEffect(() => {\n    if (currentUser.isAnonymous) return;\n    (async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n    })();\n  }, []);\n\n  const confirmOrder = async (e) => {\n    e.preventDefault();\n\n    const cart = await getCart(currentUser.uid);\n\n    // If the user is logged in, we add their id in the order so that we can add it to their orders list.\n    const order = await createOrder(\n      cart,\n      location.state.personal,\n      {\n        name,\n        number,\n        date,\n        cvc,\n      },\n      currentUser.uid\n    );\n    await deleteCart(currentUser.uid);\n\n    if (remember) {\n      addCard(currentUser.uid, name, number, date, cvc);\n    }\n\n    history.push({\n      pathname: `/shop/confirmation/${order}`,\n      state: {\n        payment: true,\n      },\n    });\n  };\n\n  return (\n    <>\n      {location.state ? (\n        <Container>\n          <Content>\n            <Left>\n              <Heading>Checkout</Heading>\n\n              <Category>\n                <Subheading>Shipping Details</Subheading>\n                <Informations>\n                  <div>\n                    {location.state.personal.firstName}\n{\" \"}\n                    {location.state.personal.lastName}\n                  </div>\n                  <div>{location.state.personal.address}</div>\n                  <div>\n                    {location.state.personal.zipCode}\n{\" \"}\n                    {location.state.personal.city}\n                  </div>\n                  <div>{location.state.personal.country}</div>\n                </Informations>\n              </Category>\n\n              <Category>\n                <Subheading>Payment Details</Subheading>\n                {cards.length !== 0 && (\n                  <>\n                    <CategoryName>Use an existing card</CategoryName>\n\n                    <Category>\n                      {cards.map((card) => {\n                        return (\n                          <Li key={card.id}>\n                            <div>\n                              <strong>{card.name}</strong>\n{' '}\n—{\" \"}\n                              {card.number.slice(-4)}\n                            </div>\n                            <CardButton\n                              type=\"button\"\n                              onClick={async () => {\n                                const cart = await getCart(currentUser.uid);\n                                const order = await createOrder(\n                                  cart,\n                                  location.state.personal,\n                                  {\n                                    name: card.name,\n                                    number: card.number,\n                                    date: card.date,\n                                    cvc: card.cvc,\n                                  },\n                                  currentUser.uid\n                                );\n                                await deleteCart(currentUser.uid);\n\n                                history.push({\n                                  pathname: `/shop/confirmation/${order}`,\n                                  state: {\n                                    payment: true,\n                                  },\n                                });\n                              }}\n                            >\n                              Pay with this card →\n                            </CardButton>\n                          </Li>\n                        );\n                      })}\n                    </Category>\n\n                    <CategoryName>Use another card</CategoryName>\n                  </>\n                )}\n\n                <Form onSubmit={confirmOrder}>\n                  <Fields>\n                    <FieldLarge>\n                      <Label htmlFor=\"name\">Name on card</Label>\n                      <Input\n                        type=\"text\"\n                        value={name}\n                        id=\"name\"\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"Enter your full name\"\n                      />\n                    </FieldLarge>\n\n                    <FieldLarge>\n                      <Label htmlFor=\"card_number\">Card number</Label>\n                      <Input\n                        type=\"text\"\n                        value={number}\n                        id=\"card_number\"\n                        onChange={(e) => {\n                          const number = e.target.value.replace(/[^0-9]/g, \"\");\n                          setNumber(number);\n                        }}\n                        placeholder=\"Enter your card number\"\n                      />\n                    </FieldLarge>\n\n                    <Field>\n                      <Label htmlFor=\"date\">Valid Through</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"date\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)}\n                        placeholder=\"MM / YY\"\n                      />\n                    </Field>\n\n                    <Field>\n                      <Label htmlFor=\"cvc\">CVC Code</Label>\n                      <Input\n                        type=\"text\"\n                        id=\"cvc\"\n                        value={cvc}\n                        onChange={(e) => {\n                          const cvc = e.target.value.replace(/[^0-9]/g, \"\");\n                          setCvc(cvc);\n                        }}\n                        placeholder=\"Enter your CVC code\"\n                      />\n                    </Field>\n\n                    {!currentUser.isAnonymous && (\n                      <>\n                        <CheckboxLabel htmlFor=\"remember\" isChecked={remember}>\n                          Remember my card for easier checkout.\n                        </CheckboxLabel>\n                        <HiddenInput\n                          type=\"checkbox\"\n                          id=\"remember\"\n                          name=\"remember\"\n                          checked={remember}\n                          onChange={() => setRemember(!remember)}\n                        />\n                      </>\n                    )}\n                  </Fields>\n\n                  <Button type=\"submit\">Confirm my order</Button>\n                </Form>\n              </Category>\n            </Left>\n            {windowSize.width > 900 && <Order />}\n          </Content>\n        </Container>\n      ) : (\n        <Redirect to=\"/shop/cart\" />\n      )}\n    </>\n  );\n}\n\nexport default Payment;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.jsx",["481","482","483","484","485","486"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport useAddress from \"../../../hooks/useAddress\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport Order from \"../../../components/shop/checkout/Order\";\n\n// Icon\nimport check from \"../../../assets/icons/icon-check.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Button and checkbox\n  tertiary: \"hsl(0, 0%, 90%)\",\n  input: \"hsl(0, 0%, 70%)\", // Input lines\n  black: \"hsl(0, 0%, 0%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem 0;\n\n  @media all and (min-width: 576px) {\n    margin: 5rem;\n  }\n`;\n\nconst Content = styled.div`\n  width: 80%;\n\n  @media all and (min-width: 900px) {\n    display: flex;\n    align-items: start;\n    max-width: 1400px;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 40vw;\n`;\n\nconst Category = styled.div`\n  display: grid;\n  grid-gap: 3rem 5rem;\n  margin: 1.25rem 0 3rem 0;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst CategoryName = styled.div`\n  grid-column: 1 / -1;\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Checkbox = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: \"\";\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => (props.isChecked ? colors.secondary : \"\")};\n    background-image: ${(props) => (props.isChecked ? `url(${check})` : \"\")};\n    background-position: ${(props) => (props.isChecked ? \"center\" : \"\")};\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\n// Address Book\n\nconst Addresses = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n  margin-bottom: 2.5rem;\n`;\n\nfunction Personal({ location }) {\n  /* Props :\n    - location.state.isPaying : true if user comes from /shop/cart.\n  */\n\n  const [additional, setAdditional] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n\n  const { currentUser } = useAuth();\n  const { windowSize } = useWindowSize();\n  const {\n    handleAddAddress,\n    getAddresses,\n    firstName,\n    setFirstName,\n    lastName,\n    setLastName,\n    address,\n    setAddress,\n    city,\n    setCity,\n    zipCode,\n    setZipCode,\n    country,\n    setCountry,\n    email,\n    setEmail,\n    phone,\n    setPhone,\n  } = useAddress();\n  const history = useHistory();\n\n  // If the user is logged in, they might have saved addresses.\n  // We display them so that they can checkout faster.\n  useEffect(() => {\n    if (currentUser.isAnonymous) return;\n    (async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n    })();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (remember) {\n      handleAddAddress(currentUser.uid);\n    }\n\n    history.push({\n      pathname: \"/shop/payment\",\n      state: {\n        personal: {\n          firstName,\n          lastName,\n          email,\n          phone,\n          address,\n          city,\n          zipCode,\n          country,\n        },\n      },\n    });\n  };\n\n  return (\n    <>\n      {/* If the user didn't access to this page via the cart links,\n       - Redirect them to their cart.\n       - Otherwise, ask for their personal details. */}\n      {location.state ? (\n        <Container>\n          <Content>\n            <Form onSubmit={handleSubmit}>\n              <Heading>Personal Details</Heading>\n\n              {!currentUser.isAnonymous && addresses.length !== 0 && (\n                <>\n                  <Subheading>Address Book</Subheading>\n                  <Addresses>\n                    {addresses.map((address) => {\n                      return (\n                        <div key={address.id}>\n                          <div>\n                            {address.firstName} {address.lastName}\n                          </div>\n                          <div>{address.address}</div>\n                          <div>\n                            {address.zipCode} {address.city}\n                          </div>\n                          <div>{address.country}</div>\n                          <Button\n                            onClick={() => {\n                              history.push({\n                                pathname: \"/shop/payment\",\n                                state: {\n                                  personal: {\n                                    firstName: address.firstName,\n                                    lastName: address.lastName,\n                                    address: address.address,\n                                    zipCode: address.zipCode,\n                                    country: address.country,\n                                    city: address.city,\n                                    email: address.email,\n                                    phone: address.phone,\n                                    additional,\n                                  },\n                                },\n                              });\n                            }}\n                          >\n                            Use this address\n                          </Button>\n                        </div>\n                      );\n                    })}\n                  </Addresses>\n\n                  <Subheading>Use another address</Subheading>\n                </>\n              )}\n\n              <CategoryName>General</CategoryName>\n              <Category>\n                <Field>\n                  <Label htmlFor=\"first_name\">First Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={firstName}\n                    id=\"first_name\"\n                    onChange={(e) => setFirstName(e.target.value)}\n                    placeholder=\"Enter your first name\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"last_name\">Last Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={lastName}\n                    id=\"last_name\"\n                    onChange={(e) => setLastName(e.target.value)}\n                    placeholder=\"Enter your last name\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    type=\"email\"\n                    id=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Enter your email\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"phone\">Phone Number</Label>\n                  <Input\n                    type=\"tel\"\n                    id=\"phone\"\n                    value={phone}\n                    onChange={(e) => setPhone(e.target.value)}\n                    placeholder=\"Enter your phone number\"\n                    required\n                  />\n                </Field>\n              </Category>\n\n              <CategoryName>Delivery</CategoryName>\n              <Category>\n                <Field>\n                  <Label htmlFor=\"address\">Address</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"address\"\n                    value={address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    placeholder=\"Enter your address\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"zip_code\">Zip Code</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"zip_code\"\n                    value={zipCode}\n                    onChange={(e) => setZipCode(e.target.value)}\n                    placeholder=\"Enter your zip code\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"city\">City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"city\"\n                    value={city}\n                    onChange={(e) => setCity(e.target.value)}\n                    placeholder=\"Enter your city\"\n                    required\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor=\"country\">Country</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"country\"\n                    value={country}\n                    onChange={(e) => setCountry(e.target.value)}\n                    placeholder=\"Enter your country\"\n                    required\n                  />\n                </Field>\n\n                <FieldLarge>\n                  <Label htmlFor=\"additional\">Additional Informations</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"additional\"\n                    value={additional}\n                    onChange={(e) => setAdditional(e.target.value)}\n                    placeholder=\"Anything else you would like to tell us (building entrance codes, prefered delivery time...)\"\n                  />\n                </FieldLarge>\n              </Category>\n\n              {currentUser && !currentUser.isAnonymous && (\n                <>\n                  <CheckboxLabel htmlFor=\"remember\" isChecked={remember}>\n                    Remember my informations for easier checkout.\n                  </CheckboxLabel>\n                  <Checkbox\n                    type=\"checkbox\"\n                    id=\"remember\"\n                    name=\"remember\"\n                    checked={remember}\n                    onChange={() => setRemember(!remember)}\n                  />\n                </>\n              )}\n\n              <Button type=\"submit\">Proceed to Payment</Button>\n            </Form>\n            {windowSize.width > 900 && <Order />}\n          </Content>\n        </Container>\n      ) : (\n        <Redirect to=\"/shop/cart\" />\n      )}\n    </>\n  );\n}\n\nexport default Personal;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Confirmation.jsx",["487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useOrder from \"../../../hooks/useOrder\";\nimport CartPreview from \"../../../components/shop/cart/CartPreview\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Darker grey - for payment background\n  text: \"hsl(0, 0%, 95%)\", // White - for payment text\n  button: \"hsl(0, 0%, 100%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  margin: 5rem;\n`;\n\nconst Content = styled.div`\n  @media all and (min-width: 900px) {\n    display: flex;\n    align-items: start;\n    max-width: 1400px;\n  }\n`;\n\nconst Order = styled.div`\n  min-width: 40vw;\n`;\n\nconst Summary = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Message = styled.aside`\n  @media all and (min-width: 900px) {\n    margin-left: 5rem;\n    margin-top: 0;\n  }\n\n  margin-top: 3rem;\n  background: ${colors.secondary};\n  color: ${colors.text};\n  padding: 4rem;\n  display: flex;\n  flex-direction: column;\n  max-width: 25rem;\n  line-height: 1.25rem;\n  text-align: justify;\n\n  & > * {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst MessageHeading = styled.h2`\n  text-transform: uppercase;\n  font-size: 1.125rem;\n  letter-spacing: 1px;\n  align-self: center;\n  margin-bottom: 2rem;\n`;\n\nconst MessageLink = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst CategoryName = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  background: ${colors.text};\n  color: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  margin: 1rem 0;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &:hover {\n    background: ${colors.button};\n  }\n`;\n\nfunction Confirmation({ match, location }) {\n  const [order, setOrder] = useState({});\n  const [loading, setLoading] = useState(true);\n  const { getOrder } = useOrder();\n\n  useEffect(() => {\n    (async () => {\n      const order = await getOrder(match.params.id);\n      setOrder(order);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Container>\n        <Content>\n          {!loading && (\n            <Order>\n              <Heading>Order Confirmation</Heading>\n\n              <Summary>\n                <CategoryName>Order Summary</CategoryName>\n                <CartPreview cart={order.products} />\n              </Summary>\n\n              <div>\n                <CategoryName>Shipping Details</CategoryName>\n                {order.shipping.firstName} {order.shipping.lastName}\n                <br />\n                {order.shipping.address}\n                <br />\n                {order.shipping.zipCode} {order.shipping.city}\n                <br />\n                {order.shipping.country}\n              </div>\n            </Order>\n          )}\n\n          <Message>\n            <MessageHeading>Confirmation</MessageHeading>\n\n            <p>\n              Your order n°\n              <strong>{match.params.id}</strong>\n{' '}\nhas been confirmed. You will be\n              receiving a confirmation mail with your order details shortly.\n</p>\n\n            <p>\n              You can follow your order's status at any given time{\" \"}\n              <MessageLink>\n                <Link to=\"/\">here</Link>\n              </MessageLink>\n              . If you have any other questions, feel free to{\" \"}\n              <MessageLink>\n                <Link to=\"/contact\">contact us.</Link>\n              </MessageLink>\n            </p>\n\n            <p>Thank you for shopping with us!</p>\n\n            <Button>\n              <Link to=\"/shop\">Continue Shopping</Link>\n            </Button>\n          </Message>\n        </Content>\n      </Container>\n    </div>\n  );\n}\n\nexport default Confirmation;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Orders.jsx",["507"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useOrder from \"../../../hooks/useOrder\";\nimport Order from \"../../../components/account/Order\";\n\nconst Heading = styled.h1`\n  margin-left: 2rem;\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n\n  @media all and (min-width: 500px) {\n    margin-left: 0;\n  }\n`;\n\nfunction Orders() {\n  const { currentUser } = useAuth();\n  const { getOrders } = useOrder();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const orders = await getOrders(currentUser.uid);\n      setOrders(orders);\n    })();\n  }, []);\n\n  return (\n    <div>\n      <Heading>Orders</Heading>\n      <div>\n        {orders.map((order) => {\n          return <Order order={order} key={order.id} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Orders;\n","/home/aureen/the_odin_project/room_homepage/src/components/account/AccountNav.jsx",["508"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 0%)\", // Black\n  secondary: \"hsl(0, 0%, 37%)\", // Grey\n};\n\nconst Nav = styled.nav`\n  margin-bottom: 1rem;\n  display: flex;\n  justify-content: space-between;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: capitalize;\n  max-width: 80vw;\n  width: 100vw;\n\n  & > * {\n    margin: 0.5rem 0;\n  }\n\n  @media all and (min-width: 930px) {\n    flex-direction: column;\n    margin-bottom: 0;\n    margin-right: 5rem;\n    width: initial;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  color: ${colors.secondary};\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n\n  @media all and (min-width: 930px) {\n    transform: translateX(${(props) => (props.selected ? \"0\" : \"3\")}%);\n  }\n`;\n\nconst CurrentLink = styled.span`\n  position: relative;\n  color: ${colors.primary};\n  font-weight: 600;\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    left: 0;\n    content: \"\";\n    display: block;\n    height: 2px;\n    bottom: -0.5rem;\n    position: absolute;\n    background: ${colors.secondary};\n    transition: all 0.3s ease 0s, top 0.3s ease 0s;\n    width: ${(props) => (props.isSelected ? \"110%\" : \"0\")};\n    left: ${(props) => (props.isSelected ? \"-2.5%\" : \"50%\")};\n  }\n\n  @media all and (min-width: 930px) {\n    &:after {\n      bottom: 0;\n      width: 2px;\n      left: -1rem;\n      height: ${(props) => (props.isSelected ? \"110%\" : \"0\")};\n      top: ${(props) => (props.isSelected ? \"5%\" : \"50%\")};\n    }\n  }\n`;\n\nfunction AccountNav({ currentLink }) {\n  const [links, setLinks] = useState([\n    \"user\",\n    \"orders\",\n    \"addresses\",\n    \"payment\",\n  ]);\n\n  return (\n    <Nav>\n      {links.map((link) => {\n        return currentLink === link ? (\n          <CurrentLink key={link} isSelected={currentLink === link}>\n            {link}\n          </CurrentLink>\n        ) : (\n          <NavLink to={`/account/${link}`} key={link}>\n            {link}\n          </NavLink>\n        );\n      })}\n    </Nav>\n  );\n}\n\nAccountNav.propTypes = {\n  currentLink: PropTypes.string.isRequired,\n};\n\nexport default AccountNav;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Addresses.jsx",["509","510","511","512","513","514","515"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useAddress from \"../../../hooks/useAddress\";\n\n// Icons\nimport { ReactComponent as Plus } from \"../../../assets/icons/icon-plus.svg\";\nimport { ReactComponent as Minus } from \"../../../assets/icons/icon-minus.svg\";\nimport { ReactComponent as Close } from \"../../../assets/icons/icon-close.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n  dark: \"hsl(0, 0%, 0%)\",\n};\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormHeading = styled(Subheading)`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Category = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  margin: 1rem 0;\n  color: ${colors.secondary};\n`;\n\nconst AddressBook = styled.div`\n  display: grid;\n  margin: 2rem;\n  grid-gap: 2rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media all and (min-width: 992px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Address = styled.div`\n  padding: 1rem;\n  border: 1px solid ${colors.tertiary};\n  border-radius: 5px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-gap: 3rem 5rem;\n  margin-bottom: 2.5rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst ButtonEmpty = styled(Button)`\n  background: transparent;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n\n  &:hover {\n    color: ${colors.dark};\n  }\n`;\n\nconst EditModal = styled(Modal)`\n  position: absolute;\n  max-width: 600px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${colors.label};\n  padding: 4rem;\n  border: 1px solid ${colors.secondary};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst EditHeading = styled.h2`\n  text-align: center;\n  font-family: \"Playfair Display\", sans-serif;\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Icon = styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: 1rem;\n  right: 1rem;\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nfunction Addresses() {\n  const [addresses, setAddresses] = useState([]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const { currentUser } = useAuth();\n  const {\n    handleAddAddress,\n    handleStartEditing,\n    handleEditAddress,\n    deleteAddress,\n    getAddresses,\n    addressListener,\n    firstName,\n    setFirstName,\n    lastName,\n    setLastName,\n    address,\n    setAddress,\n    city,\n    setCity,\n    zipCode,\n    setZipCode,\n    country,\n    setCountry,\n    email,\n    setEmail,\n    phone,\n    setPhone,\n    message,\n    isEditing,\n    setIsEditing,\n    firstNameEdit,\n    setFirstNameEdit,\n    lastNameEdit,\n    setLastNameEdit,\n    addressEdit,\n    setAddressEdit,\n    cityEdit,\n    setCityEdit,\n    zipCodeEdit,\n    setZipCodeEdit,\n    countryEdit,\n    setCountryEdit,\n    emailEdit,\n    setEmailEdit,\n    phoneEdit,\n    setPhoneEdit,\n    messageEdit,\n  } = useAddress();\n\n  useEffect(() => {\n    (async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n\n      // If the user doesn't have any addresses yet, the \"add a new address\" form opens.\n      addresses.length === 0 && setIsDropdownOpen(true);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = addressListener(currentUser.uid, async () => {\n      const addresses = await getAddresses(currentUser.uid);\n      setAddresses(addresses);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <div>\n      <Heading>Address Book</Heading>\n      <div>\n        <Subheading>Current addresses</Subheading>\n        {addresses.length === 0 ? (\n          <Instructions>\n            <div>You do not currently have any saved addresses.</div>\n            <div>Add one by completing the form below.</div>\n          </Instructions>\n        ) : (\n          <AddressBook>\n            {addresses.map((address) => {\n              return (\n                <React.Fragment key={address.id}>\n                  <Address>\n                    <strong>\n                      {address.firstName} {address.lastName}\n                    </strong>\n                    <div>{address.address}</div>\n                    <div>\n                      {address.zipCode} {address.city}\n                    </div>\n                    <div>{address.country}</div>\n\n                    <Buttons>\n                      <ButtonEmpty onClick={() => handleStartEditing(address)}>\n                        Edit\n                      </ButtonEmpty>\n                      <Button\n                        onClick={() =>\n                          deleteAddress(currentUser.uid, address.id)\n                        }\n                      >\n                        Delete\n                      </Button>\n                    </Buttons>\n                  </Address>\n\n                  <EditModal\n                    isOpen={isEditing}\n                    onRequestClose={() => setIsEditing(false)}\n                    style={{\n                      overlay: {\n                        backgroundColor: \"rgba(255, 255, 255, .55)\",\n                      },\n                    }}\n                  >\n                    <EditHeading>Edit your address</EditHeading>\n                    <Icon onClick={() => setIsEditing(false)}>\n                      <Close />\n                    </Icon>\n                    <Form\n                      onSubmit={async (e) => {\n                        e.preventDefault();\n                        handleEditAddress(currentUser.uid, address.id);\n                      }}\n                    >\n                      <Category>General</Category>\n                      <Fields>\n                        <Field>\n                          <Label htmlFor=\"first_name_edit\">First Name</Label>\n                          <Input\n                            type=\"text\"\n                            value={firstNameEdit}\n                            id=\"first_name_edit\"\n                            onChange={(e) => setFirstNameEdit(e.target.value)}\n                            placeholder=\"Enter your first name\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"last_name_edit\">Last Name</Label>\n                          <Input\n                            type=\"text\"\n                            value={lastNameEdit}\n                            id=\"last_name_edit\"\n                            onChange={(e) => setLastNameEdit(e.target.value)}\n                            placeholder=\"Enter your last name\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"email_edit\">Email</Label>\n                          <Input\n                            type=\"email\"\n                            id=\"email_edit\"\n                            value={emailEdit}\n                            onChange={(e) => setEmailEdit(e.target.value)}\n                            placeholder=\"Enter your email\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"phone_edit\">Phone Number</Label>\n                          <Input\n                            type=\"tel\"\n                            id=\"phone_edit\"\n                            value={phoneEdit}\n                            onChange={(e) => setPhoneEdit(e.target.value)}\n                            placeholder=\"Enter your phone number\"\n                          />\n                        </Field>\n                      </Fields>\n\n                      <Category>Delivery</Category>\n\n                      <Fields>\n                        <Field>\n                          <Label htmlFor=\"address_edit\">Address</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"address_edit\"\n                            value={addressEdit}\n                            onChange={(e) => setAddressEdit(e.target.value)}\n                            placeholder=\"Enter your address\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"zip_code_edit\">Zip Code</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"zip_code_edit\"\n                            value={zipCodeEdit}\n                            onChange={(e) => setZipCodeEdit(e.target.value)}\n                            placeholder=\"Enter your zip code\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"city_edit\">City</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"city_edit\"\n                            value={cityEdit}\n                            onChange={(e) => setCityEdit(e.target.value)}\n                            placeholder=\"Enter your city\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"country_edit\">Country</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"country_edit\"\n                            value={countryEdit}\n                            onChange={(e) => setCountryEdit(e.target.value)}\n                            placeholder=\"Enter your country\"\n                          />\n                        </Field>\n                      </Fields>\n                      <Buttons>\n                        <ButtonEmpty onClick={() => setIsEditing(false)}>\n                          Cancel\n                        </ButtonEmpty>\n                        <Button type=\"submit\">Edit your address</Button>\n                      </Buttons>\n                      <Message>{messageEdit}</Message>\n                    </Form>\n                  </EditModal>\n                </React.Fragment>\n              );\n            })}\n          </AddressBook>\n        )}\n\n        <FormHeading onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n          Add a new address\n          {isDropdownOpen ? <Minus /> : <Plus />}\n        </FormHeading>\n\n        {isDropdownOpen && (\n          <Form\n            onSubmit={(e) => {\n              e.preventDefault();\n              handleAddAddress(currentUser.uid);\n            }}\n          >\n            <Category>General</Category>\n            <Fields>\n              <Field>\n                <Label htmlFor=\"first_name\">First Name</Label>\n                <Input\n                  type=\"text\"\n                  value={firstName}\n                  id=\"first_name\"\n                  onChange={(e) => setFirstName(e.target.value)}\n                  placeholder=\"Enter your first name\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"last_name\">Last Name</Label>\n                <Input\n                  type=\"text\"\n                  value={lastName}\n                  id=\"last_name\"\n                  onChange={(e) => setLastName(e.target.value)}\n                  placeholder=\"Enter your last name\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  type=\"tel\"\n                  id=\"phone\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  placeholder=\"Enter your phone number\"\n                />\n              </Field>\n            </Fields>\n\n            <Category>Delivery</Category>\n\n            <Fields>\n              <Field>\n                <Label htmlFor=\"address\">Address</Label>\n                <Input\n                  type=\"text\"\n                  id=\"address\"\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                  placeholder=\"Enter your address\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"zip_code\">Zip Code</Label>\n                <Input\n                  type=\"text\"\n                  id=\"zip_code\"\n                  value={zipCode}\n                  onChange={(e) => setZipCode(e.target.value)}\n                  placeholder=\"Enter your zip code\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"city\">City</Label>\n                <Input\n                  type=\"text\"\n                  id=\"city\"\n                  value={city}\n                  onChange={(e) => setCity(e.target.value)}\n                  placeholder=\"Enter your city\"\n                />\n              </Field>\n\n              <Field>\n                <Label htmlFor=\"country\">Country</Label>\n                <Input\n                  type=\"text\"\n                  id=\"country\"\n                  value={country}\n                  onChange={(e) => setCountry(e.target.value)}\n                  placeholder=\"Enter your country\"\n                />\n              </Field>\n            </Fields>\n\n            <Button type=\"submit\">Add a new address</Button>\n            <Message>{message}</Message>\n          </Form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Addresses;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Payment.jsx",["516","517","518","519","520","521","522","523","524","525","526","527"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"react-modal\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport usePayment from \"../../../hooks/usePayment\";\n\n// Icons\nimport { ReactComponent as Plus } from \"../../../assets/icons/icon-plus.svg\";\nimport { ReactComponent as Minus } from \"../../../assets/icons/icon-minus.svg\";\nimport { ReactComponent as Close } from \"../../../assets/icons/icon-close.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n  quaternary: \"hsl(0, 0%, 0%)\",\n};\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Subheading = styled.div`\n  border-bottom: 1px solid ${colors.black};\n  text-transform: uppercase;\n  color: ${colors.black};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst FormHeading = styled(Subheading)`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  margin: 1rem 0;\n  color: ${colors.secondary};\n`;\n\nconst CardsList = styled.div`\n  display: grid;\n  margin: 2rem;\n  grid-gap: 2rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media all and (min-width: 992px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Card = styled.div`\n  padding: 1rem;\n  border: 1px solid ${colors.tertiary};\n  border-radius: 5px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-gap: 3rem 5rem;\n  margin-bottom: 2.5rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FieldLarge = styled(Field)`\n  grid-column: 1 / -1;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Buttons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 1rem;\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst ButtonEmpty = styled(Button)`\n  background: transparent;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n\n  &:hover {\n    color: ${colors.quaternary};\n  }\n`;\n\nconst EditModal = styled(Modal)`\n  position: absolute;\n  max-width: 600px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: ${colors.label};\n  padding: 4rem;\n  border: 1px solid ${colors.secondary};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst EditHeading = styled.h2`\n  text-align: center;\n  font-family: \"Playfair Display\", sans-serif;\n  font-size: 1.25rem;\n  margin-bottom: 1rem;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nconst Icon = styled.button`\n  position: absolute;\n  cursor: pointer;\n  top: 1rem;\n  right: 1rem;\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nfunction Payment() {\n  const { currentUser } = useAuth();\n  const [cards, setCards] = useState([]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const {\n    handleAddCard,\n    handleStartEditing,\n    handleEditCard,\n    deleteCard,\n    getCards,\n    cardListener,\n    name,\n    setName,\n    number,\n    setNumber,\n    date,\n    setDate,\n    cvc,\n    setCvc,\n    message,\n    nameEdit,\n    setNameEdit,\n    numberEdit,\n    setNumberEdit,\n    dateEdit,\n    setDateEdit,\n    cvcEdit,\n    setCvcEdit,\n    messageEdit,\n    isEditing,\n    setIsEditing,\n  } = usePayment();\n\n  useEffect(() => {\n    (async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n      if (cards.length === 0) setIsDropdownOpen(true);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = cardListener(currentUser.uid, async () => {\n      const cards = await getCards(currentUser.uid);\n      setCards(cards);\n    });\n    return unsubscribe;\n  }, []);\n\n  return (\n    <div>\n      <Heading>Payment</Heading>\n      <div>\n        <Subheading>Current Cards</Subheading>\n        {cards.length === 0 ? (\n          <Instructions>\n            <div>You do not currently have any saved cards.</div>\n            <div>Add one by completing the form below.</div>\n          </Instructions>\n        ) : (\n          <CardsList>\n            {cards.map((card) => {\n              return (\n                <React.Fragment key={card.id}>\n                  <Card>\n                    <strong>{card.name}</strong>\n                    <div>{card.number.slice(-4)}\n{' '}\n(Last 4 digits)\n</div>\n\n                    <Buttons>\n                      <ButtonEmpty onClick={() => handleStartEditing(card)}>\n                        Edit\n                      </ButtonEmpty>\n                      <Button\n                        onClick={() => deleteCard(currentUser.uid, card.id)}\n                      >\n                        Delete\n                      </Button>\n                    </Buttons>\n                  </Card>\n\n                  <EditModal\n                    isOpen={isEditing}\n                    onRequestClose={() => setIsEditing(false)}\n                    style={{\n                      overlay: {\n                        backgroundColor: \"rgba(255, 255, 255, .55)\",\n                      },\n                    }}\n                  >\n                    <EditHeading>Edit your card</EditHeading>\n                    <Icon onClick={() => setIsEditing(false)}>\n                      <Close />\n                    </Icon>\n                    <Form\n                      onSubmit={(e) => {\n                        e.preventDefault();\n                        handleEditCard(currentUser.uid, card.id);\n                      }}\n                    >\n                      <Fields>\n                        <FieldLarge>\n                          <Label htmlFor=\"name_edit\">Name on card</Label>\n                          <Input\n                            type=\"text\"\n                            value={nameEdit}\n                            id=\"name_edit\"\n                            onChange={(e) => setNameEdit(e.target.value)}\n                            placeholder=\"Enter your full name\"\n                          />\n                        </FieldLarge>\n\n                        <FieldLarge>\n                          <Label htmlFor=\"card_number_edit\">Card number</Label>\n                          <Input\n                            type=\"text\"\n                            value={numberEdit}\n                            id=\"card_number_edit\"\n                            onChange={(e) => {\n                              const number = e.target.value.replace(\n                                /[^0-9]/g,\n                                \"\"\n                              );\n                              setNumberEdit(number);\n                            }}\n                            placeholder=\"Enter your card number\"\n                          />\n                        </FieldLarge>\n\n                        <Field>\n                          <Label htmlFor=\"date_edit\">Valid Through</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"date_edit\"\n                            value={dateEdit}\n                            onChange={(e) => setDateEdit(e.target.value)}\n                            placeholder=\"MM / YY\"\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label htmlFor=\"cvc_edit\">CVC Code</Label>\n                          <Input\n                            type=\"text\"\n                            id=\"cvc_edit\"\n                            value={cvcEdit}\n                            onChange={(e) => {\n                              const cvc = e.target.value.replace(/[^0-9]/g, \"\");\n                              setCvcEdit(cvc);\n                            }}\n                            placeholder=\"Enter your CVC code\"\n                          />\n                        </Field>\n                      </Fields>\n                      <Buttons>\n                        <ButtonEmpty onClick={() => setIsEditing(false)}>\n                          Cancel\n                        </ButtonEmpty>\n                        <Button type=\"submit\">Edit your card</Button>\n                      </Buttons>\n                      <Message>{messageEdit}</Message>\n                    </Form>\n                  </EditModal>\n                </React.Fragment>\n              );\n            })}\n          </CardsList>\n        )}\n      </div>\n\n      <FormHeading onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n        Add a new card\n        {isDropdownOpen ? <Minus /> : <Plus />}\n      </FormHeading>\n\n      {isDropdownOpen && (\n        <Form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleAddCard(currentUser.uid);\n          }}\n        >\n          <Fields>\n            <FieldLarge>\n              <Label htmlFor=\"name\">Name on card</Label>\n              <Input\n                type=\"text\"\n                value={name}\n                id=\"name\"\n                onChange={(e) => setName(e.target.value)}\n                placeholder=\"Enter your full name\"\n              />\n            </FieldLarge>\n\n            <FieldLarge>\n              <Label htmlFor=\"card_number\">Card number</Label>\n              <Input\n                type=\"text\"\n                value={number}\n                id=\"card_number\"\n                onChange={(e) => {\n                  const number = e.target.value.replace(/[^0-9]/g, \"\");\n                  setNumber(number);\n                }}\n                placeholder=\"Enter your card number\"\n              />\n            </FieldLarge>\n\n            <Field>\n              <Label htmlFor=\"date\">Valid Through</Label>\n              <Input\n                type=\"text\"\n                id=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                placeholder=\"MM / YY\"\n              />\n            </Field>\n\n            <Field>\n              <Label htmlFor=\"cvc\">CVC Code</Label>\n              <Input\n                type=\"text\"\n                id=\"cvc\"\n                value={cvc}\n                onChange={(e) => {\n                  // Makes sure the user can only write 3 numbers.\n                  let cvc = e.target.value.replace(/[^0-9]/g, \"\");\n                  if (cvc.length > 3) cvc = cvc.slice(0, 3);\n                  setCvc(cvc);\n                }}\n                placeholder=\"Enter your CVC code\"\n              />\n            </Field>\n          </Fields>\n\n          <Button type=\"submit\">Add a new card</Button>\n          <Message>{message}</Message>\n        </Form>\n      )}\n    </div>\n  );\n}\n\nexport default Payment;\n","/home/aureen/the_odin_project/room_homepage/src/routes/account/settings/Settings.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.jsx",["528"],"import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useShop from \"../../../hooks/useShop\";\nimport { formatNavLink } from \"../../../utils/utils\";\n\n// Styled components\n\nconst colors = {\n  primary: \"hsl(0, 0%, 0%)\", // Black\n  secondary: \"hsl(0, 0%, 27%)\", // Grey\n  tertiary: \"hsl(0, 0%, 100%)\", // White\n};\n\nconst Container = styled.nav`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${colors.secondary};\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  z-index: 3;\n  background: ${colors.tertiary};\n  top: ${(props) => props.margin}px;\n  width: 100%;\n  box-shadow: 0 0px 4px -3px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-rows: repeat(2, auto);\n  grid-gap: 2rem;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-rows: auto;\n  }\n`;\n\nconst Category = styled(Link)`\n  cursor: pointer;\n  flex: 1;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 0 calc(0.75rem - 2px) 0;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    border-bottom: 2px solid ${colors.tertiary};\n  }\n`;\n\nconst Subcategory = styled(Link)`\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Item = styled(Link)`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  width: 100%;\n  border-bottom: 1px solid transparent;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n`;\n\n// Displays shopping categories (types of furnitures...)\nfunction ShopNav() {\n  const { getShopCategories } = useShop();\n  const [categories, setCategories] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [hovered, setHovered] = useState(\"\");\n  const navRef = useRef();\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  return (\n    <Container\n      onMouseLeave={() => {\n        setDropdown(false);\n      }}\n    >\n      <Nav ref={navRef}>\n        {/* Sort the categories by order before displaying them */}\n        {Object.keys(categories)\n          .sort((a, b) => categories[a].order - categories[b].order)\n          .map((category) => {\n            return (\n              <Category\n                to={`/shop/${encodeURIComponent(category)}`}\n                key={category}\n                onMouseOver={() => {\n                  setDropdown(true);\n                  setHovered(category);\n                }}\n              >\n                {formatNavLink(category)}\n              </Category>\n            );\n          })}\n      </Nav>\n\n      {dropdown && Object.keys(categories[hovered].categories).length !== 0 && (\n        <DropdownContainer margin={navRef.current.offsetHeight}>\n          <Dropdown>\n            {/* Sort the subcategories by order before displaying them */}\n            {Object.keys(categories[hovered].categories)\n              .sort(\n                (a, b) =>\n                  categories[hovered].categories[a].order -\n                  categories[hovered].categories[b].order\n              )\n              .map((subcategory) => {\n                return (\n                  <div key={subcategory}>\n                    <Subcategory\n                      to={`/shop/${encodeURIComponent(subcategory)}`}\n                    >\n                      {formatNavLink(subcategory)}\n                    </Subcategory>\n                    <div>\n                      {categories[hovered].categories[\n                        subcategory\n                      ].categories.map((item) => {\n                        return (\n                          <Item\n                            key={item}\n                            to={`/shop/${encodeURIComponent(item)}`}\n                          >\n                            {formatNavLink(item)}\n                          </Item>\n                        );\n                      })}\n                    </div>\n                  </div>\n                );\n              })}\n          </Dropdown>\n        </DropdownContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default ShopNav;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.jsx",["529","530","531"],"// Nav specifics to the Shop Page.\n// Looks different from the normal nav, and displays links for shopping categories, a shopping cart, the user's saved items, a search bar...\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport useCart from \"../../../hooks/useCart\";\nimport SideNav from \"./SideNav\";\nimport AccessSettings from \"../../account/AccessSettings\";\n\n// Icons\nimport { ReactComponent as Logo } from \"../../../assets/icons/logo.svg\";\nimport { ReactComponent as Cart } from \"../../../assets/icons/icon-shopping-cart.svg\";\nimport { ReactComponent as Heart } from \"../../../assets/icons/icon-heart.svg\";\nimport { ReactComponent as HeartFilled } from \"../../../assets/icons/icon-heart-filled.svg\";\nimport { ReactComponent as Home } from \"../../../assets/icons/icon-home.svg\";\nimport { ReactComponent as Search } from \"../../../assets/icons/icon-search.svg\";\nimport { ReactComponent as User } from \"../../../assets/icons/icon-user.svg\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 0%)\", // Black\n  secondary: \"hsl(0, 0%, 27%)\", // Grey\n  stamp: \"hsl(0, 0%, 100%)\",\n};\n\n// Styled components\nconst icon = `\n  color: ${colors.secondary};\n  cursor: pointer;\n  margin: 0 .5rem;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nconst Container = styled.div`\n  z-index: 10;\n  display: grid;\n  align-items: baseline;\n  font-family: \"Spartan\", sans-serif;\n  width: 100vw;\n  max-width: 100%;\n  padding: 0.5rem;\n  border-bottom: 1px solid ${colors.secondary};\n\n  @media all and (min-width: 576px) {\n    padding: 1rem;\n  }\n`;\n\nconst Navigation = styled.nav`\n  color: ${colors.primary};\n  z-index: 20;\n  display: grid;\n  grid-template-columns: 1fr auto 1fr;\n  align-items: center;\n`;\n\nconst Brand = styled.span`\n  font-size: 1.5rem;\n  margin: 0 2rem;\n  color: ${colors.primary};\n`;\n\nconst NavIconLink = styled.span`\n  ${icon}\n`;\n\nconst NavIcon = styled.span`\n  ${icon}\n`;\n\nconst Position = styled.span`\n  position: relative;\n`;\n\nconst NavLeft = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavRight = styled.div`\n  justify-self: right;\n  display: grid;\n  grid-template: repeat(2, auto) / repeat(2, auto);\n  align-items: center;\n  justify-items: center;\n\n  @media all and (min-width: 440px) {\n    display: block;\n  }\n`;\n\nconst Stamp = styled.span`\n  position: absolute;\n  display: inline-block;\n  top: -1rem;\n  right: -0.75rem;\n  width: 1.25rem;\n  height: 1.25rem;\n  background: ${colors.stamp};\n  border-radius: 50%;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n  font-size: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 3px;\n`;\n\nfunction Nav() {\n  const { currentUser } = useAuth();\n  const { getCart, cartListener } = useCart();\n  const { favorites } = useFavorite();\n  const navRef = useRef();\n  const [cart, setCart] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) return;\n      const cart = await getCart(currentUser.uid);\n      setCart(cart.length);\n    })();\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (!currentUser) return;\n    const unsubscribe = cartListener(currentUser.uid, async () => {\n      const cart = await getCart(currentUser.uid);\n      setCart(cart.length);\n    });\n    return unsubscribe;\n  }, [currentUser]);\n\n  return (\n    <Container ref={navRef}>\n      <Navigation>\n        <NavLeft>\n          <NavIconLink>\n            <SideNav nav={navRef} />\n          </NavIconLink>\n          <NavIconLink>\n            <Link to=\"/\">\n              <Home />\n            </Link>\n          </NavIconLink>\n        </NavLeft>\n\n        <Link to=\"/shop\">\n          <Brand>\n            <Logo />\n          </Brand>\n        </Link>\n\n        <NavRight>\n          <NavIcon>\n            <Search />\n          </NavIcon>\n\n          {currentUser && !currentUser.isAnonymous ? (\n            <AccessSettings />\n          ) : (\n            <NavIcon>\n              <Link to=\"/shop/entry\">\n                <User />\n              </Link>\n            </NavIcon>\n          )}\n\n          <NavIconLink>\n            <Position>\n              <Link to=\"/shop/favorite\">\n                {favorites.length !== 0 ? (\n                  <>\n                    <HeartFilled />\n                    <Stamp>{favorites.length}</Stamp>\n                  </>\n                ) : (\n                  <Heart />\n                )}\n              </Link>\n            </Position>\n          </NavIconLink>\n          <NavIconLink>\n            <Position>\n              <Link to=\"/shop/cart\">\n                <Cart />\n                {cart !== 0 && <Stamp>{cart}</Stamp>}\n              </Link>\n            </Position>\n          </NavIconLink>\n        </NavRight>\n      </Navigation>\n    </Container>\n  );\n}\n\nexport default Nav;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Footer.jsx",["532"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\n// Icons\nimport { ReactComponent as Logo } from \"../../../assets/icons/logo.svg\";\nimport { ReactComponent as Facebook } from \"../../../assets/icons/icon-facebook.svg\";\nimport { ReactComponent as Pinterest } from \"../../../assets/icons/icon-pinterest.svg\";\nimport { ReactComponent as Twitter } from \"../../../assets/icons/icon-twitter.svg\";\nimport { ReactComponent as Instagram } from \"../../../assets/icons/icon-instagram.svg\";\n\n// Styled components\nconst colors = {\n  heading: \"hsl(0, 0%, 95%)\",\n  primary: \"hsl(0, 0%, 90%)\",\n  social: \"hsl(0, 0%, 80%)\",\n  secondary: \"hsl(0, 0%, 20%)\", // Grey\n};\n\nconst Container = styled.footer`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem;\n  background: ${colors.secondary};\n  color: ${colors.primary};\n  line-height: 1.5rem;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 1;\n  width: 100%;\n  max-width: 1200px;\n\n  & > * {\n    margin-bottom: 2rem;\n  }\n\n  @media all and (min-width: 576px) {\n    flex-direction: row;\n\n    & > * {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst Category = styled.div`\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  color: ${colors.heading};\n`;\n\nconst Room = styled(Logo)`\n  align-self: center;\n`;\n\nconst Li = styled.li`\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Contact = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  & > *:last-child {\n    margin-top: 0.5rem;\n  }\n`;\n\nconst Icon = styled.span`\n  display: inline-block;\n  margin-left: 0.75rem;\n  color: ${colors.social};\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nfunction Footer() {\n  return (\n    <Container>\n      <Content>\n        <Room />\n        <div>\n          <Category>Discover Room</Category>\n          <ul>\n            <Li>About us</Li>\n            <Li>Contact</Li>\n            <Li>Terms & Conditions</Li>\n          </ul>\n        </div>\n\n        <div>\n          <Category>Room's Shop</Category>\n          <ul>\n            <Li>\n              <Link to=\"/account/user\">My account</Link>\n            </Li>\n            <Li>\n              <Link to=\"/shop/tracking\">Track an order</Link>\n            </Li>\n            <Li>Delivery</Li>\n            <Li>Returns</Li>\n            <Li>Payment</Li>\n          </ul>\n        </div>\n\n        <Contact>\n          <strong>+1 23 456 789</strong>\n          <div>enquiries@room.com</div>\n          <div>\n            <Icon>\n              <Facebook />\n            </Icon>\n            <Icon>\n              <Instagram />\n            </Icon>\n            <Icon>\n              <Pinterest />\n            </Icon>\n            <Icon>\n              <Twitter />\n            </Icon>\n          </div>\n        </Contact>\n      </Content>\n    </Container>\n  );\n}\n\nexport default Footer;\n","/home/aureen/the_odin_project/room_homepage/src/components/account/SignIn.jsx",["533","534","535"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport useSignIn from \"../../hooks/useSignIn\";\n\n// Icons\nimport check from \"../../assets/icons/icon-check.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Button and checkbox\n  tertiary: \"hsl(0, 0%, 90%)\",\n  input: \"hsl(0, 0%, 70%)\", // Input lines\n  black: \"hsl(0, 0%, 0%)\",\n  background: \"hsl(0, 0%, 100%)\",\n};\n\nconst Welcome = styled.div`\n  text-align: center;\n`;\n\nconst Heading = styled.h1`\n  font-size: 2rem;\n  line-height: 2.5rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2.5rem 0;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  width: 100%;\n  cursor: pointer;\n`;\n\nconst Message = styled.span`\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  line-height: 1rem;\n`;\n\nconst MessageLink = styled(Message)`\n  cursor: pointer;\n  color: ${colors.secondary};\n\n  &:hover {\n    color: ${colors.black};\n  }\n`;\n\nconst Checkbox = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: \"\";\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => (props.isChecked ? colors.secondary : \"\")};\n    background-image: ${(props) => (props.isChecked ? `url(${check})` : \"\")};\n    background-position: ${(props) => (props.isChecked ? \"center\" : \"\")};\n  }\n`;\n\nfunction SignIn({ flip }) {\n  const [remember, setRemember] = useState(false);\n\n  const {\n    email,\n    setEmail,\n    password,\n    setPassword,\n    emailError,\n    passwordError,\n    handleSignIn,\n    handleForgotPassword,\n    loading,\n  } = useSignIn();\n\n  return (\n    <>\n      <Welcome>\n        <Heading>Welcome back!</Heading>\n        <p>We are happy to see you again.</p>\n      </Welcome>\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSignIn(false);\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {emailError && <Message>{emailError}</Message>}\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {passwordError && <Message>{passwordError}</Message>}\n          <MessageLink onClick={handleForgotPassword}>\n            Forgot your password?\n          </MessageLink>\n        </Field>\n\n        <div>\n          <CheckboxLabel htmlFor=\"remember\" isChecked={remember}>\n            Remember me\n          </CheckboxLabel>\n          <Checkbox\n            type=\"checkbox\"\n            id=\"remember\"\n            name=\"remember\"\n            checked={remember}\n            onChange={() => setRemember(!remember)}\n          />\n        </div>\n\n        <Button type=\"submit\" disabled={loading}>\n          Sign In\n        </Button>\n      </form>\n      <Message>\n        Not a member yet?{\" \"}\n        {flip ? (\n          <>\n            <MessageLink onClick={flip}>Sign up now</MessageLink>.\n          </>\n        ) : (\n          <Link to=\"/signup\">\n            <MessageLink>Sign up now</MessageLink>.\n          </Link>\n        )}\n      </Message>\n    </>\n  );\n}\n\nSignIn.propTypes = {\n  flip: PropTypes.func,\n};\n\nSignIn.defaultProps = {\n  flip: () => {},\n};\n\nexport default SignIn;\n","/home/aureen/the_odin_project/room_homepage/src/components/account/SignUp.jsx",["536","537","538","539","540"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport useSignUp from \"../../hooks/useSignUp\";\n\n// Icons\nimport check from \"../../assets/icons/icon-check.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Button and checkbox\n  tertiary: \"hsl(0, 0%, 90%)\",\n  input: \"hsl(0, 0%, 70%)\", // Input lines\n  black: \"hsl(0, 0%, 0%)\",\n  background: \"hsl(0, 0%, 100%)\",\n};\n\nconst Welcome = styled.div`\n  text-align: center;\n`;\n\nconst Heading = styled.h1`\n  font-size: 2rem;\n  line-height: 2.5rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2.5rem 0;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  letter-spacing: 1px;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  padding: 0.5rem 1rem;\n  width: 100%;\n  cursor: pointer;\n\n  &:disabled {\n    background: ${colors.primary};\n    cursor: not-allowed;\n  }\n`;\n\nconst Message = styled.span`\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  line-height: 1rem;\n`;\n\nconst MessageLink = styled(Message)`\n  cursor: pointer;\n  color: ${colors.secondary};\n\n  &:hover {\n    color: ${colors.black};\n  }\n`;\n\nconst Checkbox = styled.input`\n  visibility: hidden;\n`;\n\nconst CheckboxLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  &:before {\n    display: inline-block;\n    content: \"\";\n    width: 1rem;\n    height: 1rem;\n    margin-right: 0.5rem;\n    border-radius: 2px;\n    border: 1px solid ${colors.secondary};\n    background-color: ${(props) => (props.isChecked ? colors.secondary : \"\")};\n    background-image: ${(props) => (props.isChecked ? `url(${check})` : \"\")};\n    background-position: ${(props) => (props.isChecked ? \"center\" : \"\")};\n  }\n`;\n\nfunction SignUp({ flip, isPaying }) {\n  const {\n    email,\n    setEmail,\n    firstName,\n    setFirstName,\n    lastName,\n    setLastName,\n    password,\n    setPassword,\n    terms,\n    setTerms,\n    emailError,\n    passwordError,\n    loading,\n    isFormCompleted,\n    handleSignUp,\n  } = useSignUp();\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Welcome>\n        <Heading>Create an account</Heading>\n        <p>Join us for a smoother shopping experience.</p>\n      </Welcome>\n\n      <form\n        onSubmit={async (e) => {\n          e.preventDefault();\n          await handleSignUp();\n          isPaying ? history.push(\"/shop/personal\") : history.push(\"/shop\");\n        }}\n      >\n        <Field>\n          <Label htmlFor=\"first_name\">First Name</Label>\n          <Input\n            id=\"first_name\"\n            type=\"text\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"last_name\">Last Name</Label>\n          <Input\n            id=\"last_name\"\n            type=\"text\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"email\">Email</Label>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {emailError && <Message>{emailError}</Message>}\n        </Field>\n\n        <Field>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {passwordError && <Message>{passwordError}</Message>}\n        </Field>\n\n        <div>\n          <CheckboxLabel htmlFor=\"terms\" isChecked={terms}>\n            I have read and agree to Room's Terms of Service and Privacy Policy.\n          </CheckboxLabel>\n          <Checkbox\n            type=\"checkbox\"\n            id=\"terms\"\n            name=\"terms\"\n            checked={terms}\n            onChange={(e) => setTerms(e.target.checked)}\n          />\n        </div>\n\n        <Button type=\"submit\" disabled={loading || isFormCompleted}>\n          Sign Up\n        </Button>\n      </form>\n      <Message>\n        Already have an account?{\" \"}\n        {flip ? (\n          <>\n            <MessageLink onClick={flip}>Sign in now.</MessageLink>\n          </>\n        ) : (\n          <Link to=\"/signup\">\n            <MessageLink>Sign in now.</MessageLink>\n          </Link>\n        )}\n      </Message>\n    </>\n  );\n}\n\nexport default SignUp;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ShopItemPreview.jsx",["541","542","543","544"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\n\n// Icons\nimport { ReactComponent as Heart } from \"../../../assets/icons/icon-heart.svg\";\nimport { ReactComponent as HeartFilled } from \"../../../assets/icons/icon-heart-filled.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 0%)\", // Black\n  secondary: \"hsl(0, 0%, 45%)\", // Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright grey\n  quaternary: \"hsl(0, 0%, 27%)\",\n  new: \"hsl(0, 0%, 85%)\",\n};\n\nconst Container = styled.div`\n  position: relative;\n  padding: 2.5rem;\n  border: 1px solid transparent;\n  max-width: 17.5rem;\n\n  &:hover {\n    border: 1px solid ${colors.tertiary};\n  }\n`;\n\nconst New = styled.span`\n  position: absolute;\n  font-size: 0.825rem;\n  text-transform: uppercase;\n  color: ${colors.new};\n  background: ${colors.quaternary};\n  padding: 0.2rem 0.35rem;\n  border-radius: 2px;\n  top: 0.5rem;\n  left: 0.5rem;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 0.5rem;\n  width: 8.5rem;\n  height: 8.5rem;\n\n  @media all and (min-width: 600px) {\n    width: 10rem;\n    height: 10rem;\n  }\n\n  @media all and (min-width: 730px) {\n    width: 12.5rem;\n    height: 12.5rem;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: cover;\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n  font-size: 0.825rem;\n`;\n\nconst Price = styled.div`\n  color: ${colors.secondary};\n  font-size: 0.825rem;\n`;\n\nconst Description = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Icon = styled.span`\n  color: ${colors.secondary};\n  cursor: pointer;\n`;\n\nfunction ShopItemPreview({ name, images, price, id, isFavorite, isNew }) {\n  const [image, setImage] = useState(images[0]);\n  const { addFavorite, deleteFavorite } = useFavorite();\n  const { currentUser, signInAnonymously } = useAuth();\n\n  const changeImage = () => {\n    if (images.length === 1) return;\n    image === images[0] ? setImage(images[1]) : setImage(images[0]);\n  };\n\n  const handleFavorite = async () => {\n    let userId = currentUser && currentUser.uid;\n\n    if (!currentUser) {\n      const user = await signInAnonymously();\n      userId = user.user.uid;\n    }\n    isFavorite ? deleteFavorite(userId, id) : addFavorite(userId, id);\n  };\n\n  return (\n    <Container>\n      <Link to={`/shop/item/${id}`}>\n        {isNew && <New>New</New>}\n        <ImageContainer>\n          <Image\n            src={image}\n            onMouseOver={changeImage}\n            onMouseLeave={changeImage}\n          />\n        </ImageContainer>\n      </Link>\n      <Description>\n        <div>\n          <Link to={`/shop/item/${id}`}>\n            <Name>{name}</Name>\n          </Link>\n          <Price>£{price}</Price>\n        </div>\n        <Icon onClick={handleFavorite}>\n          {isFavorite ? <HeartFilled /> : <Heart />}\n        </Icon>\n      </Description>\n    </Container>\n  );\n}\n\nShopItemPreview.propTypes = {\n  name: PropTypes.string.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  price: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  isFavorite: PropTypes.bool,\n  isNew: PropTypes.bool,\n};\n\nShopItemPreview.defaultProps = {\n  isFavorite: false,\n  isNew: false,\n};\n\nexport default ShopItemPreview;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.jsx",["545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useShop from \"../../hooks/useShop\";\nimport useStorage from \"../../hooks/useStorage\";\n\n// Icons\nimport { ReactComponent as Plus } from \"../../assets/icons/icon-plus.svg\";\nimport { ReactComponent as Close } from \"../../assets/icons/icon-x-med.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Button and checkbox\n  tertiary: \"hsl(0, 0%, 90%)\",\n  input: \"hsl(0, 0%, 70%)\", // Input lines\n  black: \"hsl(0, 0%, 0%)\",\n};\n\nconst Container = styled.div`\n  margin: 5rem;\n  max-width: 1200px;\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 2rem;\n  font-size: 2rem;\n  line-height: 2.75rem;\n  font-family: \"Playfair Display\", sans-serif;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Fields = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.fields}, 1fr);\n  grid-gap: 3rem 5rem;\n  margin: 1.25rem 0 3rem 0;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid ${colors.input};\n  border-radius: 15px;\n  padding: 1.5rem;\n\n  & > * {\n    margin-top: 1rem;\n  }\n\n  & > *:first-child {\n    margin-top: inherit;\n  }\n`;\n\nconst ChoiceBox = styled(Box)`\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst Category = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst BoxHeading = styled.div`\n  text-transform: uppercase;\n  font-weight: 600;\n  align-self: center;\n  padding: 1rem 0;\n`;\n\nconst label = `\ntext-transform: uppercase;\nfont-size: 0.825rem;\nletter-spacing: 1px;\n`;\n\nconst Label = styled.label`\n  ${label}\n`;\n\nconst TextLabel = styled.div`\n  ${label}\n`;\n\nconst Field = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  border: none;\n  border-bottom: 1px solid ${colors.input};\n  padding: 0.5rem 0 0.25rem 0;\n  font-family: \"Source Sans Pro\", sans-serif;\n\n  &::placeholder {\n    color: ${colors.input};\n  }\n\n  &:focus {\n    border-bottom: 1px solid ${colors.black};\n  }\n`;\n\nconst IconButton = styled.button`\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nconst BoxButton = styled(IconButton)`\n  align-self: center;\n`;\n\nconst Button = styled.button`\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:disabled {\n    background: ${colors.input};\n    cursor: not-allowed;\n  }\n`;\n\nconst Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 2rem;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n`;\n\nconst Message = styled.div`\n  text-align: center;\n  font-size: 0.825rem;\n  color: ${colors.primary};\n  margin-top: 0.25rem;\n`;\n\nfunction AddShopItem() {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({\n    depth: 0,\n    height: 0,\n    width: 0,\n  });\n  const [materials, setMaterials] = useState([\"\", \"\", \"\"]);\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState([\"\"]);\n  const [categories, setCategories] = useState([\"\", \"\", \"\"]);\n  const [colors, setColors] = useState([\n    {\n      description: \"\",\n      type: \"\",\n      value: \"#000000\",\n      image: \"\",\n    },\n  ]);\n  const [additional, setAdditional] = useState([\n    {\n      type: \"\",\n      information: \"\",\n    },\n  ]);\n  const [options, setOptions] = useState([\n    {\n      type: \"\",\n      options: [\n        {\n          option: \"\",\n          price: 0,\n          dimensions: {\n            width: 0,\n            height: 0,\n            depth: 0,\n          },\n        },\n      ],\n    },\n  ]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [seats, setSeats] = useState([]);\n  const [type, setType] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { createItem, addItem } = useShop();\n  const { uploadItemImage } = useStorage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n\n    const item = await createItem();\n    const itemId = item.id;\n\n    // Upload images in the storage and get their urls.\n    const imagesUrls = [];\n    for (const image of images) {\n      const imageUrl = await uploadItemImage(itemId, image);\n      imagesUrls.push(imageUrl);\n    }\n\n    const formattedColors = [...colors];\n    for (const color of formattedColors) {\n      const colorImageUrl = await uploadItemImage(itemId, color.image);\n      color.image = colorImageUrl;\n    }\n\n    // Format additional informations and options\n    // If the fields are empty, they are ignored.\n    const formattedAdditional = {};\n    for (const information of additional) {\n      if (information.type !== \"\" && information.information !== \"\") {\n        formattedAdditional[information.type] = information.information;\n      }\n    }\n\n    // Remove empty fields\n    const formattedMaterials = [...materials]\n      .filter((material) => material !== \"\")\n      .map((material) => material.toLowerCase());\n    const formattedCategories = [...categories]\n      .filter((category) => category !== \"\")\n      .map((category) => category.toLowerCase());\n\n    const formattedOptions = {};\n    for (const option of options) {\n      if (\n        option.type !== \"\" &&\n        option.options.option !== \"\" &&\n        option.options.price !== \"\"\n      ) {\n        formattedOptions[option.type] = [...option.options];\n      }\n    }\n\n    // Create queries (used to search / filter the item)\n    const queries = {};\n\n    // Colors filters\n    queries.colors = [];\n    for (const color of colors) {\n      queries.colors.push(color.type);\n    }\n\n    // Search terms\n    queries.search = [];\n    for (const color of colors) {\n      queries.search.push(color.type);\n    }\n    for (const category of formattedCategories) {\n      queries.search.push(category);\n    }\n    for (const material of formattedMaterials) {\n      queries.search.concat(...material.split(\"_\"));\n    }\n    queries.search = queries.search.concat(...name.toLowerCase().split(\" \"));\n\n    // Material filters\n    queries.materials = formattedMaterials;\n\n    // Price filters\n    queries.price = {\n      min: price,\n      max: price,\n    };\n\n    for (const option of options) {\n      for (const choice of Object.keys(option)) {\n        if (choice.price > queries.price.max) {\n          queries.price.max = choice.price;\n        }\n        if (choice.price < queries.price.min) {\n          queries.price.min = choice.price;\n        }\n      }\n    }\n\n    // Dimensions filters\n    queries.dimensions = {\n      width: {\n        min: dimensions.width,\n        max: dimensions.width,\n      },\n      height: {\n        min: dimensions.height,\n        max: dimensions.height,\n      },\n      depth: {\n        min: dimensions.depth,\n        max: dimensions.depth,\n      },\n    };\n\n    for (const option of options) {\n      for (const choice of option.options) {\n        if (choice.dimensions.width > queries.dimensions.width.max) {\n          queries.dimensions.width.max = choice.dimensions.width;\n        }\n        if (choice.dimensions.width < queries.dimensions.width.min) {\n          queries.dimensions.width.min = choice.dimensions.width;\n        }\n        if (choice.dimensions.height > queries.dimensions.height.max) {\n          queries.dimensions.height.max = choice.dimensions.height;\n        }\n        if (choice.dimensions.height < queries.dimensions.height.min) {\n          queries.dimensions.height.min = choice.dimensions.height;\n        }\n        if (choice.dimensions.depth > queries.dimensions.depth.max) {\n          queries.dimensions.depth.max = choice.dimensions.depth;\n        }\n        if (choice.dimensions.depth < queries.dimensions.depth.min) {\n          queries.dimensions.depth.min = choice.dimensions.depth;\n        }\n      }\n    }\n\n    if (seats.length !== 0) {\n      queries.seats = seats;\n    }\n\n    // Adds the shop item information in the firestore.\n    try {\n      const id = await addItem(\n        itemId,\n        name,\n        price,\n        type,\n        dimensions,\n        imagesUrls,\n        description,\n        formattedColors,\n        formattedAdditional,\n        formattedOptions,\n        formattedCategories,\n        queries\n      );\n      setMessage(`The item has been successfully added. Item Id: ${id}.`);\n    } catch (e) {\n      setMessage(\"Sorry, we could not add the item.\");\n    }\n    setLoading(false);\n  };\n\n  const addImages = (e) => {\n    e.preventDefault();\n    if (e.target.files.length === 0) return;\n    setImages(e.target.files);\n\n    const preview = [];\n    for (const file of e.target.files) {\n      preview.push(URL.createObjectURL(file));\n    }\n    setImagesPreview(preview);\n  };\n\n  return (\n    <Container>\n      <Heading>Add an item to the shop</Heading>\n      <Form onSubmit={handleSubmit}>\n        <Category>General</Category>\n        <Fields fields={3}>\n          <Field>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter the item's name\"\n              required\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"price\">Price</Label>\n            <Input\n              id=\"price\"\n              name=\"price\"\n              type=\"number\"\n              value={price}\n              onChange={(e) => setPrice(+e.target.value)}\n              required\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"type\">Type</Label>\n            <Input\n              id=\"type\"\n              name=\"type\"\n              type=\"text\"\n              value={type}\n              onChange={(e) => setType(e.target.value)}\n              required\n            />\n          </Field>\n        </Fields>\n\n        <Category>Dimensions</Category>\n        <Fields fields={3}>\n          <Field>\n            <Label htmlFor=\"depth\">Depth</Label>\n            <Input\n              id=\"depth\"\n              name=\"depth\"\n              type=\"number\"\n              value={dimensions.depth}\n              onChange={(e) =>\n                setDimensions({ ...dimensions, depth: +e.target.value })\n              }\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"height\">Height</Label>\n            <Input\n              id=\"height\"\n              name=\"height\"\n              type=\"number\"\n              value={dimensions.height}\n              onChange={(e) =>\n                setDimensions({ ...dimensions, height: +e.target.value })\n              }\n            />\n          </Field>\n\n          <Field>\n            <Label htmlFor=\"width\">Width</Label>\n            <Input\n              id=\"width\"\n              name=\"width\"\n              type=\"text\"\n              value={dimensions.width}\n              onChange={(e) =>\n                setDimensions({ ...dimensions, width: +e.target.value })\n              }\n            />\n          </Field>\n        </Fields>\n\n        <Field>\n          <Category>\n            Materials\n            <IconButton\n              type=\"button\"\n              title=\"Add Material\"\n              onClick={() => setMaterials([...materials, \"\"])}\n            >\n              <Plus />\n            </IconButton>\n          </Category>\n          <Fields fields={3}>\n            {materials.map((material, index) => {\n              return (\n                <Box key={`material_${index + 1}`}>\n                  <Field>\n                    <Label htmlFor={`material_${index + 1}`}>\n                      Material {index + 1}\n                    </Label>\n                    <Input\n                      id={`material_${index + 1}`}\n                      name={`material_${index + 1}`}\n                      type=\"text\"\n                      value={material}\n                      placeholder={`Enter Material ${index + 1}`}\n                      onChange={(e) =>\n                        setMaterials((prev) => {\n                          const materials = [...prev];\n                          materials[index] = e.target.value;\n                          return materials;\n                        })\n                      }\n                    />\n                  </Field>\n                  <BoxButton\n                    type=\"button\"\n                    title=\"Remove Material\"\n                    onClick={() =>\n                      setMaterials((prev) => {\n                        const materials = [...prev];\n                        materials.splice(index, 1);\n                        return materials;\n                      })\n                    }\n                  >\n                    <Close />\n                  </BoxButton>\n                </Box>\n              );\n            })}\n          </Fields>\n        </Field>\n\n        <Category>\n          Description\n          <IconButton\n            type=\"button\"\n            title=\"Add Description\"\n            onClick={() => setDescription([...description, \"\"])}\n          >\n            <Plus />\n          </IconButton>\n        </Category>\n\n        <Fields fields={1}>\n          {description.map((description, index) => {\n            return (\n              <Field key={`description-${index + 1}`}>\n                <Label htmlFor={`paragraph_${index + 1}`}>\n                  Paragraph {index + 1}\n                </Label>\n                <Row>\n                  <Input\n                    id={`paragraph_${index + 1}`}\n                    name={`paragraph_${index + 1}`}\n                    type=\"text\"\n                    value={description}\n                    placeholder={`Enter Paragraph ${\n                      index + 1\n                    } of your description`}\n                    onChange={(e) =>\n                      setDescription((prev) => {\n                        const description = [...prev];\n                        description[index] = e.target.value;\n                        return description;\n                      })\n                    }\n                  />\n                  <IconButton\n                    type=\"button\"\n                    title=\"Remove Paragraph\"\n                    onClick={() =>\n                      setDescription((prev) => {\n                        const description = [...prev];\n                        description.splice(index, 1);\n                        return description;\n                      })\n                    }\n                  >\n                    <Close />\n                  </IconButton>\n                </Row>\n              </Field>\n            );\n          })}\n        </Fields>\n\n        <Field>\n          <Category>\n            Colors\n            <IconButton\n              title=\"Add a color\"\n              type=\"button\"\n              onClick={() =>\n                setColors([\n                  ...colors,\n                  { description: \"\", type: \"\", value: \"#000000\" },\n                ])\n              }\n            >\n              <Plus />\n            </IconButton>\n          </Category>\n\n          <Fields fields={3}>\n            {colors.map((color, index) => {\n              return (\n                <Box key={`color_${index + 1}`}>\n                  <Field>\n                    <Label htmlFor={`color_description_${index + 1}`}>\n                      Description\n                    </Label>\n                    <Input\n                      id={`color_description_${index + 1}`}\n                      name={`color_description_${index + 1}`}\n                      type=\"text\"\n                      value={color.description}\n                      onChange={(e) =>\n                        setColors((prev) => {\n                          const colors = [...prev];\n                          colors[index].description = e.target.value;\n                          return colors;\n                        })\n                      }\n                    />\n                  </Field>\n\n                  <Field>\n                    <Label htmlFor={`color_type_${index + 1}`}>Type</Label>\n                    <Input\n                      id={`color_type_${index + 1}`}\n                      name={`color_type_${index + 1}`}\n                      type=\"text\"\n                      value={color.type}\n                      onChange={(e) =>\n                        setColors((prev) => {\n                          const colors = [...prev];\n                          colors[index].type = e.target.value;\n                          return colors;\n                        })\n                      }\n                    />\n                  </Field>\n\n                  <Row>\n                    <Label htmlFor={`color_type_${index + 1}`}>Value</Label>\n                    <input\n                      type=\"color\"\n                      value={color.value}\n                      onChange={(e) =>\n                        setColors((prev) => {\n                          const colors = [...prev];\n                          colors[index].value = e.target.value;\n                          return colors;\n                        })\n                      }\n                    />\n                  </Row>\n\n                  <input\n                    type=\"file\"\n                    id=\"avatar\"\n                    name=\"avatar\"\n                    multiple\n                    onChange={(e) => {\n                      if (!e.target.files[0]) return;\n                      setColors((prev) => {\n                        const colors = [...prev];\n                        colors[index].image = e.target.files[0];\n                        return colors;\n                      });\n                    }}\n                  />\n\n                  <IconButton\n                    type=\"button\"\n                    title=\"Remove Color\"\n                    onClick={() =>\n                      setColors((prev) => {\n                        const colors = [...prev];\n                        colors.splice(index, 1);\n                        return colors;\n                      })\n                    }\n                  >\n                    <Close />\n                  </IconButton>\n                </Box>\n              );\n            })}\n          </Fields>\n        </Field>\n\n        <Category>\n          Categories\n          <IconButton\n            type=\"button\"\n            onClick={() => setCategories([...categories, \"\"])}\n          >\n            <Plus />\n          </IconButton>\n        </Category>\n\n        <Fields fields={3}>\n          {categories.map((category, index) => {\n            return (\n              <Box key={`category-${index + 1}`}>\n                <Field>\n                  <Label htmlFor={`category_${index + 1}`}>\n                    Category {index + 1}\n                  </Label>\n                  <Input\n                    id={`category_${index + 1}`}\n                    name={`category_${index + 1}`}\n                    type=\"text\"\n                    value={category}\n                    onChange={(e) =>\n                      setCategories((prev) => {\n                        const categories = [...prev];\n                        categories[index] = e.target.value;\n                        return categories;\n                      })\n                    }\n                  />\n                </Field>\n\n                <BoxButton\n                  type=\"button\"\n                  onClick={() =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories.splice(index, 1);\n                      return categories;\n                    })\n                  }\n                >\n                  <Close />\n                </BoxButton>\n              </Box>\n            );\n          })}\n        </Fields>\n\n        <Field>\n          <Category>\n            Options\n            <IconButton\n              type=\"button\"\n              title=\"Add an option\"\n              onClick={() =>\n                setOptions([\n                  ...options,\n                  {\n                    type: \"\",\n                    options: [\n                      {\n                        option: \"\",\n                        price: 0,\n                        dimensions: {\n                          width: 0,\n                          height: 0,\n                          depth: 0,\n                        },\n                      },\n                    ],\n                  },\n                ])\n              }\n            >\n              <Plus />\n            </IconButton>\n          </Category>\n\n          {options.map((option, indexOption) => {\n            return (\n              <div key={`option_${indexOption + 1}`}>\n                <Fields fields={1}>\n                  <Field>\n                    <Label htmlFor={`option_type_${indexOption + 1}`}>\n                      Type\n                    </Label>\n                    <Row>\n                      <Input\n                        id={`option_type_${indexOption + 1}`}\n                        name={`option_type_${indexOption + 1}`}\n                        type=\"text\"\n                        value={option.type}\n                        onChange={(e) =>\n                          setOptions((prev) => {\n                            const options = [...prev];\n                            options[indexOption].type = e.target.value;\n                            return options;\n                          })\n                        }\n                      />\n\n                      <IconButton\n                        type=\"button\"\n                        title=\"Remove Option\"\n                        onClick={() =>\n                          setOptions((prev) => {\n                            const options = [...prev];\n                            options.splice(indexOption, 1);\n                            return options;\n                          })\n                        }\n                      >\n                        <Close />\n                      </IconButton>\n                    </Row>\n                  </Field>\n                </Fields>\n\n                <TextLabel>Options</TextLabel>\n\n                <Fields fields={3}>\n                  {option.options.map((choice, indexChoice) => {\n                    return (\n                      <Box\n                        key={`option_${indexOption + 1}_choice_${\n                          indexChoice + 1\n                        }`}\n                      >\n                        <BoxHeading>General</BoxHeading>\n                        <Field>\n                          <Label\n                            htmlFor={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_option`}\n                          >\n                            Option\n                          </Label>\n                          <Input\n                            id={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_option`}\n                            name={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_option`}\n                            type=\"text\"\n                            value={choice.option}\n                            onChange={(e) =>\n                              setOptions((prev) => {\n                                const options = [...prev];\n                                options[indexOption].options[\n                                  indexChoice\n                                ].option = e.target.value;\n                                return options;\n                              })\n                            }\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label\n                            htmlFor={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_price`}\n                          >\n                            Price\n                          </Label>\n                          <Input\n                            id={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_price`}\n                            name={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_price`}\n                            type=\"number\"\n                            value={choice.price}\n                            onChange={(e) =>\n                              setOptions((prev) => {\n                                const options = [...prev];\n                                options[indexOption].options[\n                                  indexChoice\n                                ].price = +e.target.value;\n                                return options;\n                              })\n                            }\n                          />\n                        </Field>\n\n                        <BoxHeading>Dimensions</BoxHeading>\n                        <Field>\n                          <Label\n                            htmlFor={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_depth`}\n                          >\n                            Depth\n                          </Label>\n                          <Input\n                            id={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_depth`}\n                            name={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_depth`}\n                            type=\"number\"\n                            value={choice.dimensions.depth}\n                            onChange={(e) =>\n                              setOptions((prev) => {\n                                const options = [...prev];\n                                options[indexOption].options[\n                                  indexChoice\n                                ].dimensions.depth = +e.target.value;\n                                return options;\n                              })\n                            }\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label\n                            htmlFor={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_height`}\n                          >\n                            Height\n                          </Label>\n                          <Input\n                            id={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_height`}\n                            name={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_height`}\n                            type=\"number\"\n                            value={choice.dimensions.height}\n                            onChange={(e) =>\n                              setOptions((prev) => {\n                                const options = [...prev];\n                                options[indexOption].options[\n                                  indexChoice\n                                ].dimensions.height = +e.target.value;\n                                return options;\n                              })\n                            }\n                          />\n                        </Field>\n\n                        <Field>\n                          <Label\n                            htmlFor={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_width`}\n                          >\n                            Width\n                          </Label>\n                          <Input\n                            id={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_width`}\n                            name={`option_${indexOption + 1}_choice_${\n                              indexChoice + 1\n                            }_width`}\n                            type=\"number\"\n                            value={choice.dimensions.width}\n                            onChange={(e) =>\n                              setOptions((prev) => {\n                                const options = [...prev];\n                                options[indexOption].options[\n                                  indexChoice\n                                ].dimensions.width = +e.target.value;\n                                return options;\n                              })\n                            }\n                          />\n                        </Field>\n\n                        <IconButton\n                          title=\"Remove Choice\"\n                          type=\"button\"\n                          onClick={() => {\n                            const newOptions = [...options];\n                            newOptions[indexOption].options.splice(\n                              indexChoice,\n                              1\n                            );\n                            setOptions(newOptions);\n                          }}\n                        >\n                          <Close />\n                        </IconButton>\n                      </Box>\n                    );\n                  })}\n                  <ChoiceBox\n                    onClick={() => {\n                      const newOptions = [...options];\n                      newOptions[indexOption].options = [\n                        ...options[indexOption].options,\n                        {\n                          option: \"\",\n                          price: 0,\n                          dimensions: {\n                            width: 0,\n                            height: 0,\n                            depth: 0,\n                          },\n                        },\n                      ];\n                      setOptions(newOptions);\n                    }}\n                  >\n                    <BoxHeading>Add Choice</BoxHeading>\n                    <Plus />\n                  </ChoiceBox>\n                </Fields>\n              </div>\n            );\n          })}\n        </Field>\n\n        <Category>\n          Additional\n          <IconButton\n            type=\"button\"\n            title=\"Add an additional information\"\n            onClick={() =>\n              setAdditional([...additional, { type: \"\", information: \"\" }])\n            }\n          >\n            <Plus />\n          </IconButton>\n        </Category>\n\n        <Fields fields={3}>\n          {additional.map((add, index) => {\n            return (\n              <Box key={`additional_${index + 1}`}>\n                <Field>\n                  <Label htmlFor={`additional_${index + 1}_type`}>Type</Label>\n                  <Input\n                    id={`additional_${index + 1}_type`}\n                    name={`additional_${index + 1}_type`}\n                    type=\"text\"\n                    value={add.type}\n                    onChange={(e) =>\n                      setAdditional((prev) => {\n                        const additional = [...prev];\n                        additional[index].type = e.target.value;\n                        return additional;\n                      })\n                    }\n                  />\n                </Field>\n\n                <Field>\n                  <Label htmlFor={`additional_${index + 1}_information`}>\n                    Information\n                  </Label>\n                  <Row>\n                    <Input\n                      id={`additional_${index + 1}_information`}\n                      name={`additional_${index + 1}_information`}\n                      type=\"text\"\n                      value={add.information}\n                      onChange={(e) =>\n                        setAdditional((prev) => {\n                          const additional = [...prev];\n                          additional[index].information = e.target.value;\n                          return additional;\n                        })\n                      }\n                    />\n                  </Row>\n                </Field>\n\n                <IconButton\n                  type=\"button\"\n                  onClick={() =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional.splice(index, 1);\n                      return additional;\n                    })\n                  }\n                >\n                  <Close />\n                </IconButton>\n              </Box>\n            );\n          })}\n        </Fields>\n\n        <Category>Others</Category>\n\n        <Row>\n          <TextLabel>Seats</TextLabel>\n          <IconButton\n            title=\"Add Seats Number\"\n            type=\"button\"\n            onClick={() => setSeats([...seats, 1])}\n          >\n            <Plus />\n          </IconButton>\n        </Row>\n\n        <Fields fields={3}>\n          {seats.map((seat, index) => {\n            return (\n              <Box key={`seats-${index + 1}`}>\n                <Field>\n                  <Label htmlFor={`seats_${index + 1}`}>\n                    Seats {index + 1}\n                  </Label>\n                  <Input\n                    id={`seats_${index + 1}`}\n                    name={`seats_${index + 1}`}\n                    type=\"number\"\n                    value={seat}\n                    onChange={(e) =>\n                      setSeats((prev) => {\n                        const seats = [...prev];\n                        seats[index] = +e.target.value;\n                        return seats;\n                      })\n                    }\n                  />\n                </Field>\n\n                <BoxButton\n                  type=\"button\"\n                  onClick={() =>\n                    setSeats((prev) => {\n                      const seats = [...prev];\n                      seats.splice(index, 1);\n                      return seats;\n                    })\n                  }\n                >\n                  <Close />\n                </BoxButton>\n              </Box>\n            );\n          })}\n        </Fields>\n\n        <Field>\n          <input\n            type=\"file\"\n            id=\"avatar\"\n            name=\"avatar\"\n            multiple\n            onChange={addImages}\n          />\n\n          <Preview>\n            {imagesPreview.map((image, index) => {\n              return (\n                <Image key={`preview_${index}`} src={image} alt=\"preview\" />\n              );\n            })}\n          </Preview>\n        </Field>\n\n        <Button type=\"submit\" disabled={loading}>\n          Add an item\n        </Button>\n        <Message>{message}</Message>\n      </Form>\n    </Container>\n  );\n}\n\nexport default AddShopItem;\n","/home/aureen/the_odin_project/room_homepage/src/components/account/Order.jsx",["620","621","622","623","624"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport CartPreview from \"../shop/cart/CartPreview\";\n\n// Icons\nimport { ReactComponent as Plus } from \"../../assets/icons/icon-plus.svg\";\nimport { ReactComponent as Minus } from \"../../assets/icons/icon-minus.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n};\n\nconst Container = styled.div`\n  min-width: 50vw;\n  margin-bottom: 3rem;\n  border: 1px solid ${colors.text};\n  border-radius: 5px;\n`;\n\nconst Top = styled.div`\n  display: grid;\n  background: ${colors.secondary};\n  padding: 0.75rem 1rem;\n  color: ${colors.text};\n  line-height: 1.125rem;\n  border-radius: 5px 5px 0 0;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 1rem;\n\n  @media all and (min-width: 576px) {\n    grid-template-columns: repeat(3, auto) 1fr auto;\n    grid-template-row: repeat(2, auto);\n  }\n`;\n\nconst Icon = styled.div`\n  grid-row: 1 / -1;\n  align-self: center;\n  grid-column: -1;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst Category = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.primary};\n  padding-bottom: 0.25rem;\n  margin-bottom: 1.25rem;\n`;\n\nconst Subheading = styled.div`\n  display: inline-block;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst Type = styled.div`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.label};\n`;\n\nconst Dropdown = styled.div`\n  margin: 2rem;\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n`;\n\nfunction Order({ order }) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(true);\n\n  const getDate = (time) => {\n    const date = new Date(time);\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n\n  return (\n    <Container>\n      <Top>\n        <div>\n          <Type>Order</Type>\n          <div>{order.id}</div>\n        </div>\n\n        <div>\n          <Type>Date</Type>\n          <div>{getDate(order.date.seconds * 1000)}</div>\n        </div>\n\n        <div>\n          <Type>Total:</Type>\n          <div>\n            {order.products.reduce(\n              (sum, item) => sum + item.price * item.quantity,\n              0\n            )}\n          </div>\n        </div>\n\n        <div>\n          <Type>Deliver to:</Type>\n          <div>\n            {order.shipping.firstName} {order.shipping.lastName}\n          </div>\n        </div>\n\n        <div>\n          <Type>Status</Type>\n          <div>{order.status}</div>\n        </div>\n\n        <Icon onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n          {isDropdownOpen ? <Minus /> : <Plus />}\n        </Icon>\n      </Top>\n\n      {isDropdownOpen && (\n        <Dropdown>\n          <div>\n            <Category>Items</Category>\n            <CartPreview cart={order.products} />\n          </div>\n\n          <div>\n            <Category>Informations</Category>\n            <Row>\n              <div>\n                <Subheading>Shipping</Subheading>\n                <div>\n                  <div>\n                    {order.shipping.firstName} {order.shipping.lastName}\n                  </div>\n                  <div>{order.shipping.address}</div>\n                  <div>\n                    {order.shipping.zipCode} {order.shipping.city}\n                  </div>\n                  <div>{order.shipping.country}</div>\n                </div>\n              </div>\n              <div>\n                <Subheading>Payment</Subheading>\n                <div>\n                  <div>Paid by card</div>\n                  <div>{order.card.name}</div>\n                  <div>{order.card.number.slice(-4)} (Last 4 digits)</div>\n                </div>\n              </div>\n            </Row>\n          </div>\n        </Dropdown>\n      )}\n    </Container>\n  );\n}\n\nOrder.propTypes = {\n  order: PropTypes.shape({\n    id: PropTypes.string,\n    date: PropTypes.shape({\n      seconds: PropTypes.number,\n    }),\n    products: PropTypes.arrayOf(PropTypes.object),\n    status: PropTypes.string,\n    shipping: PropTypes.shape({\n      firstName: PropTypes.string,\n      lastName: PropTypes.string,\n      zipCode: PropTypes.string,\n      address: PropTypes.string,\n      city: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    card: PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Order;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Filters.jsx",["625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { formatNavLink } from \"../../../utils/utils\";\n\n// Icons\nimport check from \"../../../assets/icons/icon-check.svg\";\nimport { ReactComponent as FilterIcon } from \"../../../assets/icons/icon-filter.svg\";\nimport { ReactComponent as AngleDown } from \"../../../assets/icons/icon-angle-down.svg\";\nimport { ReactComponent as AngleUp } from \"../../../assets/icons/icon-angle-up.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n};\n\nconst filterColors = {\n  beige: \"hsl(20, 49%, 73%)\",\n  black: \"hsl(0, 0%, 0%)\",\n  blue: \"hsl(213, 95%, 36%)\",\n  brown: \"hsl(20, 35%, 29%)\",\n  green: \"hsl(141, 28%, 29%)\",\n  grey: \"hsl(0, 0%, 50%)\",\n  orange: \"hsl(9, 39%, 51%)\",\n  red: \"hsl(0, 50%, 38%)\",\n  white: \"hsl(0, 0%, 100%)\",\n  yellow: \"hsl(39, 39%, 53%)\",\n};\n\nconst Dropdown = styled.div`\n  line-height: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  grid-column: 1 / -1;\n`;\n\nconst Filter = styled.h3`\n  text-transform: uppercase;\n  font-weight: 600;\n  margin: 0.5rem 0;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n\n  & > *:first-child {\n    margin-right: 2rem;\n  }\n`;\n\nconst filterButton = `\n  text-transform: capitalize;\n  display: flex;\n  align-items: center;\n  margin: .15rem 0;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 0.75rem;\n    height: 0.75rem;\n    margin-right: 0.75rem;\n    border: 1px solid ${colors.primary};\n  }\n`;\n\nconst Color = styled.button`\n  ${filterButton}\n  font-weight: ${(props) => props.isSelected && \"600\"};\n\n  &:before {\n    background-color: ${(props) => filterColors[props.color] || props.color};\n  }\n`;\n\nconst Checkbox = styled.button`\n  ${filterButton}\n  font-weight: ${(props) => props.isSelected && \"600\"};\n\n  &:before {\n    background-color: ${(props) => props.isSelected && colors.secondary};\n    background-image: ${(props) => props.isSelected && `url(${check})`};\n    background-position: ${(props) => props.isSelected && \"center\"};\n    border-radius: 2px;\n  }\n`;\n\nconst Small = styled.span`\n  display: inline-block;\n  margin-left: 0.4rem;\n  font-size: 0.825rem;\n  color: ${colors.secondary};\n  font-weight: 500;\n`;\n\nconst Range = styled.input.attrs((props) => ({\n  type: \"range\",\n}))`\n  margin: 0.5rem 0;\n  -webkit-appearance: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n\n  &::-webkit-slider-thumb {\n    width: 13px;\n    height: 13px;\n    margin-top: -3px;\n    border-radius: 50%;\n    background: ${colors.secondary};\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: ${colors.tertiary};\n    height: 5px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n`;\n\nconst RangeBubble = styled.span`\n  position: relative;\n  display: inline-block;\n  padding: 0.15rem 0;\n  min-width: 3rem;\n  text-align: center;\n  background: ${colors.secondary};\n  border-radius: 3px;\n  color: ${colors.text};\n  margin-left: 1rem;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    border-top: 7px solid transparent;\n    border-bottom: 7px solid transparent;\n    border-right: 7px solid ${colors.secondary};\n    left: -6px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst ButtonEmpty = styled(Button)`\n  background: transparent;\n  color: ${colors.secondary};\n  border: 1px solid ${colors.secondary};\n\n  &:hover {\n    color: initial;\n  }\n`;\n\nconst OpenButton = styled(Button)`\n  display: flex;\n  justify-content: space-between;\n  text-transform: initial;\n  margin-top: 0;\n`;\n\nfunction Filters({ items, handleFilters }) {\n  // Filters\n  const [colors, setColors] = useState([]);\n  const [dimensions, setDimensions] = useState({\n    width: { min: 0, max: 0 },\n    height: { min: 0, max: 0 },\n    depth: { min: 0, max: 0 },\n  });\n  const [price, setPrice] = useState({});\n  const [materials, setMaterials] = useState([]);\n  const [seats, setSeats] = useState([]);\n\n  // Filters values\n  const [currentColors, setCurrentColors] = useState([]);\n  const [currentDimensions, setCurrentDimensions] = useState({\n    width: Infinity,\n    height: Infinity,\n    depth: Infinity,\n  });\n  const [currentPrice, setCurrentPrice] = useState(Infinity);\n  const [currentMaterials, setCurrentMaterials] = useState([]);\n  const [currentSeats, setCurrentSeats] = useState([]);\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [areColorsOpen, setAreColorsOpen] = useState(false);\n  const [areMaterialsOpen, setAreMaterialsOpen] = useState(false);\n  const [arePricesOpen, setArePricesOpen] = useState(false);\n  const [areDimensionsOpen, setAreDimensionsOpen] = useState(false);\n  const [areSeatsOpen, setAreSeatsOpen] = useState(false);\n\n  // Load filter values\n  useEffect(() => {\n    // Set colors filters\n    const colorsList = new Set();\n    for (const item of items) {\n      for (const color of item.colors) {\n        if (!colorsList.has(color.type)) colorsList.add(color.type);\n      }\n    }\n    setColors(Array.from(colorsList));\n\n    // Set dimensions filters\n    const dimensions = {\n      width: {\n        min: Infinity,\n        max: 0,\n      },\n      height: {\n        min: Infinity,\n        max: 0,\n      },\n      depth: {\n        min: Infinity,\n        max: 0,\n      },\n    };\n    for (const item of items) {\n      if (item.queries.dimensions.width.min < dimensions.width.min) {\n        dimensions.width.min = item.queries.dimensions.width.min;\n      }\n      if (item.queries.dimensions.width.max > dimensions.width.max) {\n        dimensions.width.max = item.queries.dimensions.width.max;\n      }\n      if (item.queries.dimensions.height.min < dimensions.height.min) {\n        dimensions.height.min = item.queries.dimensions.height.min;\n      }\n      if (item.queries.dimensions.height.max > dimensions.height.max) {\n        dimensions.height.max = item.queries.dimensions.height.max;\n      }\n      if (item.queries.dimensions.depth.min < dimensions.depth.min) {\n        dimensions.depth.min = item.queries.dimensions.depth.min;\n      }\n      if (item.queries.dimensions.depth.max > dimensions.depth.max) {\n        dimensions.depth.max = item.queries.dimensions.depth.max;\n      }\n    }\n    setDimensions(dimensions);\n    setCurrentDimensions({\n      width: dimensions.width.max,\n      height: dimensions.height.max,\n      depth: dimensions.depth.max,\n    });\n\n    // Set materials filters\n    const materialsList = new Set();\n    for (const item of items) {\n      for (const material of item.queries.materials) {\n        if (!materialsList.has(material)) materialsList.add(material);\n      }\n    }\n    setMaterials(Array.from(materialsList));\n\n    // Set price filters\n    const price = {\n      min: Infinity,\n      max: 0,\n    };\n\n    for (const item of items) {\n      if (item.queries.price.min < price.min)\n        price.min = item.queries.price.min;\n      if (item.queries.price.max > price.max)\n        price.max = item.queries.price.max;\n    }\n    setPrice(price);\n    setCurrentPrice(price.max);\n\n    // Set seats filters\n    const seatsList = new Set();\n    for (const item of items) {\n      if (item.queries.seats) {\n        for (const seat of item.queries.seats) {\n          if (!seatsList.has(seat)) seatsList.add(seat);\n        }\n      }\n    }\n    setSeats(Array.from(seatsList));\n  }, [items]);\n\n  // Give filters values to parent (Category)\n  useEffect(() => {\n    handleFilters(\"colors\", currentColors);\n  }, [currentColors]);\n\n  useEffect(() => {\n    handleFilters(\"dimensions\", currentDimensions);\n  }, [currentDimensions]);\n\n  useEffect(() => {\n    handleFilters(\"price\", currentPrice);\n  }, [currentPrice]);\n\n  useEffect(() => {\n    handleFilters(\"materials\", currentMaterials);\n  }, [currentMaterials]);\n\n  useEffect(() => {\n    handleFilters(\"seats\", currentSeats);\n  }, [currentSeats]);\n\n  // Reset filters\n  const reset = () => {\n    setCurrentColors([]);\n    setCurrentDimensions({\n      width: +dimensions.width.max,\n      height: +dimensions.height.max,\n      depth: +dimensions.depth.max,\n    });\n    setCurrentPrice(+price.max);\n    setCurrentMaterials([]);\n    setCurrentSeats([]);\n  };\n\n  const closeAll = () => {\n    setAreColorsOpen(false);\n    setAreMaterialsOpen(false);\n    setArePricesOpen(false);\n    setAreDimensionsOpen(false);\n    setAreSeatsOpen(false);\n  };\n\n  return (\n    <>\n      <OpenButton\n        type=\"button\"\n        onClick={() => {\n          if (isDropdownOpen) closeAll();\n          setIsDropdownOpen(!isDropdownOpen);\n        }}\n      >\n        Filters <FilterIcon />\n      </OpenButton>\n      {isDropdownOpen && (\n        <Dropdown>\n          <Filter onClick={() => setAreColorsOpen(!areColorsOpen)}>\n            Colors {areColorsOpen ? <AngleUp /> : <AngleDown />}\n          </Filter>\n          <CSSTransition\n            in={areColorsOpen}\n            timeout={500}\n            classNames=\"dropdown\"\n            mountOnEnter\n          >\n            <div>\n              {colors\n                .sort((a, b) => a.localeCompare(b))\n                .map((color) => {\n                  return (\n                    <Color\n                      key={color}\n                      color={color}\n                      isSelected={currentColors.includes(color)}\n                      onClick={() =>\n                        setCurrentColors((prevColors) => {\n                          return prevColors.includes(color)\n                            ? [...prevColors].filter(\n                                (prevColor) => prevColor !== color\n                              )\n                            : [...prevColors, color];\n                        })\n                      }\n                    >\n                      {color}\n                    </Color>\n                  );\n                })}\n            </div>\n          </CSSTransition>\n\n          <div>\n            <Filter onClick={() => setAreDimensionsOpen(!areDimensionsOpen)}>\n              Dimensions\n              {areDimensionsOpen ? <AngleUp /> : <AngleDown />}\n            </Filter>\n            <CSSTransition\n              in={areDimensionsOpen}\n              timeout={500}\n              classNames=\"dropdown\"\n              mountOnEnter\n            >\n              <div>\n                <div>\n                  Height\n                  <Small>\n                    ({dimensions.height.min} - {dimensions.height.max}\n)\n</Small>\n                </div>\n                <Row>\n                  <Range\n                    min={dimensions.height.min}\n                    max={dimensions.height.max}\n                    value={currentDimensions.height}\n                    onChange={(e) =>\n                      setCurrentDimensions({\n                        ...currentDimensions,\n                        height: +e.target.value,\n                      })\n                    }\n                  />\n                  <RangeBubble>{currentDimensions.height}</RangeBubble>\n                </Row>\n\n                <div>\n                  Width\n                  <Small>\n                    ({dimensions.width.min} - {dimensions.width.max}\n)\n</Small>\n                </div>\n                <Row>\n                  <Range\n                    min={dimensions.width.min}\n                    max={dimensions.width.max}\n                    value={currentDimensions.width}\n                    onChange={(e) =>\n                      setCurrentDimensions({\n                        ...currentDimensions,\n                        width: +e.target.value,\n                      })\n                    }\n                  />\n                  <RangeBubble>{currentDimensions.width}</RangeBubble>\n                </Row>\n\n                <div>\n                  Depth\n                  <Small>\n                    ({dimensions.depth.min} - {dimensions.depth.max}\n)\n</Small>\n                </div>\n                <Row>\n                  <Range\n                    min={dimensions.depth.min}\n                    max={dimensions.depth.max}\n                    value={currentDimensions.depth}\n                    onChange={(e) =>\n                      setCurrentDimensions({\n                        ...currentDimensions,\n                        depth: +e.target.value,\n                      })\n                    }\n                  />\n                  <RangeBubble>{currentDimensions.depth}</RangeBubble>\n                </Row>\n              </div>\n            </CSSTransition>\n          </div>\n\n          <div>\n            <Filter onClick={() => setAreMaterialsOpen(!areMaterialsOpen)}>\n              Materials\n              {areMaterialsOpen ? <AngleUp /> : <AngleDown />}\n            </Filter>\n            <CSSTransition\n              in={areMaterialsOpen}\n              timeout={500}\n              classNames=\"dropdown\"\n              mountOnEnter\n            >\n              <div>\n                {materials\n                  .sort((a, b) => a.localeCompare(b))\n                  .map((material) => {\n                    return (\n                      <Checkbox\n                        key={material}\n                        isSelected={currentMaterials.includes(material)}\n                        onClick={() =>\n                          setCurrentMaterials((prevMaterials) => {\n                            return prevMaterials.includes(material)\n                              ? [...prevMaterials].filter(\n                                  (prevMaterial) => prevMaterial !== material\n                                )\n                              : [...prevMaterials, material];\n                          })\n                        }\n                      >\n                        {formatNavLink(material)}\n                      </Checkbox>\n                    );\n                  })}\n              </div>\n            </CSSTransition>\n          </div>\n\n          <div>\n            <Filter onClick={() => setAreSeatsOpen(!areSeatsOpen)}>\n              Seats\n              {areSeatsOpen ? <AngleUp /> : <AngleDown />}\n            </Filter>\n            <CSSTransition\n              in={areSeatsOpen}\n              timeout={500}\n              classNames=\"dropdown\"\n              mountOnEnter\n            >\n              <div>\n                {seats\n                  .sort((a, b) => a - b)\n                  .map((number) => {\n                    return (\n                      <Checkbox\n                        key={number}\n                        isSelected={currentSeats.includes(number)}\n                        onClick={() =>\n                          setCurrentSeats((prevSeats) => {\n                            return prevSeats.includes(number)\n                              ? [...prevSeats].filter(\n                                  (prevMaterial) => prevMaterial !== number\n                                )\n                              : [...prevSeats, number];\n                          })\n                        }\n                      >\n                        {number}\n                      </Checkbox>\n                    );\n                  })}\n              </div>\n            </CSSTransition>\n          </div>\n\n          <div>\n            <Filter onClick={() => setArePricesOpen(!arePricesOpen)}>\n              <div>\n                Price\n                <Small>\n                  ({price.min} - {price.max})\n                </Small>\n              </div>\n              {arePricesOpen ? <AngleUp /> : <AngleDown />}\n            </Filter>\n            <CSSTransition\n              in={arePricesOpen}\n              timeout={500}\n              classNames=\"dropdown\"\n              mountOnEnter\n            >\n              <Row>\n                <Range\n                  min={price.min}\n                  max={price.max}\n                  step={0.5}\n                  value={currentPrice}\n                  onChange={(e) => setCurrentPrice(+e.target.value)}\n                />\n                <RangeBubble>{currentPrice}</RangeBubble>\n              </Row>\n            </CSSTransition>\n          </div>\n\n          <Buttons>\n            <Button type=\"button\" onClick={() => setIsDropdownOpen(false)}>\n              Apply\n            </Button>\n            <ButtonEmpty type=\"button\" onClick={reset}>\n              Reset\n            </ButtonEmpty>\n          </Buttons>\n        </Dropdown>\n      )}\n    </>\n  );\n}\n\nexport default Filters;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/SideFilters.jsx",["675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { formatNavLink } from \"../../../utils/utils\";\n\n// Icons\nimport check from \"../../../assets/icons/icon-check.svg\";\nimport { ReactComponent as AngleDown } from \"../../../assets/icons/icon-angle-down.svg\";\nimport { ReactComponent as AngleUp } from \"../../../assets/icons/icon-angle-up.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 70%)\", // Bright Grey\n  text: \"hsl(0, 0%, 85%)\",\n  label: \"hsl(0, 0%, 100%)\",\n};\n\nconst filterColors = {\n  beige: \"hsl(20, 49%, 73%)\",\n  black: \"hsl(0, 0%, 0%)\",\n  blue: \"hsl(213, 95%, 36%)\",\n  brown: \"hsl(20, 35%, 29%)\",\n  green: \"hsl(141, 28%, 29%)\",\n  grey: \"hsl(0, 0%, 50%)\",\n  orange: \"hsl(9, 39%, 51%)\",\n  red: \"hsl(0, 50%, 38%)\",\n  white: \"hsl(0, 0%, 100%)\",\n  yellow: \"hsl(39, 39%, 53%)\",\n};\n\nconst Container = styled.div`\n  line-height: 1.5rem;\n  margin-right: 1rem;\n  display: flex;\n  flex-direction: column;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n\n  @media all and (min-width: 1200px) {\n    margin-right: 5rem;\n  }\n`;\n\nconst Filter = styled.h3`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-transform: uppercase;\n  font-weight: 600;\n  margin: 0.5rem 0;\n`;\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst filterButton = `\n  text-transform: capitalize;\n  display: flex;\n  align-items: center;\n  margin: .15rem 0;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 0.75rem;\n    height: 0.75rem;\n    margin-right: 0.75rem;\n    border: 1px solid ${colors.primary};\n  }\n`;\n\nconst Color = styled.button`\n  ${filterButton}\n  font-weight: ${(props) => props.isSelected && \"600\"};\n\n  &:before {\n    background-color: ${(props) => filterColors[props.color] || props.color};\n  }\n`;\n\nconst Checkbox = styled.button`\n  ${filterButton}\n  font-weight: ${(props) => props.isSelected && \"600\"};\n\n  &:before {\n    background-color: ${(props) => props.isSelected && colors.secondary};\n    background-image: ${(props) => props.isSelected && `url(${check})`};\n    background-position: ${(props) => props.isSelected && \"center\"};\n    border-radius: 2px;\n  }\n`;\n\nconst Small = styled.span`\n  display: inline-block;\n  margin-left: 0.4rem;\n  font-size: 0.825rem;\n  color: ${colors.secondary};\n  font-weight: 500;\n`;\n\nconst Range = styled.input.attrs((props) => ({\n  type: \"range\",\n}))`\n  margin: 0.5rem 0;\n  -webkit-appearance: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n\n  &::-webkit-slider-thumb {\n    width: 13px;\n    height: 13px;\n    margin-top: -3px;\n    border-radius: 50%;\n    background: ${colors.secondary};\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: ${colors.tertiary};\n    height: 5px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n`;\n\nconst RangeBubble = styled.span`\n  position: relative;\n  display: inline-block;\n  padding: 0.15rem 0;\n  min-width: 3rem;\n  text-align: center;\n  background: ${colors.secondary};\n  border-radius: 3px;\n  color: ${colors.text};\n  margin-left: 1rem;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    border-top: 7px solid transparent;\n    border-bottom: 7px solid transparent;\n    border-right: 7px solid ${colors.secondary};\n    left: -6px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 1.5rem;\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n  background: ${colors.secondary};\n  align-self: center;\n  padding: 0.5rem 1rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.label};\n  }\n`;\n\nconst Icon = styled.button`\n  cursor: pointer;\n`;\n\nfunction SideFilters({ items, handleFilters }) {\n  // Filters\n  const [colors, setColors] = useState([]);\n  const [dimensions, setDimensions] = useState({\n    width: { min: 0, max: 0 },\n    height: { min: 0, max: 0 },\n    depth: { min: 0, max: 0 },\n  });\n  const [price, setPrice] = useState({});\n  const [materials, setMaterials] = useState([]);\n  const [seats, setSeats] = useState([]);\n\n  // Filters values\n  const [currentColors, setCurrentColors] = useState([]);\n  const [currentDimensions, setCurrentDimensions] = useState({\n    width: Infinity,\n    height: Infinity,\n    depth: Infinity,\n  });\n  const [currentPrice, setCurrentPrice] = useState(Infinity);\n  const [currentMaterials, setCurrentMaterials] = useState([]);\n  const [currentSeats, setCurrentSeats] = useState([]);\n  const [areColorsOpen, setAreColorsOpen] = useState(true);\n  const [areMaterialsOpen, setAreMaterialsOpen] = useState(true);\n  const [arePricesOpen, setArePricesOpen] = useState(true);\n  const [areDimensionsOpen, setAreDimensionsOpen] = useState(true);\n  const [areSeatsOpen, setAreSeatsOpen] = useState(true);\n\n  // Load filter values\n  useEffect(() => {\n    // Set colors filters\n    const colorsList = new Set();\n    for (const item of items) {\n      for (const color of item.colors) {\n        if (!colorsList.has(color.type)) colorsList.add(color.type);\n      }\n    }\n    setColors(Array.from(colorsList));\n\n    // Set dimensions filters\n    const dimensions = {\n      width: {\n        min: Infinity,\n        max: 0,\n      },\n      height: {\n        min: Infinity,\n        max: 0,\n      },\n      depth: {\n        min: Infinity,\n        max: 0,\n      },\n    };\n    for (const item of items) {\n      if (item.queries.dimensions.width.min < dimensions.width.min) {\n        dimensions.width.min = item.queries.dimensions.width.min;\n      }\n      if (item.queries.dimensions.width.max > dimensions.width.max) {\n        dimensions.width.max = item.queries.dimensions.width.max;\n      }\n      if (item.queries.dimensions.height.min < dimensions.height.min) {\n        dimensions.height.min = item.queries.dimensions.height.min;\n      }\n      if (item.queries.dimensions.height.max > dimensions.height.max) {\n        dimensions.height.max = item.queries.dimensions.height.max;\n      }\n      if (item.queries.dimensions.depth.min < dimensions.depth.min) {\n        dimensions.depth.min = item.queries.dimensions.depth.min;\n      }\n      if (item.queries.dimensions.depth.max > dimensions.depth.max) {\n        dimensions.depth.max = item.queries.dimensions.depth.max;\n      }\n    }\n    setDimensions(dimensions);\n    setCurrentDimensions({\n      width: dimensions.width.max,\n      height: dimensions.height.max,\n      depth: dimensions.depth.max,\n    });\n\n    // Set materials filters\n    const materialsList = new Set();\n    for (const item of items) {\n      for (const material of item.queries.materials) {\n        if (!materialsList.has(material)) materialsList.add(material);\n      }\n    }\n    setMaterials(Array.from(materialsList));\n\n    // Set price filters\n    const price = {\n      min: Infinity,\n      max: 0,\n    };\n\n    for (const item of items) {\n      if (item.queries.price.min < price.min)\n        price.min = item.queries.price.min;\n      if (item.queries.price.max > price.max)\n        price.max = item.queries.price.max;\n    }\n    setPrice(price);\n    setCurrentPrice(price.max);\n\n    // Set seats filters\n    const seatsList = new Set();\n    for (const item of items) {\n      if (item.queries.seats) {\n        for (const seat of item.queries.seats) {\n          if (!seatsList.has(seat)) seatsList.add(seat);\n        }\n      }\n    }\n    setSeats(Array.from(seatsList));\n  }, [items]);\n\n  // Give filters values to parent (Category)\n  useEffect(() => {\n    handleFilters(\"colors\", currentColors);\n  }, [currentColors]);\n\n  useEffect(() => {\n    handleFilters(\"dimensions\", currentDimensions);\n  }, [currentDimensions]);\n\n  useEffect(() => {\n    handleFilters(\"price\", currentPrice);\n  }, [currentPrice]);\n\n  useEffect(() => {\n    handleFilters(\"materials\", currentMaterials);\n  }, [currentMaterials]);\n\n  useEffect(() => {\n    handleFilters(\"seats\", currentSeats);\n  }, [currentSeats]);\n\n  // Reset filters\n  const reset = () => {\n    setCurrentColors([]);\n    setCurrentDimensions({\n      width: +dimensions.width.max,\n      height: +dimensions.height.max,\n      depth: +dimensions.depth.max,\n    });\n    setCurrentPrice(+price.max);\n    setCurrentMaterials([]);\n    setCurrentSeats([]);\n  };\n\n  return (\n    <Container>\n      <Filter onClick={() => setAreColorsOpen(!areColorsOpen)}>\n        Colors\n        <Icon>{areColorsOpen ? <AngleUp /> : <AngleDown />}</Icon>\n      </Filter>\n      <CSSTransition\n        in={areColorsOpen}\n        timeout={500}\n        classNames=\"dropdown\"\n        mountOnEnter\n      >\n        <div>\n          {colors\n            .sort((a, b) => a.localeCompare(b))\n            .map((color) => {\n              return (\n                <Color\n                  key={color}\n                  color={color}\n                  isSelected={currentColors.includes(color)}\n                  onClick={() =>\n                    setCurrentColors((prevColors) => {\n                      return prevColors.includes(color)\n                        ? [...prevColors].filter(\n                            (prevColor) => prevColor !== color\n                          )\n                        : [...prevColors, color];\n                    })}\n                >\n                  {color}\n                </Color>\n              );\n            })}\n        </div>\n      </CSSTransition>\n\n      <div>\n        <Filter onClick={() => setAreDimensionsOpen(!areDimensionsOpen)}>\n          Dimensions\n          <Icon>{areDimensionsOpen ? <AngleUp /> : <AngleDown />}</Icon>\n        </Filter>\n        <CSSTransition\n          in={areDimensionsOpen}\n          timeout={500}\n          classNames=\"dropdown\"\n          mountOnEnter\n        >\n          <div>\n            <div>\n              Height\n              <Small>\n                ({dimensions.height.min} - {dimensions.height.max}\n)\n</Small>\n            </div>\n            <Row>\n              <Range\n                min={dimensions.height.min}\n                max={dimensions.height.max}\n                value={currentDimensions.height}\n                onChange={(e) =>\n                  setCurrentDimensions({\n                    ...currentDimensions,\n                    height: +e.target.value,\n                  })\n                }\n              />\n              <RangeBubble>{currentDimensions.height}</RangeBubble>\n            </Row>\n\n            <div>\n              Width\n              <Small>\n                ({dimensions.width.min} - {dimensions.width.max}\n)\n</Small>\n            </div>\n            <Row>\n              <Range\n                min={dimensions.width.min}\n                max={dimensions.width.max}\n                value={currentDimensions.width}\n                onChange={(e) =>\n                  setCurrentDimensions({\n                    ...currentDimensions,\n                    width: +e.target.value,\n                  })\n                }\n              />\n              <RangeBubble>{currentDimensions.width}</RangeBubble>\n            </Row>\n\n            <div>\n              Depth\n              <Small>\n                ({dimensions.depth.min} - {dimensions.depth.max}\n)\n</Small>\n            </div>\n            <Row>\n              <Range\n                min={dimensions.depth.min}\n                max={dimensions.depth.max}\n                value={currentDimensions.depth}\n                onChange={(e) =>\n                  setCurrentDimensions({\n                    ...currentDimensions,\n                    depth: +e.target.value,\n                  })\n                }\n              />\n              <RangeBubble>{currentDimensions.depth}</RangeBubble>\n            </Row>\n          </div>\n        </CSSTransition>\n      </div>\n\n      <div>\n        <Filter onClick={() => setAreMaterialsOpen(!areMaterialsOpen)}>\n          Materials\n          <Icon>{areMaterialsOpen ? <AngleUp /> : <AngleDown />}</Icon>\n        </Filter>\n        <CSSTransition\n          in={areMaterialsOpen}\n          timeout={500}\n          classNames=\"dropdown\"\n          mountOnEnter\n        >\n          <div>\n            {materials\n              .sort((a, b) => a.localeCompare(b))\n              .map((material) => {\n                return (\n                  <Checkbox\n                    key={material}\n                    isSelected={currentMaterials.includes(material)}\n                    onClick={() =>\n                      setCurrentMaterials((prevMaterials) => {\n                        return prevMaterials.includes(material)\n                          ? [...prevMaterials].filter(\n                              (prevMaterial) => prevMaterial !== material\n                            )\n                          : [...prevMaterials, material];\n                      })\n                    }\n                  >\n                    {formatNavLink(material)}\n                  </Checkbox>\n                );\n              })}\n          </div>\n        </CSSTransition>\n      </div>\n\n      <div>\n        <Filter onClick={() => setAreSeatsOpen(!areSeatsOpen)}>\n          Seats\n          <Icon>{areSeatsOpen ? <AngleUp /> : <AngleDown />}</Icon>\n        </Filter>\n        <CSSTransition\n          in={areSeatsOpen}\n          timeout={500}\n          classNames=\"dropdown\"\n          mountOnEnter\n        >\n          <div>\n            {seats\n              .sort((a, b) => a - b)\n              .map((number) => {\n                return (\n                  <Checkbox\n                    key={number}\n                    isSelected={currentSeats.includes(number)}\n                    onClick={() =>\n                      setCurrentSeats((prevSeats) => {\n                        return prevSeats.includes(number)\n                          ? [...prevSeats].filter(\n                              (prevMaterial) => prevMaterial !== number\n                            )\n                          : [...prevSeats, number];\n                      })\n                    }\n                  >\n                    {number}\n                  </Checkbox>\n                );\n              })}\n          </div>\n        </CSSTransition>\n      </div>\n\n      <div>\n        <Filter onClick={() => setArePricesOpen(!arePricesOpen)}>\n          <div>\n            Price\n            <Small>\n              ({price.min} - {price.max}\n)\n</Small>\n          </div>\n          {arePricesOpen ? <AngleUp /> : <AngleDown />}\n        </Filter>\n        <CSSTransition\n          in={arePricesOpen}\n          timeout={500}\n          classNames=\"dropdown\"\n          mountOnEnter\n        >\n          <Row>\n            <Range\n              min={price.min}\n              max={price.max}\n              step={0.5}\n              value={currentPrice}\n              onChange={(e) => setCurrentPrice(+e.target.value)}\n            />\n            <RangeBubble>{currentPrice}</RangeBubble>\n          </Row>\n        </CSSTransition>\n      </div>\n\n      <Button type=\"button\" onClick={reset}>\n        Reset\n      </Button>\n    </Container>\n  );\n}\n\nexport default SideFilters;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Sort.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/FullCarousel.jsx",["727","728","729","730"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { HashLink } from \"react-router-hash-link\";\n\n// Images\nimport { ReactComponent as AngleLeft } from \"../assets/icons/icon-angle-left.svg\";\nimport { ReactComponent as AngleRight } from \"../assets/icons/icon-angle-right.svg\";\nimport { ReactComponent as Arrow } from \"../assets/icons/icon-small-arrow.svg\";\n\nconst colors = {\n  arrow: \"hsl(0, 0%, 100%)\",\n  button: \"hsl(0, 0%, 27%)\",\n  buttonHover: \"hsl(0, 0%, 5%)\",\n  text: \"hsl(0, 0%, 0%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  height: 80vh;\n`;\n\nconst CarouselComponent = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Text = styled.div`\n  position: absolute;\n  top: 3rem;\n  color: ${colors.arrow};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1.25rem;\n  line-height: 2.5rem;\n  text-align: center;\n  padding: 0 1rem;\n\n  @media all and (min-width: 400px) {\n    top: 50%;\n    transform: translateY(-50%);\n    left: 15%;\n  }\n\n  @media all and (min-width: 768px) {\n    font-size: 1.75rem;\n    line-height: 3.25rem;\n    align-items: flex-start;\n  }\n`;\n\nconst Title = styled.div`\n  text-transform: uppercase;\n  font-size: 2.5rem;\n  letter-spacing: 3px;\n\n  @media all and (min-width: 768px) {\n    font-size: 3.75rem;\n    letter-spacing: 6px;\n  }\n`;\n\nconst ShopButton = styled.span`\n  background: ${colors.arrow};\n  padding: 0 1rem;\n  margin-top: 0.5rem;\n  color: ${colors.button};\n  text-transform: uppercase;\n  font-size: 1.125rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst ImageButtons = styled.div`\n  position: absolute;\n  bottom: 1rem;\n  right: 1rem;\n  display: flex;\n\n  & > * {\n    margin-left: 0.5rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst ImageButton = styled.button`\n  color: ${colors.arrow};\n  font-family: \"Playfair Display\", sans-serif;\n  font-size: ${(props) => (props.isSelected ? \"1.25rem\" : \"1.125rem\")};\n  opacity: ${(props) => (props.isSelected ? \"1\" : \".75\")};\n  cursor: pointer;\n\n  &:hover {\n    font-size: ${(props) => !props.isSelected && \"1.25rem\"};\n  }\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background: ${colors.button};\n  padding: 1.5rem 1rem;\n  cursor: pointer;\n  color: ${colors.arrow};\n\n  &:hover {\n    background: ${colors.buttonHover};\n  }\n`;\n\nconst ButtonLeft = styled(Button)`\n  left: 0;\n`;\n\nconst ButtonRight = styled(Button)`\n  right: 0;\n`;\n\nconst Image = styled.img`\n  width: 100vw;\n  object-fit: cover;\n  height: 100%;\n  filter: brightness(70%);\n`;\n\nfunction FullCarousel() {\n  const images = [\n    \"https://firebasestorage.googleapis.com/v0/b/room-f191c.appspot.com/o/images%2Fshop%2Fshop_main_1.jpg?alt=media&token=6955b061-b35e-445a-9c2f-7ea1b7389612\",\n    \"https://firebasestorage.googleapis.com/v0/b/room-f191c.appspot.com/o/images%2Fshop%2Fshop_main_2.jpg?alt=media&token=6c2dfbbc-116b-4488-bd9b-c8001a4bc1a3\",\n  ];\n  const text = [\n    {\n      title: \"New Arrivals\",\n      text: \"Discover our new furnitures and decorations.\",\n      link: \"/shop/new_in\",\n    },\n    {\n      title: \"Featured Designs\",\n      text: \"Discover our designers' seasonal creations.\",\n      link: \"/shop#featured\",\n    },\n  ];\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n\n  // Functions\n  const next = () => {\n    currentSlide === images.length - 1\n      ? setCurrentSlide(0)\n      : setCurrentSlide((prev) => prev + 1);\n    setIsChanging(true);\n  };\n\n  const previous = () => {\n    currentSlide === 0\n      ? setCurrentSlide(images.length + 1)\n      : setCurrentSlide((prev) => prev - 1);\n    setIsChanging(true);\n  };\n\n  return (\n    <Container>\n      <CarouselComponent>\n        <CSSTransition\n          in={isChanging}\n          timeout={500}\n          classNames=\"fade\"\n          onEntered={() => setIsChanging(false)}\n        >\n          <>\n            <Image src={images[currentSlide]} alt=\"Hero\" />\n            <Text>\n              <Title>{text[currentSlide].title}</Title>\n              <div>{text[currentSlide].text}</div>\n              {text[currentSlide].link.includes(\"#\") ? (\n                <HashLink to={text[currentSlide].link}>\n                  <ShopButton>\n                    Shop now <Arrow />\n                  </ShopButton>\n                </HashLink>\n              ) : (\n                <Link to={text[currentSlide].link}>\n                  <ShopButton>\n                    Shop now <Arrow />\n                  </ShopButton>\n                </Link>\n              )}\n            </Text>\n          </>\n        </CSSTransition>\n\n        <ButtonLeft type=\"button\" onClick={previous}>\n          <AngleLeft />\n        </ButtonLeft>\n        <ButtonRight type=\"button\" onClick={next}>\n          <AngleRight />\n        </ButtonRight>\n\n        <ImageButtons>\n          {images.map((image, index) => (\n            <ImageButton\n              key={image}\n              onClick={() => {\n                setCurrentSlide(index);\n                setIsChanging(true);\n              }}\n              isSelected={currentSlide === index}\n              disabled={currentSlide === index}\n            >\n              {index + 1}\n            </ImageButton>\n          ))}\n        </ImageButtons>\n      </CarouselComponent>\n    </Container>\n  );\n}\n\nexport default FullCarousel;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Designs.jsx",["731","732","733","734","735","736","737","738"],"import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useCarousel from \"../../../hooks/useCarousel\";\n\n// Icons\nimport { ReactComponent as AngleLeft } from \"../../../assets/icons/icon-angle-left.svg\";\nimport { ReactComponent as AngleRight } from \"../../../assets/icons/icon-angle-right.svg\";\nimport { ReactComponent as Arrow } from \"../../../assets/icons/icon-small-arrow.svg\";\n\n// Styled components\n\nconst colors = {\n  background: \"hsl(0, 0%, 100%)\",\n  button: \"hsl(0, 0%, 50%)\",\n  disabled: \"hsl(0, 0%, 80%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  max-width: 1300px;\n  margin: 3rem 0;\n`;\n\nconst Gallery = styled.div`\n  height: 100%;\n  width: 100%;\n  margin: 0 1rem;\n  overflow: hidden;\n\n  & > * {\n    margin-left: 3rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Slides = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n  width: ${(props) => (props.slidesNumber - 1) * 100}%;\n`;\n\nconst Slide = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 3rem;\n`;\n\nconst Button = styled.button`\n  width: 2rem;\n  padding: 0;\n  cursor: pointer;\n  color: ${colors.button};\n\n  &:disabled {\n    color: ${colors.disabled};\n  }\n`;\n\nconst Preview = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 0.25s linear;\n  transform: ${(props) => props.isHovered && \"scale(1.1)\"};\n`;\n\nconst ShopButton = styled.span`\n  background: ${colors.background};\n  color: ${colors.text};\n  text-transform: uppercase;\n  padding: 0.5rem 1rem;\n  display: flex;\n  align-items: center;\n  position: absolute;\n  bottom: 1rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nfunction Designs({ designs }) {\n  const [isHovered, setIsHovered] = useState(\"\");\n  const galleryRef = useRef();\n  const {\n    slidesNumber,\n    transition,\n    transitionDuration,\n    slidesGroups,\n    previous,\n    next,\n    handleTransitionEnd,\n  } = useCarousel(designs, 3);\n  useCarousel(designs, 3);\n\n  return (\n    <Container>\n      <Button onClick={previous} disabled={slidesGroups.length < 3}>\n        <AngleLeft />\n      </Button>\n\n      <Gallery ref={galleryRef}>\n        <Slides\n          onTransitionEnd={handleTransitionEnd}\n          transition={transition}\n          transitionDuration={transitionDuration}\n          slidesNumber={slidesNumber}\n        >\n          {galleryRef.current && (\n            <>\n              {slidesGroups.map((slide, indexGroup) => {\n                return (\n                  <Slide key={indexGroup} size={galleryRef.current.clientWidth}>\n                    {slide &&\n                      slide.map((slide, index) => {\n                        if (slide) {\n                          return (\n                            <Preview\n                              key={`${slide.id}-${indexGroup}`}\n                              onMouseEnter={() => setIsHovered(slide.id)}\n                              onMouseLeave={() => setIsHovered(\"\")}\n                            >\n                              <Link to={`/shop/design/${slide.id}`}>\n                                <Image\n                                  src={slide.image}\n                                  alt=\"Featured room design\"\n                                  isHovered={isHovered === slide.id}\n                                  onTransitionEnd={(e) => e.stopPropagation()}\n                                />\n                                {isHovered === slide.id && (\n                                  <ShopButton>\n                                    Shop now \n{' '}\n<Arrow />\n                                  </ShopButton>\n                                )}\n                              </Link>\n                            </Preview>\n                          );\n                        }\n                        return <Preview key={`empty-${index}`} />;\n                      })}\n                  </Slide>\n                );\n              })}\n            </>\n          )}\n        </Slides>\n      </Gallery>\n\n      <Button onClick={next} disabled={slidesGroups.length < 3}>\n        <AngleRight />\n      </Button>\n    </Container>\n  );\n}\n\nexport default Designs;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/Recommendations.jsx",["739","740","741","742","743","744","745"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useFavorite } from \"../../../contexts/FavoriteContext\";\nimport useCarousel from \"../../../hooks/useCarousel\";\nimport ShopItemPreview from \"./ShopItemPreview\";\n\n// Icons\nimport { ReactComponent as AngleLeft } from \"../../../assets/icons/icon-angle-left.svg\";\nimport { ReactComponent as AngleRight } from \"../../../assets/icons/icon-angle-right.svg\";\n\n// Styled components\nconst colors = {\n  heading: \"hsl(0, 0%, 27%)\",\n  border: \"hsl(0, 0%, 80%)\",\n  button: \"hsl(0, 0%, 50%)\",\n  disabled: \"hsl(0, 0%, 90%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  max-width: 1300px;\n  margin: 3rem 0;\n`;\n\nconst Gallery = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Slides = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n  width: ${(props) => props.slidesGroups * 100}%;\n`;\n\nconst Slide = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.slidesNumber}, 1fr);\n  min-width: 0;\n`;\n\nconst Button = styled.button`\n  width: 2rem;\n  padding: 0;\n  cursor: pointer;\n  color: ${colors.button};\n\n  &:disabled {\n    color: ${colors.disabled};\n  }\n`;\n\nconst Preview = styled.div`\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Heading = styled.h2`\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  align-self: stretch;\n  justify-content: center;\n  font-size: 1.25rem;\n  margin-top: 3rem;\n\n  &:before,\n  &:after {\n    content: \"\";\n    display: inline-block;\n    margin: 0 1rem;\n    height: 1px;\n    width: 20%;\n    background: ${colors.heading};\n    background: linear-gradient(270deg, transparent, ${colors.heading});\n  }\n\n  &:before {\n    background: linear-gradient(270deg, ${colors.heading}, transparent);\n  }\n`;\n\nfunction Recommendations({ recommendations, number }) {\n  const { favorites } = useFavorite();\n  const {\n    slidesNumber,\n    transition,\n    transitionDuration,\n    slidesGroups,\n    previous,\n    next,\n    handleTransitionEnd,\n  } = useCarousel(recommendations, number);\n  useCarousel(recommendations, number);\n\n  return (\n    <>\n      <Heading>Similar Items</Heading>\n      <Container>\n        <Button onClick={previous} disabled={slidesGroups.length < 3}>\n          <AngleLeft />\n        </Button>\n\n        <Gallery>\n          <Slides\n            onTransitionEnd={handleTransitionEnd}\n            transition={transition}\n            transitionDuration={transitionDuration}\n            slidesGroups={slidesGroups.length}\n          >\n            {slidesGroups.map((slide, index) => {\n              return (\n                <Slide key={index} slidesNumber={slidesNumber}>\n                  {slide.map((slide, index) => {\n                    if (slide) {\n                      return (\n                        <Preview key={`${slide.id}-${index}`}>\n                          <ShopItemPreview\n                            name={slide.name}\n                            images={slide.images}\n                            price={slide.price}\n                            id={slide.id}\n                            isFavorite={favorites.includes(slide.id)}\n                            isNew={slide.isNew}\n                          />\n                        </Preview>\n                      );\n                    }\n                    return <Preview key={`empty-${index}`} />;\n                  })}\n                </Slide>\n              );\n            })}\n          </Slides>\n        </Gallery>\n\n        <Button onClick={next} disabled={slidesGroups.length < 3}>\n          <AngleRight />\n        </Button>\n      </Container>\n    </>\n  );\n}\n\nexport default Recommendations;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ImagesPreview.jsx",["746","747","748"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ImageMagnifier from \"./ImageMagnifier\";\nimport useCarousel from \"../../../hooks/useCarousel\";\n\n// Icons\nimport { ReactComponent as AngleLeft } from \"../../../assets/icons/icon-angle-left.svg\";\nimport { ReactComponent as AngleRight } from \"../../../assets/icons/icon-angle-right.svg\";\n\nconst colors = {\n  border: \"hsl(0, 0%, 80%)\",\n  button: \"hsl(0, 0%, 50%)\",\n  disabled: \"hsl(0, 0%, 90%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${(props) => props.size};\n  height: ${(props) => props.size};\n  border: 1px solid ${colors.border};\n`;\n\nconst Carousel = styled.div`\n  width: ${(props) => props.size};\n  height: calc((${(props) => props.size} - 7rem) / 4);\n  margin-top: 1rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 2rem;\n  padding: 0;\n  cursor: pointer;\n  color: ${colors.button};\n\n  &:disabled {\n    color: ${colors.disabled};\n  }\n`;\n\nconst Gallery = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n\n  & > * {\n    margin-left: 1rem;\n  }\n\n  & > *:first-child {\n    margin-left: 0;\n  }\n`;\n\nconst Slides = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n  width: ${(props) => props.slidesGroups * 100}%;\n`;\n\nconst Slide = styled.li`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.slidesNumber}, 1fr);\n  justify-items: center;\n`;\n\nconst Preview = styled.div`\n  height: calc((${(props) => props.size} - 7rem) / 4);\n  width: calc((${(props) => props.size} - 7rem) / 4);\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border: 1px solid ${colors.border};\n`;\n\nfunction ImagesPreview({ images, size }) {\n  const [currentImage, setCurrentImage] = useState(images[0]);\n  const [isImageChanging, setIsImageChanging] = useState(false);\n  const {\n    slidesNumber,\n    transition,\n    transitionDuration,\n    slidesGroups,\n    previous,\n    next,\n    handleTransitionEnd,\n  } = useCarousel(images, 4);\n  useCarousel(images, 4);\n\n  useEffect(() => {\n    if (isImageChanging) {\n      setTimeout(() => setIsImageChanging(false), 350);\n    }\n  }, [isImageChanging]);\n\n  return (\n    <div>\n      <Container size={size}>\n        <CSSTransition\n          in={isImageChanging}\n          timeout={350}\n          classNames=\"image-preview\"\n        >\n          <ImageMagnifier image={currentImage} />\n        </CSSTransition>\n      </Container>\n\n      <Carousel size={size}>\n        <Button onClick={previous} disabled={slidesGroups.length < 3}>\n          <AngleLeft />\n        </Button>\n        <Gallery>\n          <Slides\n            onTransitionEnd={handleTransitionEnd}\n            transition={transition}\n            transitionDuration={transitionDuration}\n            slidesGroups={slidesGroups.length}\n          >\n            {slidesGroups.map((slide, index) => {\n              return (\n                <Slide key={index} slidesNumber={slidesNumber}>\n                  {slidesGroups &&\n                    slide.map((image, index) => {\n                      if (image) {\n                        return (\n                          <Preview key={image} size={size}>\n                            <Image\n                              src={image}\n                              alt=\"Item Preview\"\n                              onClick={() => {\n                                if (currentImage === image) return;\n                                setIsImageChanging(true);\n                                setCurrentImage(image);\n                              }}\n                            />\n                          </Preview>\n                        );\n                      }\n                      return <Preview key={`empty-${index}`} />;\n                    })}\n                </Slide>\n              );\n            })}\n          </Slides>\n        </Gallery>\n        <Button onClick={next} disabled={slidesGroups.length < 3}>\n          <AngleRight />\n        </Button>\n      </Carousel>\n    </div>\n  );\n}\n\nImagesPreview.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  size: PropTypes.string,\n};\n\nImagesPreview.defaultProps = {\n  size: \"35rem\",\n};\n\nexport default ImagesPreview;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartPreview.jsx",["749","750","751","752","753","754","755","756","757"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Darker grey - background\n  tertiary: \"hsl(0, 0%, 0%)\", // Black\n  quaternary: \"hsl(0, 0%, 55%)\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Product = styled.li`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: auto 3fr 1fr 1fr;\n  align-items: center;\n\n  @media all and (min-width: 500px) {\n    grid-gap: 2rem;\n  }\n`;\n\nconst Image = styled.img`\n  width: 7.5rem;\n  height: 7.5rem;\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n  justify-self: end;\n`;\n\nconst Type = styled.div`\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Option = styled(Type)`\n  color: ${colors.quaternary};\n`;\n\nconst Capitalize = styled.span`\n  text-transform: capitalize;\n`;\n\nconst Review = styled.div`\n  display: grid;\n  align-self: flex-end;\n  grid-template-columns: repeat(2, auto);\n  grid-gap: 0.5rem 1.5rem;\n  color: ${colors.primary};\n  margin-bottom: 1rem;\n`;\n\nconst Total = styled.div`\n  color: ${colors.tertiary};\n  font-weight: 600;\n`;\n\nfunction CartPreview({ cart }) {\n  return (\n    <Container>\n      <ul>\n        {cart.map((product) => {\n          return (\n            <Product key={product.id}>\n              <Image src={product.image} alt=\"Product preview\" />\n              <div>\n                <Name>{product.name}</Name>\n                <Type>\n                  {product.type}\n                  {' '}\n                  in\n                  {product.color.description}\n                </Type>\n                {product.options.map((option) => {\n                  return (\n                    <Option option={option} key={Object.keys(option)[0]}>\n                      <Capitalize>{Object.keys(option)[0]}</Capitalize>\n                      {' '}\n                      -{\" \"}\n                      {option[Object.keys(option)[0]].option}\n                    </Option>\n                  );\n                })}\n              </div>\n              <div>{product.quantity}</div>\n              <Price>£{product.price}</Price>\n            </Product>\n          );\n        })}\n      </ul>\n\n      <Review>\n        <div>Items</div>\n        <div>\n          £\n{cart.reduce((sum, item) => sum + item.price * item.quantity, 0)}\n        </div>\n        <div>Shipping</div>\n        <div>0</div>\n        <Total>Total</Total>\n        <Total>\n          £\n{cart.reduce((sum, item) => sum + item.price * item.quantity, 0)}\n        </Total>\n      </Review>\n    </Container>\n  );\n}\n\nCartPreview.propTypes = {\n  cart: PropTypes.arrayOf({\n    product: PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      type: PropTypes.string,\n      image: PropTypes.string,\n      color: PropTypes.shape({\n        description: PropTypes.string,\n      }),\n      quantity: PropTypes.number,\n      price: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default CartPreview;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.jsx",["758","759","760","761","762","763","764","765","766","767"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useCart from \"../../../hooks/useCart\";\n\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 27%)\", // Darker grey - for background\n  text: \"hsl(0, 0%, 95%)\",\n  white: \"hsl(0, 0%, 100%)\",\n  small: \"hsl(0, 0%, 85%)\",\n  accent: \"hsl(46, 65%, 52%)\", // Gold\n};\n\nconst Container = styled.div`\n  margin-left: 5rem;\n  background: ${colors.secondary};\n  color: ${colors.text};\n  padding: 3rem 4rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n`;\n\nconst Cart = styled.div`\n  line-height: 1.25rem;\n  width: 100%;\n`;\n\nconst Heading = styled.h3`\n  font-size: 1.25rem;\n  margin-bottom: 1.5rem;\n`;\n\nconst Item = styled.li`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-row-gap: 1rem;\n\n  &:after {\n    content: \"\";\n    grid-column: 1 / -1;\n    width: 100%;\n    height: 1px;\n    margin-bottom: 1rem;\n    background: ${colors.primary};\n    background: linear-gradient(\n      90deg,\n      ${colors.secondary} 0%,\n      ${colors.accent} 40%,\n      ${colors.accent} 60%,\n      ${colors.secondary} 100%\n    );\n  }\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n`;\n\nconst Type = styled.div`\n  font-style: italic;\n  color: ${colors.small};\n`;\n\nconst Capitalize = styled.span`\n  text-transform: capitalize;\n`;\n\nconst Quantity = styled.div`\n  font-size: 0.9rem;\n  justify-self: end;\n`;\n\nconst Price = styled.div`\n  grid-column: -2;\n  font-weight: 600;\n`;\n\nconst Row = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  margin: 0.5rem 0;\n`;\n\nconst Total = styled.div`\n  margin: 1.5rem 0;\n`;\n\nconst TotalLabel = styled.div`\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.accent};\n`;\n\nconst TotalPrice = styled.div`\n  font-weight: 600;\n  font-size: 1.125rem;\n`;\n\nconst GoBack = styled.div`\n  &:hover {\n    color: ${colors.white};\n  }\n`;\n\nfunction Order() {\n  const [cart, setCart] = useState([]);\n  const { getCart } = useCart();\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    (async () => {\n      if (!currentUser) return;\n      const cart = await getCart(currentUser.uid);\n      setCart(cart);\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <Heading>Order Summary</Heading>\n      <Cart>\n        <ul>\n          {cart.map((item) => {\n            return (\n              <Item key={item.id}>\n                <div>\n                  <Name>{item.name}</Name>\n                  <Type>\n                    {item.type} in\n                    {item.color.description}\n                  </Type>\n                  {item.options.map((option) => {\n                    return (\n                      <div option={option} key={Object.keys(option)[0]}>\n                        <Capitalize>{Object.keys(option)[0]}</Capitalize> -\n{\" \"}\n                        {option[Object.keys(option)[0]].option}\n                      </div>\n                    );\n                  })}\n                </div>\n                <Quantity>{item.quantity}</Quantity>\n                <Price>£{item.price}</Price>\n              </Item>\n            );\n          })}\n        </ul>\n        <Row>\n          <div>Items</div>\n          <Price>£{cart.reduce((sum, item) => sum + +item.price, 0)}</Price>\n        </Row>\n        <Row>\n          <div>Shipping</div>\n          <Price>£0</Price>\n        </Row>\n        <Total>\n          <Row>\n            <TotalLabel>Total</TotalLabel>\n            <TotalPrice>\n              £{cart.reduce((sum, item) => sum + +item.price, 0)}\n            </TotalPrice>\n          </Row>\n        </Total>\n      </Cart>\n\n      <GoBack>\n        <Link to=\"/shop/cart\">← Edit your cart</Link>\n      </GoBack>\n    </Container>\n  );\n}\n\nexport default Order;\n","/home/aureen/the_odin_project/room_homepage/src/components/account/AccessSettings.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.jsx",["768","769","770","771","772","773"],"import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport useShop from \"../../../hooks/useShop\";\nimport { formatNavLink } from \"../../../utils/utils\";\n\n// Icons\nimport { ReactComponent as Hamburger } from \"../../../assets/icons/icon-hamburger.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 0%)\", // Black\n  secondary: \"hsl(0, 0%, 27%)\", // Grey,\n  tertiary: \"hsl(0, 0%, 100%)\", // White\n  background: \"hsl(0, 0%, 100%)\",\n};\n\nconst Icon = styled.button`\n  color: ${colors.secondary};\n  margin: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nconst Container = styled.nav`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: ${(props) => props.top}px;\n  height: calc(100% - ${(props) => props.top}px);\n  border-top: 1px solid ${colors.secondary};\n  background: ${colors.secondary};\n  font-size: 0.825rem;\n  font-family: \"Source Sans Pro\", sans-serif;\n  transition: all 0.15s linear;\n  transform: translateX(${(props) => (props.isNavOpen ? \"0\" : \"-100\")}%);\n\n  @media all and (max-width: 600px) {\n    width: ${(props) => (props.isDropdownOpen ? \"100vw\" : \"initial\")};\n    max-width: ${(props) => (props.isDropdownOpen ? \"100%\" : \"initial\")};\n  }\n\n  @media all and (max-width: 500px) {\n    height: 100%;\n  }\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n`;\n\nconst category = `\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 2rem calc(0.75rem - 2px) 2rem;\n  transition: all 0.3s ease;\n  width: 100%;\n  text-align: start;\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: '';\n    display: block;\n    width: 2px;\n    left: 1rem;\n    position: absolute;\n    background: #fff;\n    transition: height 0.3s ease 0s, top 0.3s ease 0s;\n  }\n`;\n\nconst Category = styled.div`\n  ${category}\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? \"0\" : \"3\")}%);\n  }\n\n  &:after {\n    height: ${(props) => (props.selected ? \"90%\" : \"0\")};\n    top: ${(props) => (props.selected ? \"5%\" : \"50%\")};\n  }\n`;\n\nconst CategoryLink = styled(Link)`\n  ${category}\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? \"0\" : \"3\")}%);\n  }\n\n  &:after {\n    height: ${(props) => (props.selected ? \"90%\" : \"0\")};\n    top: ${(props) => (props.selected ? \"5%\" : \"50%\")};\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  background: ${colors.tertiary};\n  width: 100%;\n  box-shadow: 0 5px 5px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-flow: row;\n  grid-gap: 3rem 1rem;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n\n  @media all and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Subcategory = styled(Link)`\n  position: relative;\n  display: block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  transition: all 0.15s ease;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Item = styled(Link)`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n  transition: all 0.15s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n`;\n\nconst SeeAll = styled.div`\n  grid-column: 1 / -1;\n  justify-self: center;\n`;\n\nfunction SideNav({ nav }) {\n  const { getShopCategories } = useShop();\n  const [categories, setCategories] = useState({});\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [activeCategory, setActiveCategory] = useState(\"\");\n  const [height, setHeight] = useState(0);\n  const ref = useRef();\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setHeight(nav.current.offsetHeight);\n  }, []);\n\n  useEffect(() => {\n    if (!isNavOpen) return;\n    const closeNavListener = (e) => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        setIsNavOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", closeNavListener);\n    return () => {\n      document.removeEventListener(\"click\", closeNavListener);\n    };\n  }, [isNavOpen, ref]);\n\n  return (\n    <>\n      <Icon\n        onClick={() => {\n          setIsNavOpen(!isNavOpen);\n          isNavOpen && setIsDropdownOpen(false);\n        }}\n      >\n        <Hamburger />\n      </Icon>\n\n      <Container\n        ref={ref}\n        top={height}\n        isNavOpen={isNavOpen}\n        isDropdownOpen={isDropdownOpen}\n      >\n        <Nav>\n          {/* Sort the categories by order before displaying them */}\n          {Object.keys(categories).length !== 0 &&\n            Object.keys(categories)\n              .sort((a, b) => categories[a].order - categories[b].order)\n              .map((category) => {\n                if (Object.keys(categories[category].categories).length === 0) {\n                  return (\n                    <CategoryLink\n                      key={category}\n                      selected={activeCategory === category}\n                      to={`/shop/${encodeURIComponent(category)}`}\n                      onClick={() => {\n                        setIsDropdownOpen(false);\n                        setIsNavOpen(false);\n                        setActiveCategory(category);\n                      }}\n                    >\n                      {formatNavLink(category)}\n                    </CategoryLink>\n                  );\n                }\n                return (\n                  <Category\n                    key={category}\n                    selected={activeCategory === category}\n                    onClick={() => {\n                      setIsDropdownOpen(true);\n                      setActiveCategory(category);\n                    }}\n                  >\n                    {formatNavLink(category)}\n                  </Category>\n                );\n              })}\n        </Nav>\n\n        {isDropdownOpen &&\n          Object.keys(categories[activeCategory].categories).length !== 0 &&\n          isNavOpen && (\n            <DropdownContainer>\n              <Dropdown>\n                {/* Sort the subcategories by order before displaying them */}\n                {Object.keys(categories[activeCategory].categories)\n                  .sort(\n                    (a, b) =>\n                      categories[activeCategory].categories[a].order -\n                      categories[activeCategory].categories[b].order\n                  )\n                  .map((subcategory) => {\n                    return (\n                      <Column key={subcategory}>\n                        <Subcategory\n                          to={`/shop/${encodeURIComponent(subcategory)}`}\n                          onClick={() => {\n                            setIsDropdownOpen(false);\n                            setIsNavOpen(false);\n                          }}\n                        >\n                          {formatNavLink(subcategory)}\n                        </Subcategory>\n                        <div>\n                          {categories[activeCategory].categories[\n                            subcategory\n                          ].categories.map((item) => {\n                            return (\n                              <Item\n                                key={item}\n                                to={`/shop/${encodeURIComponent(item)}`}\n                                onClick={() => {\n                                  setIsDropdownOpen(false);\n                                  setIsNavOpen(false);\n                                }}\n                              >\n                                {formatNavLink(item)}\n                              </Item>\n                            );\n                          })}\n                        </div>\n                      </Column>\n                    );\n                  })}\n                <SeeAll>\n                  <Item\n                    to={`/shop/${encodeURIComponent(activeCategory)}`}\n                    onClick={() => {\n                      setIsDropdownOpen(false);\n                      setIsNavOpen(false);\n                    }}\n                  >\n                    See all {formatNavLink(activeCategory)}\n                  </Item>\n                </SeeAll>\n              </Dropdown>\n            </DropdownContainer>\n          )}\n      </Container>\n    </>\n  );\n}\n\nSideNav.propTypes = {\n  nav: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element)}),\n  ]).isRequired,\n};\n\nexport default SideNav;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/display/ImageMagnifier.jsx",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.jsx",["774","775","776","777","778","779","780","781","782","783"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport useCart from \"../../../hooks/useCart\";\n\n// Icon\nimport { ReactComponent as Delete } from \"../../../assets/icons/icon-x-med.svg\";\n\n// Styled Components\nconst colors = {\n  primary: \"hsl(0, 0%, 45%)\", // Grey\n  secondary: \"hsl(0, 0%, 15%)\", // Dark Grey\n  tertiary: \"hsl(0, 0%, 55%)\", // Bright Grey\n  border: \"hsl(0, 0%, 90%)\",\n};\n\nconst Item = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  align-items: center;\n  justify-items: center;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst Information = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 1.125rem;\n  padding: 1rem 0;\n  width: 15rem;\n\n  @media all and (min-width: 576px) {\n    width: 20rem;\n  }\n`;\n\nconst Image = styled.img`\n  width: 7rem;\n  height: 7rem;\n  margin-right: 1rem;\n  object-fit: cover;\n\n  @media all and (min-width: 576px) {\n    width: 10rem;\n    height: 10rem;\n  }\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\nconst Type = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Option = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n`;\n\nconst Capitalize = styled.span`\n  text-transform: capitalize;\n`;\n\nconst Quantity = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media all and (min-width: 600px) {\n    flex-direction: row;\n  }\n`;\n\nconst QuantityInput = styled.input`\n  font-family: \"Source Sans Pro\", sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  font-size: 1.25rem;\n  color: ${colors.primary};\n  cursor: pointer;\n\n  &:hover {\n    color: initial;\n  }\n`;\nfunction CartItem({ item }) {\n  const [quantity, setQuantity] = useState(item.quantity);\n  const { currentUser } = useAuth();\n  const { deleteFromCart, updateCartQuantity } = useCart();\n\n  useEffect(() => {\n    updateCartQuantity(currentUser.uid, item.id, quantity);\n  }, [quantity]);\n\n  return (\n    <Item>\n      <Information>\n        <Image src={item.image} alt=\"Item preview\" />\n        <div>\n          <Name>\n            <Link to={`/shop/item/${item.id}`}>{item.name}</Link>\n          </Name>\n          <Type>\n            {item.type} -{item.color.description}\n          </Type>\n          <div>\n            {item.options.map((option) => {\n              return (\n                <Option option={option} key={Object.keys(option)[0]}>\n                  <Capitalize>{Object.keys(option)[0]}</Capitalize> -{\" \"}\n                  {option[Object.keys(option)[0]].option}\n                </Option>\n              );\n            })}\n          </div>\n          <Price>£{item.price}</Price>\n        </div>\n      </Information>\n\n      <Quantity>\n        <Button\n          onClick={() => setQuantity((prev) => (+prev < 2 ? \"1\" : prev - 1))}\n        >\n          -\n        </Button>\n        <QuantityInput\n          value={quantity}\n          onChange={(e) => {\n            let quantity = e.target.value.replace(/[^0-9]/g, \"\");\n            if (+quantity < 1 || !quantity) quantity = \"1\";\n            setQuantity(quantity);\n          }}\n        />\n        <Button onClick={() => setQuantity((prev) => +prev + 1)}>+</Button>\n      </Quantity>\n      <Price>£{item.price * quantity}</Price>\n      <Button onClick={() => deleteFromCart(currentUser.uid, item.id)}>\n        <Delete />\n      </Button>\n    </Item>\n  );\n}\n\nCartItem.propTypes = {\n  item: PropTypes.shape({\n    price: PropTypes.number,\n    id: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    quantity: PropTypes.number,\n    image: PropTypes.string,\n    color: PropTypes.shape({\n      description: PropTypes.string,\n    }),\n    options: PropTypes.object,\n  }).isRequired,\n};\n\nexport default CartItem;\n",{"ruleId":"784","replacedBy":"785"},{"ruleId":"786","replacedBy":"787"},{"ruleId":"788","replacedBy":"789"},{"ruleId":"790","replacedBy":"791"},{"ruleId":"792","replacedBy":"793"},{"ruleId":"794","severity":2,"message":"795","line":1,"column":1,"nodeType":"796","endLine":11,"endColumn":3},{"ruleId":"797","severity":2,"message":"798","line":5,"column":23,"nodeType":null,"endLine":5,"endColumn":26,"fix":"799"},{"ruleId":"800","severity":2,"message":"801","line":8,"column":16,"nodeType":"802","messageId":"803","endLine":8,"endColumn":26},{"ruleId":"797","severity":2,"message":"804","line":14,"column":9,"nodeType":null,"endLine":14,"endColumn":20,"fix":"805"},{"ruleId":"806","severity":2,"message":"807","line":16,"column":10,"nodeType":"808","messageId":"809","endLine":18,"endColumn":4,"fix":"810"},{"ruleId":"797","severity":2,"message":"811","line":17,"column":16,"nodeType":null,"endLine":17,"endColumn":16,"fix":"812"},{"ruleId":"813","severity":2,"message":"814","line":39,"column":7,"nodeType":"815","messageId":"816","endLine":39,"endColumn":69},{"ruleId":"813","severity":2,"message":"814","line":20,"column":5,"nodeType":"815","messageId":"816","endLine":22,"endColumn":34},{"ruleId":"817","severity":2,"message":"818","line":111,"column":34,"nodeType":"802","messageId":"819","endLine":111,"endColumn":38},{"ruleId":"817","severity":2,"message":"818","line":114,"column":8,"nodeType":"802","messageId":"819","endLine":114,"endColumn":12},{"ruleId":"820","severity":2,"message":"821","line":42,"column":5,"nodeType":"822","messageId":"823","endLine":57,"endColumn":10},{"ruleId":"824","severity":2,"message":"825","line":87,"column":5,"nodeType":"826","messageId":"827","endLine":89,"endColumn":6},{"ruleId":"817","severity":2,"message":"828","line":31,"column":5,"nodeType":"802","messageId":"819","endLine":31,"endColumn":14},{"ruleId":"817","severity":2,"message":"829","line":32,"column":5,"nodeType":"802","messageId":"819","endLine":32,"endColumn":13},{"ruleId":"817","severity":2,"message":"830","line":33,"column":5,"nodeType":"802","messageId":"819","endLine":33,"endColumn":12},{"ruleId":"817","severity":2,"message":"831","line":34,"column":5,"nodeType":"802","messageId":"819","endLine":34,"endColumn":12},{"ruleId":"817","severity":2,"message":"832","line":35,"column":5,"nodeType":"802","messageId":"819","endLine":35,"endColumn":9},{"ruleId":"817","severity":2,"message":"833","line":36,"column":5,"nodeType":"802","messageId":"819","endLine":36,"endColumn":12},{"ruleId":"817","severity":2,"message":"834","line":37,"column":5,"nodeType":"802","messageId":"819","endLine":37,"endColumn":10},{"ruleId":"817","severity":2,"message":"835","line":38,"column":5,"nodeType":"802","messageId":"819","endLine":38,"endColumn":10},{"ruleId":"817","severity":2,"message":"830","line":93,"column":31,"nodeType":"802","messageId":"819","endLine":93,"endColumn":38},{"ruleId":"817","severity":2,"message":"828","line":108,"column":5,"nodeType":"802","messageId":"819","endLine":108,"endColumn":14},{"ruleId":"817","severity":2,"message":"829","line":109,"column":5,"nodeType":"802","messageId":"819","endLine":109,"endColumn":13},{"ruleId":"817","severity":2,"message":"830","line":110,"column":5,"nodeType":"802","messageId":"819","endLine":110,"endColumn":12},{"ruleId":"817","severity":2,"message":"831","line":111,"column":5,"nodeType":"802","messageId":"819","endLine":111,"endColumn":12},{"ruleId":"817","severity":2,"message":"832","line":112,"column":5,"nodeType":"802","messageId":"819","endLine":112,"endColumn":9},{"ruleId":"817","severity":2,"message":"833","line":113,"column":5,"nodeType":"802","messageId":"819","endLine":113,"endColumn":12},{"ruleId":"817","severity":2,"message":"834","line":114,"column":5,"nodeType":"802","messageId":"819","endLine":114,"endColumn":10},{"ruleId":"817","severity":2,"message":"835","line":115,"column":5,"nodeType":"802","messageId":"819","endLine":115,"endColumn":10},{"ruleId":"797","severity":2,"message":"836","line":155,"column":1,"nodeType":null,"endLine":156,"endColumn":1,"fix":"837"},{"ruleId":"817","severity":2,"message":"830","line":174,"column":24,"nodeType":"802","messageId":"819","endLine":174,"endColumn":31},{"ruleId":"817","severity":2,"message":"838","line":21,"column":34,"nodeType":"802","messageId":"819","endLine":21,"endColumn":38},{"ruleId":"817","severity":2,"message":"839","line":21,"column":40,"nodeType":"802","messageId":"819","endLine":21,"endColumn":46},{"ruleId":"817","severity":2,"message":"840","line":21,"column":48,"nodeType":"802","messageId":"819","endLine":21,"endColumn":52},{"ruleId":"817","severity":2,"message":"841","line":21,"column":54,"nodeType":"802","messageId":"819","endLine":21,"endColumn":57},{"ruleId":"800","severity":2,"message":"842","line":89,"column":13,"nodeType":"802","messageId":"803","endLine":89,"endColumn":21},{"ruleId":"817","severity":2,"message":"838","line":96,"column":33,"nodeType":"802","messageId":"819","endLine":96,"endColumn":37},{"ruleId":"817","severity":2,"message":"839","line":96,"column":39,"nodeType":"802","messageId":"819","endLine":96,"endColumn":45},{"ruleId":"817","severity":2,"message":"840","line":96,"column":47,"nodeType":"802","messageId":"819","endLine":96,"endColumn":51},{"ruleId":"817","severity":2,"message":"841","line":96,"column":53,"nodeType":"802","messageId":"819","endLine":96,"endColumn":56},{"ruleId":"817","severity":2,"message":"843","line":38,"column":15,"nodeType":"802","messageId":"819","endLine":38,"endColumn":21},{"ruleId":"817","severity":2,"message":"843","line":47,"column":15,"nodeType":"802","messageId":"819","endLine":47,"endColumn":21},{"ruleId":"817","severity":2,"message":"844","line":60,"column":11,"nodeType":"802","messageId":"819","endLine":60,"endColumn":23},{"ruleId":"813","severity":2,"message":"814","line":62,"column":7,"nodeType":"815","messageId":"816","endLine":64,"endColumn":61},{"ruleId":"797","severity":2,"message":"845","line":74,"column":3,"nodeType":null,"endLine":74,"endColumn":3,"fix":"846"},{"ruleId":"817","severity":2,"message":"847","line":49,"column":11,"nodeType":"802","messageId":"819","endLine":49,"endColumn":20},{"ruleId":"817","severity":2,"message":"847","line":62,"column":15,"nodeType":"802","messageId":"819","endLine":62,"endColumn":24},{"ruleId":"824","severity":2,"message":"825","line":64,"column":9,"nodeType":"826","messageId":"827","endLine":66,"endColumn":10},{"ruleId":"820","severity":2,"message":"848","line":69,"column":5,"nodeType":"822","messageId":"823","endLine":69,"endColumn":24},{"ruleId":"849","severity":2,"message":"850","line":208,"column":22,"nodeType":"851"},{"ruleId":"852","severity":2,"message":"853","line":19,"column":18,"nodeType":"851","endLine":19,"endColumn":35},{"ruleId":"854","severity":2,"message":"853","line":19,"column":18,"nodeType":"851","endLine":19,"endColumn":35},{"ruleId":"855","severity":2,"message":"856","line":69,"column":60,"nodeType":"857","endLine":69,"endColumn":70},{"ruleId":"817","severity":2,"message":"858","line":281,"column":13,"nodeType":"802","messageId":"819","endLine":281,"endColumn":17},{"ruleId":"817","severity":2,"message":"858","line":289,"column":13,"nodeType":"802","messageId":"819","endLine":289,"endColumn":17},{"ruleId":"820","severity":2,"message":"848","line":292,"column":5,"nodeType":"822","messageId":"823","endLine":292,"endColumn":24},{"ruleId":"817","severity":2,"message":"858","line":296,"column":23,"nodeType":"802","messageId":"819","endLine":296,"endColumn":27},{"ruleId":"817","severity":2,"message":"858","line":348,"column":22,"nodeType":"802","messageId":"819","endLine":348,"endColumn":26},{"ruleId":"817","severity":2,"message":"859","line":348,"column":28,"nodeType":"802","messageId":"819","endLine":348,"endColumn":39},{"ruleId":"849","severity":2,"message":"850","line":404,"column":29,"nodeType":"851"},{"ruleId":"824","severity":2,"message":"825","line":84,"column":7,"nodeType":"826","messageId":"827","endLine":87,"endColumn":8},{"ruleId":"860","severity":2,"message":"861","line":85,"column":22,"nodeType":"862","messageId":"863","endLine":85,"endColumn":45},{"ruleId":"849","severity":2,"message":"850","line":100,"column":38,"nodeType":"851"},{"ruleId":"864","severity":2,"message":"865","line":64,"column":18,"nodeType":"866","endLine":64,"endColumn":26},{"ruleId":"813","severity":2,"message":"814","line":69,"column":5,"nodeType":"815","messageId":"816","endLine":71,"endColumn":28},{"ruleId":"864","severity":2,"message":"867","line":69,"column":14,"nodeType":"802","endLine":69,"endColumn":19},{"ruleId":"864","severity":2,"message":"867","line":69,"column":32,"nodeType":"802","endLine":69,"endColumn":37},{"ruleId":"864","severity":2,"message":"868","line":69,"column":38,"nodeType":"802","endLine":69,"endColumn":46},{"ruleId":"817","severity":2,"message":"869","line":162,"column":15,"nodeType":"802","messageId":"819","endLine":162,"endColumn":21},{"ruleId":"817","severity":2,"message":"869","line":171,"column":15,"nodeType":"802","messageId":"819","endLine":171,"endColumn":21},{"ruleId":"870","severity":2,"message":"871","line":198,"column":34,"nodeType":"802","endLine":198,"endColumn":39},{"ruleId":"864","severity":2,"message":"872","line":6,"column":24,"nodeType":"866","endLine":6,"endColumn":44},{"ruleId":"855","severity":2,"message":"856","line":11,"column":7,"nodeType":"857","endLine":11,"endColumn":16},{"ruleId":"855","severity":2,"message":"856","line":16,"column":22,"nodeType":"857","endLine":16,"endColumn":32},{"ruleId":"864","severity":2,"message":"872","line":6,"column":25,"nodeType":"866","endLine":6,"endColumn":45},{"ruleId":"855","severity":2,"message":"856","line":11,"column":7,"nodeType":"857","endLine":11,"endColumn":16},{"ruleId":"855","severity":2,"message":"856","line":14,"column":22,"nodeType":"857","endLine":14,"endColumn":32},{"ruleId":"817","severity":2,"message":"873","line":110,"column":11,"nodeType":"802","messageId":"819","endLine":110,"endColumn":16},{"ruleId":"813","severity":2,"message":"814","line":111,"column":5,"nodeType":"815","messageId":"816","endLine":113,"endColumn":60},{"ruleId":"864","severity":2,"message":"874","line":59,"column":21,"nodeType":"866","endLine":59,"endColumn":26},{"ruleId":"864","severity":2,"message":"875","line":83,"column":34,"nodeType":"802","endLine":83,"endColumn":40},{"ruleId":"864","severity":2,"message":"876","line":83,"column":41,"nodeType":"802","endLine":83,"endColumn":49},{"ruleId":"817","severity":2,"message":"877","line":92,"column":17,"nodeType":"802","messageId":"819","endLine":92,"endColumn":24},{"ruleId":"817","severity":2,"message":"878","line":98,"column":23,"nodeType":"802","messageId":"819","endLine":98,"endColumn":27},{"ruleId":"817","severity":2,"message":"879","line":104,"column":9,"nodeType":"802","messageId":"819","endLine":104,"endColumn":23},{"ruleId":"817","severity":2,"message":"880","line":104,"column":13,"nodeType":"802","messageId":"819","endLine":104,"endColumn":20},{"ruleId":"849","severity":2,"message":"850","line":116,"column":58,"nodeType":"851"},{"ruleId":"849","severity":2,"message":"850","line":118,"column":72,"nodeType":"851"},{"ruleId":"849","severity":2,"message":"850","line":133,"column":19,"nodeType":"851"},{"ruleId":"864","severity":2,"message":"874","line":316,"column":24,"nodeType":"866","endLine":316,"endColumn":29},{"ruleId":"813","severity":2,"message":"814","line":344,"column":5,"nodeType":"815","messageId":"816","endLine":346,"endColumn":33},{"ruleId":"864","severity":2,"message":"881","line":352,"column":15,"nodeType":"866","endLine":352,"endColumn":21},{"ruleId":"864","severity":2,"message":"875","line":352,"column":32,"nodeType":"802","endLine":352,"endColumn":38},{"ruleId":"817","severity":2,"message":"882","line":353,"column":13,"nodeType":"802","messageId":"819","endLine":353,"endColumn":17},{"ruleId":"824","severity":2,"message":"825","line":368,"column":7,"nodeType":"826","messageId":"827","endLine":370,"endColumn":8},{"ruleId":"817","severity":2,"message":"883","line":411,"column":14,"nodeType":"802","messageId":"819","endLine":411,"endColumn":15},{"ruleId":"817","severity":2,"message":"884","line":422,"column":13,"nodeType":"802","messageId":"819","endLine":422,"endColumn":28},{"ruleId":"885","severity":2,"message":"886","line":472,"column":22,"nodeType":"851","endLine":472,"endColumn":23,"fix":"887"},{"ruleId":"885","severity":2,"message":"888","line":472,"column":23,"nodeType":"889","endLine":472,"endColumn":37,"fix":"890"},{"ruleId":"870","severity":2,"message":"871","line":475,"column":34,"nodeType":"891","endLine":475,"endColumn":55},{"ruleId":"885","severity":2,"message":"892","line":482,"column":28,"nodeType":"889","endLine":482,"endColumn":54,"fix":"893"},{"ruleId":"885","severity":2,"message":"894","line":511,"column":36,"nodeType":"889","endLine":511,"endColumn":44,"fix":"895"},{"ruleId":"885","severity":2,"message":"896","line":511,"column":44,"nodeType":"851","endLine":511,"endColumn":46,"fix":"897"},{"ruleId":"898","severity":2,"message":"899","line":540,"column":35,"nodeType":"900","messageId":"901","endLine":540,"endColumn":36,"fix":"902"},{"ruleId":"817","severity":2,"message":"903","line":561,"column":31,"nodeType":"802","messageId":"819","endLine":561,"endColumn":39},{"ruleId":"885","severity":2,"message":"904","line":603,"column":48,"nodeType":"889","endLine":603,"endColumn":59,"fix":"905"},{"ruleId":"885","severity":2,"message":"896","line":603,"column":59,"nodeType":"851","endLine":603,"endColumn":61,"fix":"906"},{"ruleId":"885","severity":2,"message":"907","line":621,"column":50,"nodeType":"889","endLine":621,"endColumn":56,"fix":"908"},{"ruleId":"885","severity":2,"message":"896","line":621,"column":56,"nodeType":"851","endLine":621,"endColumn":58,"fix":"909"},{"ruleId":"864","severity":2,"message":"874","line":123,"column":19,"nodeType":"866","endLine":123,"endColumn":24},{"ruleId":"817","severity":2,"message":"910","line":132,"column":13,"nodeType":"802","messageId":"819","endLine":132,"endColumn":19},{"ruleId":"864","severity":2,"message":"875","line":132,"column":44,"nodeType":"802","endLine":132,"endColumn":50},{"ruleId":"864","severity":2,"message":"911","line":132,"column":51,"nodeType":"802","endLine":132,"endColumn":53},{"ruleId":"817","severity":2,"message":"912","line":135,"column":13,"nodeType":"802","messageId":"819","endLine":135,"endColumn":18},{"ruleId":"824","severity":2,"message":"825","line":136,"column":7,"nodeType":"826","messageId":"827","endLine":139,"endColumn":8},{"ruleId":"860","severity":2,"message":"861","line":137,"column":22,"nodeType":"862","messageId":"863","endLine":137,"endColumn":43},{"ruleId":"913","severity":2,"message":"914","line":157,"column":24,"nodeType":"915","endLine":157,"endColumn":42},{"ruleId":"913","severity":2,"message":"914","line":165,"column":17,"nodeType":"915","endLine":172,"endColumn":19},{"ruleId":"817","severity":2,"message":"877","line":89,"column":17,"nodeType":"802","messageId":"819","endLine":89,"endColumn":24},{"ruleId":"817","severity":2,"message":"878","line":95,"column":23,"nodeType":"802","messageId":"819","endLine":95,"endColumn":27},{"ruleId":"817","severity":2,"message":"879","line":101,"column":9,"nodeType":"802","messageId":"819","endLine":101,"endColumn":23},{"ruleId":"864","severity":2,"message":"865","line":188,"column":20,"nodeType":"866","endLine":188,"endColumn":28},{"ruleId":"817","severity":2,"message":"916","line":212,"column":13,"nodeType":"802","messageId":"819","endLine":212,"endColumn":18},{"ruleId":"864","severity":2,"message":"867","line":225,"column":16,"nodeType":"802","endLine":225,"endColumn":21},{"ruleId":"864","severity":2,"message":"917","line":225,"column":22,"nodeType":"802","endLine":225,"endColumn":30},{"ruleId":"864","severity":2,"message":"867","line":250,"column":17,"nodeType":"802","endLine":250,"endColumn":22},{"ruleId":"864","severity":2,"message":"867","line":260,"column":31,"nodeType":"802","endLine":260,"endColumn":36},{"ruleId":"864","severity":2,"message":"917","line":260,"column":37,"nodeType":"802","endLine":260,"endColumn":45},{"ruleId":"864","severity":2,"message":"918","line":260,"column":46,"nodeType":"802","endLine":260,"endColumn":55},{"ruleId":"797","severity":2,"message":"836","line":260,"column":56,"nodeType":null,"endLine":261,"endColumn":1,"fix":"919"},{"ruleId":"920","severity":2,"message":"921","line":261,"column":1,"nodeType":"889","endLine":261,"endColumn":6,"fix":"922"},{"ruleId":"864","severity":2,"message":"867","line":262,"column":31,"nodeType":"802","endLine":262,"endColumn":36},{"ruleId":"864","severity":2,"message":"917","line":262,"column":37,"nodeType":"802","endLine":262,"endColumn":45},{"ruleId":"864","severity":2,"message":"923","line":262,"column":46,"nodeType":"802","endLine":262,"endColumn":54},{"ruleId":"864","severity":2,"message":"867","line":264,"column":34,"nodeType":"802","endLine":264,"endColumn":39},{"ruleId":"864","severity":2,"message":"917","line":264,"column":40,"nodeType":"802","endLine":264,"endColumn":48},{"ruleId":"864","severity":2,"message":"924","line":264,"column":49,"nodeType":"802","endLine":264,"endColumn":56},{"ruleId":"864","severity":2,"message":"867","line":266,"column":31,"nodeType":"802","endLine":266,"endColumn":36},{"ruleId":"864","severity":2,"message":"917","line":266,"column":37,"nodeType":"802","endLine":266,"endColumn":45},{"ruleId":"864","severity":2,"message":"925","line":266,"column":46,"nodeType":"802","endLine":266,"endColumn":53},{"ruleId":"797","severity":2,"message":"836","line":266,"column":54,"nodeType":null,"endLine":267,"endColumn":1,"fix":"926"},{"ruleId":"920","severity":2,"message":"921","line":267,"column":1,"nodeType":"889","endLine":267,"endColumn":6,"fix":"927"},{"ruleId":"864","severity":2,"message":"867","line":268,"column":31,"nodeType":"802","endLine":268,"endColumn":36},{"ruleId":"864","severity":2,"message":"917","line":268,"column":37,"nodeType":"802","endLine":268,"endColumn":45},{"ruleId":"864","severity":2,"message":"928","line":268,"column":46,"nodeType":"802","endLine":268,"endColumn":50},{"ruleId":"864","severity":2,"message":"867","line":270,"column":34,"nodeType":"802","endLine":270,"endColumn":39},{"ruleId":"864","severity":2,"message":"917","line":270,"column":40,"nodeType":"802","endLine":270,"endColumn":48},{"ruleId":"864","severity":2,"message":"929","line":270,"column":49,"nodeType":"802","endLine":270,"endColumn":56},{"ruleId":"797","severity":2,"message":"930","line":285,"column":59,"nodeType":null,"endLine":287,"endColumn":1,"fix":"931"},{"ruleId":"920","severity":2,"message":"932","line":286,"column":1,"nodeType":"889","endLine":286,"endColumn":6,"fix":"933"},{"ruleId":"920","severity":2,"message":"932","line":286,"column":6,"nodeType":"851","endLine":287,"endColumn":2,"fix":"934"},{"ruleId":"885","severity":2,"message":"935","line":287,"column":2,"nodeType":"889","endLine":287,"endColumn":7,"fix":"936"},{"ruleId":"864","severity":2,"message":"867","line":296,"column":44,"nodeType":"802","endLine":296,"endColumn":49},{"ruleId":"864","severity":2,"message":"917","line":296,"column":50,"nodeType":"802","endLine":296,"endColumn":58},{"ruleId":"817","severity":2,"message":"937","line":346,"column":33,"nodeType":"802","messageId":"819","endLine":346,"endColumn":39},{"ruleId":"817","severity":2,"message":"938","line":371,"column":33,"nodeType":"802","messageId":"819","endLine":371,"endColumn":36},{"ruleId":"864","severity":2,"message":"865","line":156,"column":21,"nodeType":"866","endLine":156,"endColumn":29},{"ruleId":"817","severity":2,"message":"939","line":194,"column":13,"nodeType":"802","messageId":"819","endLine":194,"endColumn":22},{"ruleId":"864","severity":2,"message":"867","line":228,"column":17,"nodeType":"802","endLine":228,"endColumn":22},{"ruleId":"817","severity":2,"message":"940","line":238,"column":37,"nodeType":"802","messageId":"819","endLine":238,"endColumn":44},{"ruleId":"885","severity":2,"message":"941","line":242,"column":49,"nodeType":"889","endLine":242,"endColumn":67,"fix":"942"},{"ruleId":"885","severity":2,"message":"943","line":246,"column":47,"nodeType":"889","endLine":246,"endColumn":61,"fix":"944"},{"ruleId":"864","severity":2,"message":"874","line":106,"column":25,"nodeType":"866","endLine":106,"endColumn":30},{"ruleId":"864","severity":2,"message":"865","line":106,"column":32,"nodeType":"866","endLine":106,"endColumn":40},{"ruleId":"945","severity":2,"message":"946","line":106,"column":32,"nodeType":"802","messageId":"947","endLine":106,"endColumn":40},{"ruleId":"817","severity":2,"message":"948","line":113,"column":13,"nodeType":"802","messageId":"819","endLine":113,"endColumn":18},{"ruleId":"864","severity":2,"message":"875","line":113,"column":42,"nodeType":"802","endLine":113,"endColumn":48},{"ruleId":"864","severity":2,"message":"911","line":113,"column":49,"nodeType":"802","endLine":113,"endColumn":51},{"ruleId":"885","severity":2,"message":"949","line":134,"column":44,"nodeType":"889","endLine":134,"endColumn":69,"fix":"950"},{"ruleId":"885","severity":2,"message":"951","line":138,"column":42,"nodeType":"889","endLine":138,"endColumn":63,"fix":"952"},{"ruleId":"864","severity":2,"message":"875","line":150,"column":30,"nodeType":"802","endLine":150,"endColumn":36},{"ruleId":"864","severity":2,"message":"911","line":150,"column":37,"nodeType":"802","endLine":150,"endColumn":39},{"ruleId":"797","severity":2,"message":"930","line":150,"column":49,"nodeType":null,"endLine":152,"endColumn":1,"fix":"953"},{"ruleId":"920","severity":2,"message":"954","line":151,"column":1,"nodeType":"889","endLine":151,"endColumn":6,"fix":"955"},{"ruleId":"920","severity":2,"message":"954","line":151,"column":6,"nodeType":"851","endLine":154,"endColumn":1,"fix":"956"},{"ruleId":"920","severity":2,"message":"957","line":151,"column":6,"nodeType":"851","endLine":154,"endColumn":1,"fix":"958"},{"ruleId":"797","severity":2,"message":"959","line":154,"column":1,"nodeType":null,"endLine":154,"endColumn":1,"fix":"960"},{"ruleId":"961","severity":2,"message":"962","line":154,"column":1,"nodeType":"963","endLine":154,"endColumn":5,"fix":"964"},{"ruleId":"920","severity":2,"message":"965","line":154,"column":1,"nodeType":"963","endLine":154,"endColumn":5,"fix":"966"},{"ruleId":"849","severity":2,"message":"850","line":157,"column":40,"nodeType":"851"},{"ruleId":"885","severity":2,"message":"935","line":157,"column":67,"nodeType":"889","endLine":157,"endColumn":72,"fix":"967"},{"ruleId":"885","severity":2,"message":"935","line":161,"column":62,"nodeType":"889","endLine":161,"endColumn":67,"fix":"968"},{"ruleId":"817","severity":2,"message":"969","line":26,"column":13,"nodeType":"802","messageId":"819","endLine":26,"endColumn":19},{"ruleId":"945","severity":2,"message":"970","line":77,"column":17,"nodeType":"802","messageId":"947","endLine":77,"endColumn":25},{"ruleId":"817","severity":2,"message":"971","line":242,"column":13,"nodeType":"802","messageId":"819","endLine":242,"endColumn":22},{"ruleId":"813","severity":2,"message":"814","line":246,"column":7,"nodeType":"815","messageId":"816","endLine":246,"endColumn":57},{"ruleId":"817","severity":2,"message":"971","line":252,"column":13,"nodeType":"802","messageId":"819","endLine":252,"endColumn":22},{"ruleId":"817","severity":2,"message":"972","line":270,"column":29,"nodeType":"802","messageId":"819","endLine":270,"endColumn":36},{"ruleId":"885","severity":2,"message":"941","line":275,"column":43,"nodeType":"889","endLine":275,"endColumn":61,"fix":"973"},{"ruleId":"885","severity":2,"message":"943","line":279,"column":41,"nodeType":"889","endLine":279,"endColumn":55,"fix":"974"},{"ruleId":"898","severity":2,"message":"899","line":290,"column":25,"nodeType":"900","messageId":"901","endLine":290,"endColumn":26,"fix":"975"},{"ruleId":"817","severity":2,"message":"976","line":221,"column":13,"nodeType":"802","messageId":"819","endLine":221,"endColumn":18},{"ruleId":"817","severity":2,"message":"976","line":229,"column":13,"nodeType":"802","messageId":"819","endLine":229,"endColumn":18},{"ruleId":"885","severity":2,"message":"977","line":252,"column":26,"nodeType":"889","endLine":252,"endColumn":49,"fix":"978"},{"ruleId":"797","severity":2,"message":"979","line":252,"column":49,"nodeType":null,"endLine":255,"endColumn":1,"fix":"980"},{"ruleId":"920","severity":2,"message":"981","line":253,"column":1,"nodeType":"889","endLine":253,"endColumn":6,"fix":"982"},{"ruleId":"920","severity":2,"message":"981","line":253,"column":6,"nodeType":"851","endLine":255,"endColumn":1,"fix":"983"},{"ruleId":"961","severity":2,"message":"962","line":255,"column":1,"nodeType":"963","endLine":255,"endColumn":7,"fix":"984"},{"ruleId":"920","severity":2,"message":"921","line":255,"column":1,"nodeType":"963","endLine":255,"endColumn":7,"fix":"985"},{"ruleId":"817","severity":2,"message":"986","line":307,"column":37,"nodeType":"802","messageId":"819","endLine":307,"endColumn":43},{"ruleId":"817","severity":2,"message":"987","line":335,"column":37,"nodeType":"802","messageId":"819","endLine":335,"endColumn":40},{"ruleId":"817","severity":2,"message":"986","line":389,"column":25,"nodeType":"802","messageId":"819","endLine":389,"endColumn":31},{"ruleId":"817","severity":2,"message":"987","line":415,"column":23,"nodeType":"802","messageId":"819","endLine":415,"endColumn":26},{"ruleId":"817","severity":2,"message":"988","line":108,"column":13,"nodeType":"802","messageId":"819","endLine":108,"endColumn":23},{"ruleId":"817","severity":2,"message":"989","line":125,"column":13,"nodeType":"802","messageId":"819","endLine":125,"endColumn":17},{"ruleId":"817","severity":2,"message":"989","line":133,"column":13,"nodeType":"802","messageId":"819","endLine":133,"endColumn":17},{"ruleId":"820","severity":2,"message":"848","line":136,"column":5,"nodeType":"822","messageId":"823","endLine":136,"endColumn":24},{"ruleId":"849","severity":2,"message":"850","line":106,"column":25,"nodeType":"851"},{"ruleId":"885","severity":2,"message":"935","line":177,"column":26,"nodeType":"889","endLine":177,"endColumn":31,"fix":"990"},{"ruleId":"885","severity":2,"message":"991","line":180,"column":66,"nodeType":"851","endLine":181,"endColumn":11,"fix":"992"},{"ruleId":"885","severity":2,"message":"991","line":184,"column":51,"nodeType":"851","endLine":185,"endColumn":11,"fix":"993"},{"ruleId":"864","severity":2,"message":"994","line":110,"column":19,"nodeType":"866","endLine":110,"endColumn":23},{"ruleId":"864","severity":2,"message":"995","line":110,"column":25,"nodeType":"866","endLine":110,"endColumn":33},{"ruleId":"813","severity":2,"message":"814","line":142,"column":11,"nodeType":"815","messageId":"816","endLine":142,"endColumn":77},{"ruleId":"849","severity":2,"message":"850","line":189,"column":42,"nodeType":"851"},{"ruleId":"885","severity":2,"message":"935","line":205,"column":33,"nodeType":"889","endLine":205,"endColumn":38,"fix":"996"},{"ruleId":"813","severity":2,"message":"814","line":93,"column":5,"nodeType":"815","messageId":"816","endLine":93,"endColumn":69},{"ruleId":"813","severity":2,"message":"814","line":103,"column":5,"nodeType":"815","messageId":"816","endLine":103,"endColumn":71},{"ruleId":"885","severity":2,"message":"886","line":123,"column":18,"nodeType":"851","endLine":123,"endColumn":19,"fix":"997"},{"ruleId":"885","severity":2,"message":"998","line":123,"column":19,"nodeType":"889","endLine":123,"endColumn":26,"fix":"999"},{"ruleId":"817","severity":2,"message":"1000","line":179,"column":10,"nodeType":"802","messageId":"819","endLine":179,"endColumn":16},{"ruleId":"824","severity":2,"message":"825","line":228,"column":5,"nodeType":"826","messageId":"827","endLine":231,"endColumn":6},{"ruleId":"860","severity":2,"message":"861","line":229,"column":24,"nodeType":"862","messageId":"863","endLine":229,"endColumn":60},{"ruleId":"824","severity":2,"message":"825","line":234,"column":5,"nodeType":"826","messageId":"827","endLine":237,"endColumn":6},{"ruleId":"860","severity":2,"message":"861","line":235,"column":29,"nodeType":"862","messageId":"863","endLine":235,"endColumn":71},{"ruleId":"824","severity":2,"message":"825","line":242,"column":5,"nodeType":"826","messageId":"827","endLine":246,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":257,"column":5,"nodeType":"826","messageId":"827","endLine":265,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":272,"column":5,"nodeType":"826","messageId":"827","endLine":274,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":278,"column":5,"nodeType":"826","messageId":"827","endLine":280,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":281,"column":5,"nodeType":"826","messageId":"827","endLine":283,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":284,"column":5,"nodeType":"826","messageId":"827","endLine":286,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":298,"column":5,"nodeType":"826","messageId":"827","endLine":307,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":299,"column":7,"nodeType":"826","messageId":"827","endLine":306,"endColumn":8},{"ruleId":"824","severity":2,"message":"825","line":325,"column":5,"nodeType":"826","messageId":"827","endLine":346,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":326,"column":7,"nodeType":"826","messageId":"827","endLine":345,"endColumn":8},{"ruleId":"817","severity":2,"message":"1001","line":369,"column":14,"nodeType":"802","messageId":"819","endLine":369,"endColumn":15},{"ruleId":"824","severity":2,"message":"825","line":381,"column":5,"nodeType":"826","messageId":"827","endLine":383,"endColumn":6},{"ruleId":"898","severity":2,"message":"899","line":442,"column":15,"nodeType":"900","messageId":"901","endLine":442,"endColumn":16,"fix":"1002"},{"ruleId":"898","severity":2,"message":"899","line":455,"column":15,"nodeType":"900","messageId":"901","endLine":455,"endColumn":16,"fix":"1003"},{"ruleId":"898","severity":2,"message":"899","line":468,"column":15,"nodeType":"900","messageId":"901","endLine":468,"endColumn":16,"fix":"1004"},{"ruleId":"885","severity":2,"message":"1005","line":490,"column":32,"nodeType":"889","endLine":490,"endColumn":43,"fix":"1006"},{"ruleId":"817","severity":2,"message":"1007","line":500,"column":33,"nodeType":"802","messageId":"819","endLine":500,"endColumn":42},{"ruleId":"898","severity":2,"message":"899","line":504,"column":23,"nodeType":"900","messageId":"901","endLine":504,"endColumn":24,"fix":"1008"},{"ruleId":"817","severity":2,"message":"1007","line":512,"column":31,"nodeType":"802","messageId":"819","endLine":512,"endColumn":40},{"ruleId":"898","severity":2,"message":"899","line":516,"column":21,"nodeType":"900","messageId":"901","endLine":516,"endColumn":22,"fix":"1009"},{"ruleId":"817","severity":2,"message":"1010","line":538,"column":29,"nodeType":"802","messageId":"819","endLine":538,"endColumn":40},{"ruleId":"885","severity":2,"message":"1005","line":542,"column":29,"nodeType":"889","endLine":542,"endColumn":40,"fix":"1011"},{"ruleId":"817","severity":2,"message":"1012","line":555,"column":31,"nodeType":"802","messageId":"819","endLine":555,"endColumn":42},{"ruleId":"898","severity":2,"message":"899","line":559,"column":21,"nodeType":"900","messageId":"901","endLine":559,"endColumn":22,"fix":"1013"},{"ruleId":"817","severity":2,"message":"1012","line":566,"column":31,"nodeType":"802","messageId":"819","endLine":566,"endColumn":42},{"ruleId":"898","severity":2,"message":"899","line":570,"column":21,"nodeType":"900","messageId":"901","endLine":570,"endColumn":22,"fix":"1014"},{"ruleId":"898","severity":2,"message":"899","line":591,"column":15,"nodeType":"900","messageId":"901","endLine":591,"endColumn":16,"fix":"1015"},{"ruleId":"817","severity":2,"message":"1016","line":612,"column":33,"nodeType":"802","messageId":"819","endLine":612,"endColumn":39},{"ruleId":"898","severity":2,"message":"899","line":616,"column":23,"nodeType":"900","messageId":"901","endLine":616,"endColumn":24,"fix":"1017"},{"ruleId":"817","severity":2,"message":"1016","line":629,"column":33,"nodeType":"802","messageId":"819","endLine":629,"endColumn":39},{"ruleId":"898","severity":2,"message":"899","line":633,"column":23,"nodeType":"900","messageId":"901","endLine":633,"endColumn":24,"fix":"1018"},{"ruleId":"817","severity":2,"message":"1016","line":644,"column":33,"nodeType":"802","messageId":"819","endLine":644,"endColumn":39},{"ruleId":"898","severity":2,"message":"899","line":648,"column":23,"nodeType":"900","messageId":"901","endLine":648,"endColumn":24,"fix":"1019"},{"ruleId":"817","severity":2,"message":"1016","line":660,"column":31,"nodeType":"802","messageId":"819","endLine":660,"endColumn":37},{"ruleId":"1020","severity":2,"message":"1021","line":661,"column":25,"nodeType":"1022","messageId":"1023","endLine":661,"endColumn":64},{"ruleId":"817","severity":2,"message":"1016","line":672,"column":31,"nodeType":"802","messageId":"819","endLine":672,"endColumn":37},{"ruleId":"898","severity":2,"message":"899","line":676,"column":21,"nodeType":"900","messageId":"901","endLine":676,"endColumn":22,"fix":"1024"},{"ruleId":"885","severity":2,"message":"1005","line":702,"column":30,"nodeType":"889","endLine":702,"endColumn":41,"fix":"1025"},{"ruleId":"817","severity":2,"message":"1026","line":711,"column":31,"nodeType":"802","messageId":"819","endLine":711,"endColumn":41},{"ruleId":"898","severity":2,"message":"899","line":715,"column":21,"nodeType":"900","messageId":"901","endLine":715,"endColumn":22,"fix":"1027"},{"ruleId":"817","severity":2,"message":"1026","line":723,"column":29,"nodeType":"802","messageId":"819","endLine":723,"endColumn":39},{"ruleId":"898","severity":2,"message":"899","line":727,"column":19,"nodeType":"900","messageId":"901","endLine":727,"endColumn":20,"fix":"1028"},{"ruleId":"898","severity":2,"message":"899","line":760,"column":15,"nodeType":"900","messageId":"901","endLine":760,"endColumn":16,"fix":"1029"},{"ruleId":"817","severity":2,"message":"1030","line":782,"column":35,"nodeType":"802","messageId":"819","endLine":782,"endColumn":42},{"ruleId":"898","severity":2,"message":"899","line":786,"column":25,"nodeType":"900","messageId":"901","endLine":786,"endColumn":26,"fix":"1031"},{"ruleId":"817","severity":2,"message":"1030","line":794,"column":35,"nodeType":"802","messageId":"819","endLine":794,"endColumn":42},{"ruleId":"898","severity":2,"message":"899","line":798,"column":25,"nodeType":"900","messageId":"901","endLine":798,"endColumn":26,"fix":"1032"},{"ruleId":"817","severity":2,"message":"1030","line":836,"column":39,"nodeType":"802","messageId":"819","endLine":836,"endColumn":46},{"ruleId":"898","severity":2,"message":"899","line":842,"column":29,"nodeType":"900","messageId":"901","endLine":842,"endColumn":30,"fix":"1033"},{"ruleId":"817","severity":2,"message":"1030","line":865,"column":39,"nodeType":"802","messageId":"819","endLine":865,"endColumn":46},{"ruleId":"898","severity":2,"message":"899","line":871,"column":29,"nodeType":"900","messageId":"901","endLine":871,"endColumn":30,"fix":"1034"},{"ruleId":"817","severity":2,"message":"1030","line":895,"column":39,"nodeType":"802","messageId":"819","endLine":895,"endColumn":46},{"ruleId":"898","severity":2,"message":"899","line":901,"column":29,"nodeType":"900","messageId":"901","endLine":901,"endColumn":30,"fix":"1035"},{"ruleId":"817","severity":2,"message":"1030","line":924,"column":39,"nodeType":"802","messageId":"819","endLine":924,"endColumn":46},{"ruleId":"898","severity":2,"message":"899","line":930,"column":29,"nodeType":"900","messageId":"901","endLine":930,"endColumn":30,"fix":"1036"},{"ruleId":"817","severity":2,"message":"1030","line":953,"column":39,"nodeType":"802","messageId":"819","endLine":953,"endColumn":46},{"ruleId":"898","severity":2,"message":"899","line":959,"column":29,"nodeType":"900","messageId":"901","endLine":959,"endColumn":30,"fix":"1037"},{"ruleId":"898","severity":2,"message":"899","line":1014,"column":13,"nodeType":"900","messageId":"901","endLine":1014,"endColumn":14,"fix":"1038"},{"ruleId":"817","severity":2,"message":"1039","line":1033,"column":31,"nodeType":"802","messageId":"819","endLine":1033,"endColumn":41},{"ruleId":"898","severity":2,"message":"899","line":1037,"column":21,"nodeType":"900","messageId":"901","endLine":1037,"endColumn":22,"fix":"1040"},{"ruleId":"817","severity":2,"message":"1039","line":1053,"column":33,"nodeType":"802","messageId":"819","endLine":1053,"endColumn":43},{"ruleId":"898","severity":2,"message":"899","line":1057,"column":23,"nodeType":"900","messageId":"901","endLine":1057,"endColumn":24,"fix":"1041"},{"ruleId":"817","severity":2,"message":"1039","line":1066,"column":29,"nodeType":"802","messageId":"819","endLine":1066,"endColumn":39},{"ruleId":"898","severity":2,"message":"899","line":1070,"column":19,"nodeType":"900","messageId":"901","endLine":1070,"endColumn":20,"fix":"1042"},{"ruleId":"885","severity":2,"message":"1005","line":1098,"column":27,"nodeType":"889","endLine":1098,"endColumn":38,"fix":"1043"},{"ruleId":"817","severity":2,"message":"1044","line":1107,"column":31,"nodeType":"802","messageId":"819","endLine":1107,"endColumn":36},{"ruleId":"898","severity":2,"message":"899","line":1111,"column":21,"nodeType":"900","messageId":"901","endLine":1111,"endColumn":22,"fix":"1045"},{"ruleId":"817","severity":2,"message":"1044","line":1119,"column":29,"nodeType":"802","messageId":"819","endLine":1119,"endColumn":34},{"ruleId":"898","severity":2,"message":"899","line":1123,"column":19,"nodeType":"900","messageId":"901","endLine":1123,"endColumn":20,"fix":"1046"},{"ruleId":"870","severity":2,"message":"871","line":1144,"column":29,"nodeType":"891","endLine":1144,"endColumn":47},{"ruleId":"885","severity":2,"message":"949","line":119,"column":40,"nodeType":"889","endLine":119,"endColumn":65,"fix":"1047"},{"ruleId":"885","severity":2,"message":"949","line":147,"column":48,"nodeType":"889","endLine":147,"endColumn":73,"fix":"1048"},{"ruleId":"885","severity":2,"message":"951","line":151,"column":46,"nodeType":"889","endLine":151,"endColumn":67,"fix":"1049"},{"ruleId":"885","severity":2,"message":"1050","line":161,"column":24,"nodeType":"889","endLine":161,"endColumn":53,"fix":"1051"},{"ruleId":"885","severity":2,"message":"1052","line":161,"column":53,"nodeType":"851","endLine":161,"endColumn":69,"fix":"1053"},{"ruleId":"945","severity":2,"message":"1054","line":108,"column":35,"nodeType":"802","messageId":"947","endLine":108,"endColumn":40},{"ruleId":"864","severity":2,"message":"1055","line":193,"column":20,"nodeType":"866","endLine":193,"endColumn":25},{"ruleId":"864","severity":2,"message":"1056","line":193,"column":27,"nodeType":"866","endLine":193,"endColumn":40},{"ruleId":"817","severity":2,"message":"1057","line":195,"column":10,"nodeType":"802","messageId":"819","endLine":195,"endColumn":16},{"ruleId":"824","severity":2,"message":"825","line":227,"column":5,"nodeType":"826","messageId":"827","endLine":231,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":228,"column":7,"nodeType":"826","messageId":"827","endLine":230,"endColumn":8},{"ruleId":"817","severity":2,"message":"1058","line":235,"column":11,"nodeType":"802","messageId":"819","endLine":235,"endColumn":21},{"ruleId":"824","severity":2,"message":"825","line":249,"column":5,"nodeType":"826","messageId":"827","endLine":268,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":278,"column":5,"nodeType":"826","messageId":"827","endLine":282,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":279,"column":7,"nodeType":"826","messageId":"827","endLine":281,"endColumn":8},{"ruleId":"817","severity":2,"message":"1059","line":286,"column":11,"nodeType":"802","messageId":"819","endLine":286,"endColumn":16},{"ruleId":"824","severity":2,"message":"825","line":291,"column":5,"nodeType":"826","messageId":"827","endLine":296,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":302,"column":5,"nodeType":"826","messageId":"827","endLine":308,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":304,"column":9,"nodeType":"826","messageId":"827","endLine":306,"endColumn":10},{"ruleId":"885","severity":2,"message":"1060","line":363,"column":17,"nodeType":"915","endLine":363,"endColumn":31,"fix":"1061"},{"ruleId":"885","severity":2,"message":"1062","line":368,"column":20,"nodeType":"889","endLine":368,"endColumn":65,"fix":"1063"},{"ruleId":"898","severity":2,"message":"899","line":393,"column":23,"nodeType":"900","messageId":"901","endLine":393,"endColumn":24,"fix":"1064"},{"ruleId":"885","severity":2,"message":"1065","line":417,"column":22,"nodeType":"889","endLine":417,"endColumn":45,"fix":"1066"},{"ruleId":"885","severity":2,"message":"1067","line":417,"column":45,"nodeType":"851","endLine":417,"endColumn":48,"fix":"1068"},{"ruleId":"885","severity":2,"message":"1069","line":417,"column":48,"nodeType":"889","endLine":417,"endColumn":71,"fix":"1070"},{"ruleId":"797","severity":2,"message":"836","line":417,"column":71,"nodeType":null,"endLine":418,"endColumn":1,"fix":"1071"},{"ruleId":"920","severity":2,"message":"921","line":417,"column":71,"nodeType":"851","endLine":419,"endColumn":1,"fix":"1072"},{"ruleId":"797","severity":2,"message":"1073","line":419,"column":1,"nodeType":null,"endLine":419,"endColumn":1,"fix":"1074"},{"ruleId":"961","severity":2,"message":"962","line":419,"column":1,"nodeType":"963","endLine":419,"endColumn":9,"fix":"1075"},{"ruleId":"920","severity":2,"message":"1076","line":419,"column":1,"nodeType":"963","endLine":419,"endColumn":9,"fix":"1077"},{"ruleId":"898","severity":2,"message":"899","line":431,"column":21,"nodeType":"900","messageId":"901","endLine":431,"endColumn":22,"fix":"1078"},{"ruleId":"885","severity":2,"message":"1079","line":439,"column":22,"nodeType":"889","endLine":439,"endColumn":44,"fix":"1080"},{"ruleId":"885","severity":2,"message":"1067","line":439,"column":44,"nodeType":"851","endLine":439,"endColumn":47,"fix":"1081"},{"ruleId":"885","severity":2,"message":"1082","line":439,"column":47,"nodeType":"889","endLine":439,"endColumn":69,"fix":"1083"},{"ruleId":"797","severity":2,"message":"836","line":439,"column":69,"nodeType":null,"endLine":440,"endColumn":1,"fix":"1084"},{"ruleId":"920","severity":2,"message":"921","line":439,"column":69,"nodeType":"851","endLine":441,"endColumn":1,"fix":"1085"},{"ruleId":"797","severity":2,"message":"1073","line":441,"column":1,"nodeType":null,"endLine":441,"endColumn":1,"fix":"1086"},{"ruleId":"961","severity":2,"message":"962","line":441,"column":1,"nodeType":"963","endLine":441,"endColumn":9,"fix":"1087"},{"ruleId":"920","severity":2,"message":"1076","line":441,"column":1,"nodeType":"963","endLine":441,"endColumn":9,"fix":"1088"},{"ruleId":"898","severity":2,"message":"899","line":453,"column":21,"nodeType":"900","messageId":"901","endLine":453,"endColumn":22,"fix":"1089"},{"ruleId":"885","severity":2,"message":"1090","line":461,"column":22,"nodeType":"889","endLine":461,"endColumn":44,"fix":"1091"},{"ruleId":"885","severity":2,"message":"1067","line":461,"column":44,"nodeType":"851","endLine":461,"endColumn":47,"fix":"1092"},{"ruleId":"885","severity":2,"message":"1093","line":461,"column":47,"nodeType":"889","endLine":461,"endColumn":69,"fix":"1094"},{"ruleId":"797","severity":2,"message":"836","line":461,"column":69,"nodeType":null,"endLine":462,"endColumn":1,"fix":"1095"},{"ruleId":"920","severity":2,"message":"921","line":461,"column":69,"nodeType":"851","endLine":463,"endColumn":1,"fix":"1096"},{"ruleId":"797","severity":2,"message":"1073","line":463,"column":1,"nodeType":null,"endLine":463,"endColumn":1,"fix":"1097"},{"ruleId":"961","severity":2,"message":"962","line":463,"column":1,"nodeType":"963","endLine":463,"endColumn":9,"fix":"1098"},{"ruleId":"920","severity":2,"message":"1076","line":463,"column":1,"nodeType":"963","endLine":463,"endColumn":9,"fix":"1099"},{"ruleId":"898","severity":2,"message":"899","line":475,"column":21,"nodeType":"900","messageId":"901","endLine":475,"endColumn":22,"fix":"1100"},{"ruleId":"898","severity":2,"message":"899","line":510,"column":25,"nodeType":"900","messageId":"901","endLine":510,"endColumn":26,"fix":"1101"},{"ruleId":"898","severity":2,"message":"899","line":547,"column":25,"nodeType":"900","messageId":"901","endLine":547,"endColumn":26,"fix":"1102"},{"ruleId":"885","severity":2,"message":"1103","line":562,"column":20,"nodeType":"889","endLine":562,"endColumn":31,"fix":"1104"},{"ruleId":"885","severity":2,"message":"1067","line":562,"column":31,"nodeType":"851","endLine":562,"endColumn":34,"fix":"1105"},{"ruleId":"885","severity":2,"message":"1106","line":562,"column":34,"nodeType":"889","endLine":562,"endColumn":45,"fix":"1107"},{"ruleId":"885","severity":2,"message":"1108","line":562,"column":45,"nodeType":"851","endLine":563,"endColumn":17,"fix":"1109"},{"ruleId":"945","severity":2,"message":"1054","line":106,"column":35,"nodeType":"802","messageId":"947","endLine":106,"endColumn":40},{"ruleId":"864","severity":2,"message":"1055","line":178,"column":24,"nodeType":"866","endLine":178,"endColumn":29},{"ruleId":"864","severity":2,"message":"1056","line":178,"column":31,"nodeType":"866","endLine":178,"endColumn":44},{"ruleId":"817","severity":2,"message":"1110","line":180,"column":10,"nodeType":"802","messageId":"819","endLine":180,"endColumn":16},{"ruleId":"824","severity":2,"message":"825","line":210,"column":5,"nodeType":"826","messageId":"827","endLine":214,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":211,"column":7,"nodeType":"826","messageId":"827","endLine":213,"endColumn":8},{"ruleId":"817","severity":2,"message":"1111","line":218,"column":11,"nodeType":"802","messageId":"819","endLine":218,"endColumn":21},{"ruleId":"824","severity":2,"message":"825","line":232,"column":5,"nodeType":"826","messageId":"827","endLine":251,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":261,"column":5,"nodeType":"826","messageId":"827","endLine":265,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":262,"column":7,"nodeType":"826","messageId":"827","endLine":264,"endColumn":8},{"ruleId":"817","severity":2,"message":"1112","line":269,"column":11,"nodeType":"802","messageId":"819","endLine":269,"endColumn":16},{"ruleId":"824","severity":2,"message":"825","line":274,"column":5,"nodeType":"826","messageId":"827","endLine":279,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":285,"column":5,"nodeType":"826","messageId":"827","endLine":291,"endColumn":6},{"ruleId":"824","severity":2,"message":"825","line":287,"column":9,"nodeType":"826","messageId":"827","endLine":289,"endColumn":10},{"ruleId":"797","severity":2,"message":"1113","line":357,"column":23,"nodeType":null,"endLine":357,"endColumn":23,"fix":"1114"},{"ruleId":"885","severity":2,"message":"1065","line":381,"column":18,"nodeType":"889","endLine":381,"endColumn":41,"fix":"1115"},{"ruleId":"885","severity":2,"message":"1067","line":381,"column":41,"nodeType":"851","endLine":381,"endColumn":44,"fix":"1116"},{"ruleId":"885","severity":2,"message":"1069","line":381,"column":44,"nodeType":"889","endLine":381,"endColumn":67,"fix":"1117"},{"ruleId":"797","severity":2,"message":"836","line":381,"column":67,"nodeType":null,"endLine":382,"endColumn":1,"fix":"1118"},{"ruleId":"920","severity":2,"message":"1119","line":381,"column":67,"nodeType":"851","endLine":383,"endColumn":1,"fix":"1120"},{"ruleId":"797","severity":2,"message":"1121","line":383,"column":1,"nodeType":null,"endLine":383,"endColumn":1,"fix":"1122"},{"ruleId":"961","severity":2,"message":"962","line":383,"column":1,"nodeType":"963","endLine":383,"endColumn":9,"fix":"1123"},{"ruleId":"920","severity":2,"message":"954","line":383,"column":1,"nodeType":"963","endLine":383,"endColumn":9,"fix":"1124"},{"ruleId":"898","severity":2,"message":"899","line":395,"column":17,"nodeType":"900","messageId":"901","endLine":395,"endColumn":18,"fix":"1125"},{"ruleId":"885","severity":2,"message":"1079","line":403,"column":18,"nodeType":"889","endLine":403,"endColumn":40,"fix":"1126"},{"ruleId":"885","severity":2,"message":"1067","line":403,"column":40,"nodeType":"851","endLine":403,"endColumn":43,"fix":"1127"},{"ruleId":"885","severity":2,"message":"1082","line":403,"column":43,"nodeType":"889","endLine":403,"endColumn":65,"fix":"1128"},{"ruleId":"797","severity":2,"message":"836","line":403,"column":65,"nodeType":null,"endLine":404,"endColumn":1,"fix":"1129"},{"ruleId":"920","severity":2,"message":"1119","line":403,"column":65,"nodeType":"851","endLine":405,"endColumn":1,"fix":"1130"},{"ruleId":"797","severity":2,"message":"1121","line":405,"column":1,"nodeType":null,"endLine":405,"endColumn":1,"fix":"1131"},{"ruleId":"961","severity":2,"message":"962","line":405,"column":1,"nodeType":"963","endLine":405,"endColumn":9,"fix":"1132"},{"ruleId":"920","severity":2,"message":"954","line":405,"column":1,"nodeType":"963","endLine":405,"endColumn":9,"fix":"1133"},{"ruleId":"898","severity":2,"message":"899","line":417,"column":17,"nodeType":"900","messageId":"901","endLine":417,"endColumn":18,"fix":"1134"},{"ruleId":"885","severity":2,"message":"1090","line":425,"column":18,"nodeType":"889","endLine":425,"endColumn":40,"fix":"1135"},{"ruleId":"885","severity":2,"message":"1067","line":425,"column":40,"nodeType":"851","endLine":425,"endColumn":43,"fix":"1136"},{"ruleId":"885","severity":2,"message":"1093","line":425,"column":43,"nodeType":"889","endLine":425,"endColumn":65,"fix":"1137"},{"ruleId":"797","severity":2,"message":"836","line":425,"column":65,"nodeType":null,"endLine":426,"endColumn":1,"fix":"1138"},{"ruleId":"920","severity":2,"message":"1119","line":425,"column":65,"nodeType":"851","endLine":427,"endColumn":1,"fix":"1139"},{"ruleId":"797","severity":2,"message":"1121","line":427,"column":1,"nodeType":null,"endLine":427,"endColumn":1,"fix":"1140"},{"ruleId":"961","severity":2,"message":"962","line":427,"column":1,"nodeType":"963","endLine":427,"endColumn":9,"fix":"1141"},{"ruleId":"920","severity":2,"message":"954","line":427,"column":1,"nodeType":"963","endLine":427,"endColumn":9,"fix":"1142"},{"ruleId":"898","severity":2,"message":"899","line":439,"column":17,"nodeType":"900","messageId":"901","endLine":439,"endColumn":18,"fix":"1143"},{"ruleId":"898","severity":2,"message":"899","line":474,"column":21,"nodeType":"900","messageId":"901","endLine":474,"endColumn":22,"fix":"1144"},{"ruleId":"898","severity":2,"message":"899","line":511,"column":21,"nodeType":"900","messageId":"901","endLine":511,"endColumn":22,"fix":"1145"},{"ruleId":"885","severity":2,"message":"1103","line":526,"column":16,"nodeType":"889","endLine":526,"endColumn":27,"fix":"1146"},{"ruleId":"885","severity":2,"message":"1067","line":526,"column":27,"nodeType":"851","endLine":526,"endColumn":30,"fix":"1147"},{"ruleId":"885","severity":2,"message":"1106","line":526,"column":30,"nodeType":"889","endLine":526,"endColumn":41,"fix":"1148"},{"ruleId":"797","severity":2,"message":"836","line":526,"column":41,"nodeType":null,"endLine":527,"endColumn":1,"fix":"1149"},{"ruleId":"920","severity":2,"message":"954","line":526,"column":41,"nodeType":"851","endLine":528,"endColumn":1,"fix":"1150"},{"ruleId":"797","severity":2,"message":"959","line":528,"column":1,"nodeType":null,"endLine":528,"endColumn":1,"fix":"1151"},{"ruleId":"961","severity":2,"message":"962","line":528,"column":1,"nodeType":"963","endLine":528,"endColumn":9,"fix":"1152"},{"ruleId":"920","severity":2,"message":"965","line":528,"column":1,"nodeType":"963","endLine":528,"endColumn":9,"fix":"1153"},{"ruleId":"813","severity":2,"message":"814","line":157,"column":5,"nodeType":"815","messageId":"816","endLine":159,"endColumn":45},{"ruleId":"813","severity":2,"message":"814","line":164,"column":5,"nodeType":"815","messageId":"816","endLine":166,"endColumn":45},{"ruleId":"885","severity":2,"message":"1154","line":187,"column":30,"nodeType":"915","endLine":187,"endColumn":39,"fix":"1155"},{"ruleId":"885","severity":2,"message":"1154","line":193,"column":30,"nodeType":"915","endLine":193,"endColumn":39,"fix":"1156"},{"ruleId":"864","severity":2,"message":"1157","line":97,"column":20,"nodeType":"866","endLine":97,"endColumn":27},{"ruleId":"870","severity":2,"message":"871","line":128,"column":31,"nodeType":"802","endLine":128,"endColumn":41},{"ruleId":"817","severity":2,"message":"1158","line":130,"column":34,"nodeType":"802","messageId":"819","endLine":130,"endColumn":39},{"ruleId":"870","severity":2,"message":"871","line":134,"column":36,"nodeType":"891","endLine":134,"endColumn":63},{"ruleId":"797","severity":2,"message":"1159","line":147,"column":46,"nodeType":null,"endLine":149,"endColumn":1,"fix":"1160"},{"ruleId":"920","severity":2,"message":"1161","line":148,"column":1,"nodeType":"889","endLine":148,"endColumn":6,"fix":"1162"},{"ruleId":"920","severity":2,"message":"1161","line":149,"column":1,"nodeType":"1163","endLine":149,"endColumn":10,"fix":"1164"},{"ruleId":"870","severity":2,"message":"871","line":156,"column":46,"nodeType":"891","endLine":156,"endColumn":62},{"ruleId":"864","severity":2,"message":"1165","line":92,"column":28,"nodeType":"866","endLine":92,"endColumn":43},{"ruleId":"864","severity":2,"message":"1166","line":92,"column":45,"nodeType":"866","endLine":92,"endColumn":51},{"ruleId":"870","severity":2,"message":"871","line":122,"column":29,"nodeType":"802","endLine":122,"endColumn":34},{"ruleId":"817","severity":2,"message":"1167","line":123,"column":31,"nodeType":"802","messageId":"819","endLine":123,"endColumn":36},{"ruleId":"817","severity":2,"message":"1168","line":123,"column":38,"nodeType":"802","messageId":"819","endLine":123,"endColumn":43},{"ruleId":"870","severity":2,"message":"871","line":126,"column":39,"nodeType":"891","endLine":126,"endColumn":61},{"ruleId":"870","severity":2,"message":"871","line":138,"column":42,"nodeType":"891","endLine":138,"endColumn":58},{"ruleId":"870","severity":2,"message":"871","line":131,"column":29,"nodeType":"802","endLine":131,"endColumn":34},{"ruleId":"817","severity":2,"message":"1169","line":133,"column":39,"nodeType":"802","messageId":"819","endLine":133,"endColumn":44},{"ruleId":"870","severity":2,"message":"871","line":149,"column":44,"nodeType":"891","endLine":149,"endColumn":60},{"ruleId":"797","severity":2,"message":"1170","line":82,"column":33,"nodeType":null,"endLine":84,"endColumn":18,"fix":"1171"},{"ruleId":"797","severity":2,"message":"1172","line":90,"column":72,"nodeType":null,"endLine":92,"endColumn":22,"fix":"1173"},{"ruleId":"885","severity":2,"message":"935","line":92,"column":24,"nodeType":"889","endLine":92,"endColumn":29,"fix":"1174"},{"ruleId":"885","severity":2,"message":"886","line":99,"column":22,"nodeType":"851","endLine":99,"endColumn":23,"fix":"1175"},{"ruleId":"885","severity":2,"message":"1176","line":99,"column":23,"nodeType":"889","endLine":99,"endColumn":38,"fix":"1177"},{"ruleId":"797","severity":2,"message":"836","line":108,"column":12,"nodeType":null,"endLine":109,"endColumn":1,"fix":"1178"},{"ruleId":"920","severity":2,"message":"1179","line":109,"column":1,"nodeType":"889","endLine":109,"endColumn":66,"fix":"1180"},{"ruleId":"797","severity":2,"message":"836","line":115,"column":12,"nodeType":null,"endLine":116,"endColumn":1,"fix":"1181"},{"ruleId":"920","severity":2,"message":"1179","line":116,"column":1,"nodeType":"889","endLine":116,"endColumn":66,"fix":"1182"},{"ruleId":"817","severity":2,"message":"1183","line":118,"column":13,"nodeType":"802","messageId":"819","endLine":118,"endColumn":17},{"ruleId":"885","severity":2,"message":"1184","line":134,"column":32,"nodeType":"851","endLine":135,"endColumn":21,"fix":"1185"},{"ruleId":"885","severity":2,"message":"1186","line":140,"column":74,"nodeType":"851","endLine":141,"endColumn":1,"fix":"1187"},{"ruleId":"797","severity":2,"message":"836","line":140,"column":76,"nodeType":null,"endLine":141,"endColumn":1,"fix":"1188"},{"ruleId":"920","severity":2,"message":"1189","line":141,"column":1,"nodeType":"889","endLine":141,"endColumn":6,"fix":"1190"},{"ruleId":"885","severity":2,"message":"886","line":148,"column":24,"nodeType":"851","endLine":148,"endColumn":25,"fix":"1191"},{"ruleId":"885","severity":2,"message":"1192","line":148,"column":25,"nodeType":"889","endLine":148,"endColumn":37,"fix":"1193"},{"ruleId":"885","severity":2,"message":"886","line":155,"column":18,"nodeType":"851","endLine":155,"endColumn":19,"fix":"1194"},{"ruleId":"885","severity":2,"message":"1195","line":155,"column":19,"nodeType":"889","endLine":155,"endColumn":69,"fix":"1196"},{"ruleId":"885","severity":2,"message":"1195","line":165,"column":16,"nodeType":"889","endLine":165,"endColumn":66,"fix":"1197"},{"ruleId":"817","severity":2,"message":"1198","line":180,"column":13,"nodeType":"802","messageId":"819","endLine":180,"endColumn":23},{"ruleId":"820","severity":2,"message":"848","line":197,"column":5,"nodeType":"822","messageId":"823","endLine":199,"endColumn":7},{"ruleId":"813","severity":2,"message":"814","line":207,"column":11,"nodeType":"815","messageId":"816","endLine":207,"endColumn":49},{"ruleId":"817","severity":2,"message":"1199","line":224,"column":21,"nodeType":"802","messageId":"819","endLine":224,"endColumn":29},{"ruleId":"885","severity":2,"message":"1200","line":309,"column":29,"nodeType":"889","endLine":309,"endColumn":60,"fix":"1201"},{"ruleId":"797","severity":2,"message":"1202","line":323,"column":61,"nodeType":null,"endLine":323,"endColumn":61,"fix":"1203"},{"ruleId":"885","severity":2,"message":"1186","line":119,"column":24,"nodeType":"851","endLine":119,"endColumn":26,"fix":"1204"},{"ruleId":"885","severity":2,"message":"1205","line":119,"column":26,"nodeType":"889","endLine":119,"endColumn":50,"fix":"1206"},{"ruleId":"885","severity":2,"message":"1186","line":125,"column":68,"nodeType":"851","endLine":125,"endColumn":70,"fix":"1207"},{"ruleId":"885","severity":2,"message":"935","line":125,"column":70,"nodeType":"889","endLine":125,"endColumn":75,"fix":"1208"},{"ruleId":"885","severity":2,"message":"886","line":131,"column":18,"nodeType":"851","endLine":131,"endColumn":19,"fix":"1209"},{"ruleId":"885","severity":2,"message":"1192","line":131,"column":19,"nodeType":"889","endLine":131,"endColumn":31,"fix":"1210"},{"ruleId":"817","severity":2,"message":"1211","line":144,"column":17,"nodeType":"802","messageId":"819","endLine":144,"endColumn":25},{"ruleId":"885","severity":2,"message":"886","line":151,"column":14,"nodeType":"851","endLine":151,"endColumn":15,"fix":"1212"},{"ruleId":"885","severity":2,"message":"1213","line":151,"column":15,"nodeType":"889","endLine":151,"endColumn":38,"fix":"1214"},{"ruleId":"1215","severity":2,"message":"1216","line":170,"column":5,"nodeType":"866","endLine":170,"endColumn":30},"lines-around-directive",["1217"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","prettier/prettier","Replace `'·'` with `\"·\"`",{"range":"1218","text":"1219"},"no-use-before-define","'capitalize' was used before it was defined.","Identifier","usedBeforeDefined","Replace `'of',·'and'` with `\"of\",·\"and\"`",{"range":"1220","text":"1221"},"no-else-return","Unnecessary 'else' after 'return'.","BlockStatement","unexpected",{"range":"1222","text":"1223"},"Insert `;`",{"range":"1224","text":"1225"},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-shadow","'item' is already declared in the upper scope on line 90 column 11.","noShadow","consistent-return","Async arrow function expected no return value.","ReturnStatement","unexpectedReturnValue","no-restricted-syntax","iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.","ForOfStatement","restrictedSyntax","'firstName' is already declared in the upper scope on line 6 column 10.","'lastName' is already declared in the upper scope on line 7 column 10.","'address' is already declared in the upper scope on line 8 column 10.","'zipCode' is already declared in the upper scope on line 10 column 10.","'city' is already declared in the upper scope on line 9 column 10.","'country' is already declared in the upper scope on line 11 column 10.","'phone' is already declared in the upper scope on line 13 column 10.","'email' is already declared in the upper scope on line 12 column 10.","Delete `⏎`",{"range":"1226","text":"1227"},"'name' is already declared in the upper scope on line 6 column 10.","'number' is already declared in the upper scope on line 7 column 10.","'date' is already declared in the upper scope on line 8 column 10.","'cvc' is already declared in the upper scope on line 9 column 10.","'editCard' was used before it was defined.","'slides' is already declared in the upper scope on line 3 column 22.","'slidesGroups' is already declared in the upper scope on line 6 column 10.","Insert `⏎`",{"range":"1228","text":"1229"},"'favorites' is already declared in the upper scope on line 15 column 10.","Arrow function expected no return value.","react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","Literal","import/no-named-as-default","Parse errors in imported module './checkout/Cart': Line 325: Unexpected token, expected \"}\"\n\n\u001b[0m \u001b[90m 323 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mLegend\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 324 | \u001b[39m)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 325 | \u001b[39m        )}\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 326 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 327 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33mul\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 328 | \u001b[39m            {cart\u001b[33m.\u001b[39mmap((item) \u001b[33m=>\u001b[39m {\u001b[0m (325:9)","import/no-named-as-default-member","react/jsx-props-no-spreading","Prop spreading is forbidden","JSXSpreadAttribute","'cart' is already declared in the upper scope on line 260 column 10.","'currentUser' is already declared in the upper scope on line 265 column 11.","no-await-in-loop","Unexpected `await` inside a loop.","AwaitExpression","unexpectedAwait","react/prop-types","'location' is missing in props validation","Property","'location.state' is missing in props validation","'location.state.isPaying' is missing in props validation","'slides' is already declared in the upper scope on line 127 column 10.","react/no-array-index-key","Do not use Array index in keys","'component' is missing in props validation","'order' is already declared in the upper scope on line 103 column 10.","'match' is missing in props validation","'match.params' is missing in props validation","'match.params.category' is missing in props validation","'filters' is already declared in the upper scope on line 63 column 10.","'sort' is already declared in the upper scope on line 62 column 10.","'displayedItems' is already declared in the upper scope on line 74 column 10.","'designs' is already declared in the upper scope on line 99 column 10.","'match.params.itemId' is missing in props validation","'item' is already declared in the upper scope on line 317 column 10.","'e' is already declared in the upper scope on line 383 column 34.","'recommendations' is already declared in the upper scope on line 330 column 10.","react/jsx-one-expression-per-line","`£` must be placed on a new line",{"range":"1230","text":"1231"},"`{currentPrice}` must be placed on a new line","JSXExpressionContainer",{"range":"1232","text":"1233"},"TemplateLiteral","`{currentColor.description}` must be placed on a new line",{"range":"1234","text":"1235"},"`{option}` must be placed on a new line",{"range":"1236","text":"1237"},"`: ` must be placed on a new line",{"range":"1238","text":"1239"},"react/jsx-curly-newline","Unexpected newline before '{'.","Punctuator","unexpectedBefore",{"range":"1240","text":"1227"},"'quantity' is already declared in the upper scope on line 327 column 10.","`{dimension}` must be placed on a new line",{"range":"1241","text":"1242"},{"range":"1243","text":"1239"},"`{info}` must be placed on a new line",{"range":"1244","text":"1245"},{"range":"1246","text":"1239"},"'design' is already declared in the upper scope on line 124 column 10.","'match.params.id' is missing in props validation","'items' is already declared in the upper scope on line 125 column 10.","react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","'cards' is already declared in the upper scope on line 198 column 10.","'location.state.personal' is missing in props validation","'location.state.personal.firstName' is missing in props validation",{"range":"1247","text":"1227"},"react/jsx-indent","Expected indentation of 20 space characters but found 0.",{"range":"1248","text":"1249"},"'location.state.personal.lastName' is missing in props validation","'location.state.personal.address' is missing in props validation","'location.state.personal.zipCode' is missing in props validation",{"range":"1250","text":"1227"},{"range":"1251","text":"1249"},"'location.state.personal.city' is missing in props validation","'location.state.personal.country' is missing in props validation","Replace `⏎{'·'}⏎` with `·`",{"range":"1252","text":"1253"},"Expected indentation of 30 space characters but found 0.",{"range":"1254","text":"1255"},{"range":"1256","text":"1257"},"`{\" \"}` must be placed on a new line",{"range":"1258","text":"1259"},"'number' is already declared in the upper scope on line 194 column 10.","'cvc' is already declared in the upper scope on line 196 column 10.","'addresses' is already declared in the upper scope on line 163 column 10.","'address' is already declared in the upper scope on line 174 column 5.","`{address.lastName}` must be placed on a new line",{"range":"1260","text":"1261"},"`{address.city}` must be placed on a new line",{"range":"1262","text":"1263"},"no-unused-vars","'location' is defined but never used.","unusedVar","'order' is already declared in the upper scope on line 107 column 10.","`{order.shipping.lastName}` must be placed on a new line",{"range":"1264","text":"1265"},"`{order.shipping.city}` must be placed on a new line",{"range":"1266","text":"1267"},{"range":"1268","text":"1253"},"Expected indentation of 14 space characters but found 0.",{"range":"1269","text":"1270"},{"range":"1271","text":"1272"},"Expected indentation of 14 space characters but found 14.",{"range":"1271","text":"1272"},"Insert `············`",{"range":"1273","text":"1274"},"react/jsx-closing-tag-location","Expected closing tag to match indentation of opening.","JSXClosingElement",{"range":"1275","text":"1274"},"Expected indentation of 12 space characters but found 0.",{"range":"1276","text":"1274"},{"range":"1277","text":"1259"},{"range":"1278","text":"1259"},"'orders' is already declared in the upper scope on line 22 column 10.","'setLinks' is assigned a value but never used.","'addresses' is already declared in the upper scope on line 192 column 10.","'address' is already declared in the upper scope on line 206 column 5.",{"range":"1279","text":"1261"},{"range":"1280","text":"1263"},{"range":"1281","text":"1227"},"'cards' is already declared in the upper scope on line 188 column 10.","`{card.number.slice(-4)}` must be placed on a new line",{"range":"1282","text":"1283"},"Replace `⏎{'·'}⏎(Last·4·digits)⏎` with `·(Last·4·digits)`",{"range":"1284","text":"1285"},"Expected indentation of 22 space characters but found 0.",{"range":"1286","text":"1287"},{"range":"1288","text":"1289"},{"range":"1290","text":"1249"},{"range":"1291","text":"1249"},"'number' is already declared in the upper scope on line 199 column 5.","'cvc' is already declared in the upper scope on line 203 column 5.","'categories' is already declared in the upper scope on line 101 column 10.","'cart' is already declared in the upper scope on line 120 column 10.",{"range":"1292","text":"1259"},"`.          ` must be placed on a new line",{"range":"1293","text":"1294"},{"range":"1295","text":"1294"},"'flip' is missing in props validation","'isPaying' is missing in props validation",{"range":"1296","text":"1259"},{"range":"1297","text":"1231"},"`{price}` must be placed on a new line",{"range":"1298","text":"1299"},"'colors' is already declared in the upper scope on line 11 column 7.","'e' is already declared in the upper scope on line 218 column 31.",{"range":"1300","text":"1227"},{"range":"1301","text":"1227"},{"range":"1302","text":"1227"},"`{index + 1}` must be placed on a new line",{"range":"1303","text":"1304"},"'materials' is already declared in the upper scope on line 175 column 10.",{"range":"1305","text":"1227"},{"range":"1306","text":"1227"},"'description' is already declared in the upper scope on line 177 column 10.",{"range":"1307","text":"1304"},"'description' is already declared in the upper scope on line 538 column 29.",{"range":"1308","text":"1227"},{"range":"1309","text":"1227"},{"range":"1310","text":"1227"},"'colors' is already declared in the upper scope on line 179 column 10.",{"range":"1311","text":"1227"},{"range":"1312","text":"1227"},{"range":"1313","text":"1227"},"prefer-destructuring","Use array destructuring.","AssignmentExpression","preferDestructuring",{"range":"1314","text":"1227"},{"range":"1315","text":"1304"},"'categories' is already declared in the upper scope on line 178 column 10.",{"range":"1316","text":"1227"},{"range":"1317","text":"1227"},{"range":"1318","text":"1227"},"'options' is already declared in the upper scope on line 193 column 10.",{"range":"1319","text":"1227"},{"range":"1320","text":"1227"},{"range":"1321","text":"1227"},{"range":"1322","text":"1227"},{"range":"1323","text":"1227"},{"range":"1324","text":"1227"},{"range":"1325","text":"1227"},{"range":"1326","text":"1227"},"'additional' is already declared in the upper scope on line 187 column 10.",{"range":"1327","text":"1227"},{"range":"1328","text":"1227"},{"range":"1329","text":"1227"},{"range":"1330","text":"1304"},"'seats' is already declared in the upper scope on line 210 column 10.",{"range":"1331","text":"1227"},{"range":"1332","text":"1227"},{"range":"1333","text":"1265"},{"range":"1334","text":"1265"},{"range":"1335","text":"1267"},"`{order.card.number.slice(-4)}` must be placed on a new line",{"range":"1336","text":"1337"},"` (Last 4 digits)` must be placed on a new line",{"range":"1338","text":"1339"},"'props' is defined but never used.","'items' is missing in props validation","'handleFilters' is missing in props validation","'colors' is already declared in the upper scope on line 13 column 7.","'dimensions' is already declared in the upper scope on line 196 column 10.","'price' is already declared in the upper scope on line 201 column 10.","`FilterIcon` must be placed on a new line",{"range":"1340","text":"1341"},"`{areColorsOpen ? <AngleUp /> : <AngleDown />}` must be placed on a new line",{"range":"1342","text":"1343"},{"range":"1344","text":"1227"},"`{dimensions.height.min}` must be placed on a new line",{"range":"1345","text":"1346"},"` - ` must be placed on a new line",{"range":"1347","text":"1348"},"`{dimensions.height.max}` must be placed on a new line",{"range":"1349","text":"1350"},{"range":"1351","text":"1227"},{"range":"1352","text":"1353"},"Insert `··················`",{"range":"1354","text":"1355"},{"range":"1356","text":"1355"},"Expected indentation of 18 space characters but found 0.",{"range":"1357","text":"1355"},{"range":"1358","text":"1227"},"`{dimensions.width.min}` must be placed on a new line",{"range":"1359","text":"1360"},{"range":"1361","text":"1348"},"`{dimensions.width.max}` must be placed on a new line",{"range":"1362","text":"1363"},{"range":"1364","text":"1227"},{"range":"1365","text":"1353"},{"range":"1366","text":"1355"},{"range":"1367","text":"1355"},{"range":"1368","text":"1355"},{"range":"1369","text":"1227"},"`{dimensions.depth.min}` must be placed on a new line",{"range":"1370","text":"1371"},{"range":"1372","text":"1348"},"`{dimensions.depth.max}` must be placed on a new line",{"range":"1373","text":"1374"},{"range":"1375","text":"1227"},{"range":"1376","text":"1353"},{"range":"1377","text":"1355"},{"range":"1378","text":"1355"},{"range":"1379","text":"1355"},{"range":"1380","text":"1227"},{"range":"1381","text":"1227"},{"range":"1382","text":"1227"},"`{price.min}` must be placed on a new line",{"range":"1383","text":"1384"},{"range":"1385","text":"1348"},"`{price.max}` must be placed on a new line",{"range":"1386","text":"1387"},"`)                ` must be placed on a new line",{"range":"1388","text":"1389"},"'colors' is already declared in the upper scope on line 12 column 7.","'dimensions' is already declared in the upper scope on line 181 column 10.","'price' is already declared in the upper scope on line 186 column 10.","Insert `⏎··················`",{"range":"1390","text":"1391"},{"range":"1392","text":"1346"},{"range":"1393","text":"1348"},{"range":"1394","text":"1350"},{"range":"1395","text":"1227"},"Expected indentation of 16 space characters but found 0.",{"range":"1396","text":"1397"},"Insert `··············`",{"range":"1398","text":"1270"},{"range":"1399","text":"1270"},{"range":"1400","text":"1270"},{"range":"1401","text":"1227"},{"range":"1402","text":"1360"},{"range":"1403","text":"1348"},{"range":"1404","text":"1363"},{"range":"1405","text":"1227"},{"range":"1406","text":"1397"},{"range":"1407","text":"1270"},{"range":"1408","text":"1270"},{"range":"1409","text":"1270"},{"range":"1410","text":"1227"},{"range":"1411","text":"1371"},{"range":"1412","text":"1348"},{"range":"1413","text":"1374"},{"range":"1414","text":"1227"},{"range":"1415","text":"1397"},{"range":"1416","text":"1270"},{"range":"1417","text":"1270"},{"range":"1418","text":"1270"},{"range":"1419","text":"1227"},{"range":"1420","text":"1227"},{"range":"1421","text":"1227"},{"range":"1422","text":"1384"},{"range":"1423","text":"1348"},{"range":"1424","text":"1387"},{"range":"1425","text":"1227"},{"range":"1426","text":"1427"},{"range":"1428","text":"1274"},{"range":"1429","text":"1274"},{"range":"1430","text":"1274"},"`Arrow` must be placed on a new line",{"range":"1431","text":"1432"},{"range":"1433","text":"1432"},"'designs' is missing in props validation","'slide' is already declared in the upper scope on line 126 column 34.","Delete `⏎{'·'}⏎`",{"range":"1434","text":"1227"},"Expected indentation of 36 space characters but found 0.",{"range":"1435","text":"1436"},"JSXOpeningElement",{"range":"1437","text":"1436"},"'recommendations' is missing in props validation","'number' is missing in props validation","'slide' is already declared in the upper scope on line 120 column 32.","'index' is already declared in the upper scope on line 120 column 39.","'index' is already declared in the upper scope on line 129 column 39.","Delete `⏎··················{'·'}⏎·················`",{"range":"1438","text":"1227"},"Delete `⏎······················{'·'}⏎·····················`",{"range":"1439","text":"1227"},{"range":"1440","text":"1259"},{"range":"1441","text":"1231"},"`{product.price}` must be placed on a new line",{"range":"1442","text":"1443"},{"range":"1444","text":"1227"},"Expected indentation of 10 space characters but found 0.",{"range":"1445","text":"1446"},{"range":"1447","text":"1227"},{"range":"1448","text":"1446"},"'cart' is already declared in the upper scope on line 111 column 10.","` in                    ` must be placed on a new line",{"range":"1449","text":"1450"},"` -` must be placed on a new line",{"range":"1451","text":"1452"},{"range":"1453","text":"1227"},"Expected indentation of 24 space characters but found 0.",{"range":"1454","text":"1455"},{"range":"1456","text":"1231"},"`{item.price}` must be placed on a new line",{"range":"1457","text":"1458"},{"range":"1459","text":"1231"},"`{cart.reduce((sum, item) => sum + +item.price, 0)}` must be placed on a new line",{"range":"1460","text":"1461"},{"range":"1462","text":"1463"},"'categories' is already declared in the upper scope on line 171 column 10.","'category' is already declared in the upper scope on line 59 column 7.","`{formatNavLink(activeCategory)}` must be placed on a new line",{"range":"1464","text":"1465"},"Insert `·`",{"range":"1466","text":"1253"},{"range":"1467","text":"1348"},"`{item.color.description}` must be placed on a new line",{"range":"1468","text":"1469"},{"range":"1470","text":"1348"},{"range":"1471","text":"1259"},{"range":"1472","text":"1231"},{"range":"1473","text":"1458"},"'quantity' is already declared in the upper scope on line 102 column 10.",{"range":"1474","text":"1231"},"`{item.price * quantity}` must be placed on a new line",{"range":"1475","text":"1476"},"react/forbid-prop-types","Prop type `object` is forbidden","padding-line-between-statements",[116,119],"\" \"",[329,340],"\"of\", \"and\"",[309,442],"(word) => {\n  if (!['of', 'and'].includes(word)) {\n    return word[0].toUpperCase() + word.slice(1);\n  } \n    return word\n  \n}",[436,436],";",[3592,3593],"",[1690,1690],"\n",[11585,11586],"\n£",[11586,11600],"\n{currentPrice}\n",[11973,11999],"\n{' '}\n{currentColor.description}\n",[13122,13130],"\n{option}",[13130,13132],"\n:\n{' '}\n",[14605,14640],[16892,16903],"\n{dimension}",[16903,16905],[17673,17679],"\n{info}",[17679,17681],[5851,5852],[5852,5852],"                    ",[6078,6079],[6079,6079],[6744,6751]," ",[6745,6745],"                              ",[6750,6752],"\n                              —",[6752,6757],"\n{\" \"}",[5472,5490],"\n{' '}\n{address.lastName}",[5657,5671],"\n{' '}\n{address.city}",[2949,2974],"\n{' '}\n{order.shipping.lastName}",[3103,3124],"\n{' '}\n{order.shipping.city}",[3416,3423],[3417,3417],"              ",[3422,3532],"\n              has been confirmed. You will be\n              receiving a confirmation mail with your order details shortly.\n",[3532,3532],"            ",[3532,3532],[3532,3532],[3620,3625],[3785,3790],[5895,5913],[6059,6073],[6464,6489],[5279,5302],"\n{card.number.slice(-4)}",[5302,5325]," (Last 4 digits)",[5303,5303],"                      ",[5308,5325],"\n                      (Last 4 digits)\n",[5325,5325],[5325,5325],[4007,4012],[4109,4121],"\n.\n",[4219,4231],[4703,4708],[2892,2893],[2893,2900],"\n{price}\n",[10749,10764],[11115,11130],[11473,11488],[12111,12122],"\n{' '}\n{index + 1}",[12696,12719],[13131,13152],[13841,13852],[14498,14519],[14912,14933],[15424,15439],[16338,16361],[16993,17016],[17542,17565],[18476,18497],[19165,19176],[19664,19685],[20038,20057],[20872,20887],[21839,21864],[22285,22310],[24068,24097],[25318,25347],[26650,26679],[27928,27957],[29200,29229],[31062,31075],[31882,31903],[32662,32685],[33066,33085],[33775,33786],[34247,34268],[34601,34620],[2653,2678],[3366,3391],[3540,3561],[3888,3917],"\n{order.card.number.slice(-4)}",[3917,3933],"\n{' '}\n(Last 4 digits)\n",[9093,9107],"\n{' '}\n<FilterIcon />",[9261,9306],"\n{' '}\n{areColorsOpen ? <AngleUp /> : <AngleDown />}",[10184,10207],[10866,10889],"\n{dimensions.height.min}",[10889,10892],"\n{' '}\n-",[10892,10915],"\n{' '}\n{dimensions.height.max}",[10915,10916],[10915,10918],"\n                    )\n",[10918,10918],"                  ",[10918,10918],[10918,10918],[11347,11368],[11580,11602],"\n{dimensions.width.min}",[11602,11605],[11605,11627],"\n{' '}\n{dimensions.width.max}",[11627,11628],[11627,11630],[11630,11630],[11630,11630],[11630,11630],[12055,12076],[12287,12309],"\n{dimensions.depth.min}",[12309,12312],[12312,12334],"\n{' '}\n{dimensions.depth.max}",[12334,12335],[12334,12337],[12337,12337],[12337,12337],[12337,12337],[12762,12783],[14085,14110],[15377,15402],[15779,15790],"\n{price.min}",[15790,15793],[15793,15804],"\n{' '}\n{price.max}",[15804,15822],"\n)\n",[9235,9235],"\n                  ",[9815,9838],[9838,9841],[9841,9864],[9864,9865],[9864,9867],"\n                )\n",[9867,9867],[9867,9867],[9867,9867],[10252,10269],[10453,10475],[10475,10478],[10478,10500],[10500,10501],[10500,10503],[10503,10503],[10503,10503],[10503,10503],[10884,10901],[11084,11106],[11106,11109],[11109,11131],[11131,11132],[11131,11134],[11134,11134],[11134,11134],[11134,11134],[11515,11532],[12715,12736],[13876,13897],[14218,14229],[14229,14232],[14232,14243],[14243,14244],[14243,14246],"\n              )\n",[14246,14246],[14246,14246],[14246,14246],[4417,4426],"\n{' '}\n<Arrow />",[4619,4628],[3894,3901],[3895,3895],"                                    ",[3901,3901],[1649,1691],[1988,2038],[2040,2045],[2265,2266],[2266,2281],"\n{product.price}\n",[2416,2417],[2417,2417],"          ",[2603,2604],[2604,2604],[2643,2667],"\n{' '}\nin\n",[2943,2946],"\n{' '}\n-\n",[2945,2946],[2946,2946],"                        ",[3189,3190],[3190,3202],"\n{item.price}\n",[3334,3335],[3335,3385],"\n{cart.reduce((sum, item) => sum + +item.price, 0)}\n",[3611,3661],"\n{cart.reduce((sum, item) => sum + +item.price, 0)}",[8642,8673],"\n{' '}\n{formatNavLink(activeCategory)}",[8964,8964],[2508,2510],[2510,2534],"\n{item.color.description}",[2773,2775],[2775,2780],[2932,2933],[2933,2945],[3513,3514],[3514,3537],"\n{item.price * quantity}\n"]