[{"/home/aureen/the_odin_project/room_homepage/src/index.js":"1","/home/aureen/the_odin_project/room_homepage/src/App.js":"2","/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js":"3","/home/aureen/the_odin_project/room_homepage/src/components/Nav.js":"4","/home/aureen/the_odin_project/room_homepage/src/routes/Home.js":"5","/home/aureen/the_odin_project/room_homepage/src/routes/About.js":"6","/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js":"7","/home/aureen/the_odin_project/room_homepage/src/components/shop/Nav.js":"8","/home/aureen/the_odin_project/room_homepage/src/contexts/FirestoreContext.js":"9","/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js":"10","/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopNav.js":"11","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js":"12","/home/aureen/the_odin_project/room_homepage/src/components/shop/SideNav.js":"13","/home/aureen/the_odin_project/room_homepage/src/routes/ShopCategory.js":"14","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js":"15","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js":"16","/home/aureen/the_odin_project/room_homepage/src/contexts/FirestoreStorage.js":"17","/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopItemPreview.js":"18","/home/aureen/the_odin_project/room_homepage/src/routes/ShopItemDetails.js":"19","/home/aureen/the_odin_project/room_homepage/src/components/shop/ImageMagnifier.js":"20","/home/aureen/the_odin_project/room_homepage/src/components/shop/ImagesPreview.js":"21"},{"size":196,"mtime":1609276298431,"results":"22","hashOfConfig":"23"},{"size":1151,"mtime":1609783014477,"results":"24","hashOfConfig":"23"},{"size":6263,"mtime":1609872228922,"results":"25","hashOfConfig":"23"},{"size":3424,"mtime":1609617342020,"results":"26","hashOfConfig":"23"},{"size":1940,"mtime":1609428959564,"results":"27","hashOfConfig":"23"},{"size":3008,"mtime":1609428950172,"results":"28","hashOfConfig":"23"},{"size":6766,"mtime":1609617837844,"results":"29","hashOfConfig":"23"},{"size":2480,"mtime":1609618345048,"results":"30","hashOfConfig":"23"},{"size":1934,"mtime":1609790426291,"results":"31","hashOfConfig":"23"},{"size":638,"mtime":1609684266259,"results":"32","hashOfConfig":"23"},{"size":4003,"mtime":1609708477913,"results":"33","hashOfConfig":"23"},{"size":444,"mtime":1609627293705,"results":"34","hashOfConfig":"23"},{"size":6149,"mtime":1609629226501,"results":"35","hashOfConfig":"23"},{"size":1269,"mtime":1609782642825,"results":"36","hashOfConfig":"23"},{"size":204,"mtime":1609688437554,"results":"37","hashOfConfig":"23"},{"size":14709,"mtime":1609782516133,"results":"38","hashOfConfig":"23"},{"size":630,"mtime":1609694930306,"results":"39","hashOfConfig":"23"},{"size":1250,"mtime":1609782604081,"results":"40","hashOfConfig":"23"},{"size":681,"mtime":1609864641350,"results":"41","hashOfConfig":"23"},{"size":1651,"mtime":1609880709607,"results":"42","hashOfConfig":"23"},{"size":5290,"mtime":1609881198407,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yklksh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aureen/the_odin_project/room_homepage/src/index.js",[],["92","93"],"/home/aureen/the_odin_project/room_homepage/src/App.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Home.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/About.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/contexts/FirestoreContext.js",[],"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopNav.js",["94"],"import React, { useEffect, useState } from 'react';\nimport { useFirestore } from '../../contexts/FirestoreContext';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../utils/utils';\n\n// Styled components\n\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey\n  secondaryBright: 'hsl(0, 0%, 40%)', // Brighter grey\n  tertiary: 'hsl(0, 0%, 100%)' // White\n};\n\nconst Container = styled.nav`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${colors.secondary};\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst DropdownContainer = styled.div`\n  background: ${colors.tertiary};\n  width: 100%;\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Category = styled.a`\n  cursor: pointer;\n  flex: 1;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: .75rem 0 calc(0.75rem - 2px) 0;\n  border-bottom: 2px solid transparent;\n  \n  &:hover {\n    border-bottom: 2px solid ${colors.tertiary};\n  }\n`;\n\nconst Subcategory = styled.a`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: .5rem;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Item = styled.a`\n  padding: .25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n`;\n\n// Displays shopping categories (types of furnitures...)\nfunction ShopNav() {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [hovered, setHovered] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  return (\n    <Container\n      onMouseLeave={() => {\n        setDropdown(false);\n      }}\n    >\n      <Nav>\n        {/* Sort the categories by order before displaying them */}\n        {Object.keys(categories)\n          .sort((a, b) => categories[a].order - categories[b].order)\n          .map((category, index) => {\n            return (\n              <Category\n                key={category + index}\n                onMouseOver={() => {\n                  setDropdown(true);\n                  setHovered(category);\n                }}\n              >\n                {formatNavLink(category)}\n              </Category>\n            );\n          })}\n      </Nav>\n\n      {dropdown && Object.keys(categories[hovered].categories).length !== 0 && (\n        <DropdownContainer>\n          <Dropdown>\n            {/* Sort the subcategories by order before displaying them */}\n            {Object.keys(categories[hovered].categories)\n              .sort(\n                (a, b) =>\n                  categories[hovered].categories[a].order -\n                  categories[hovered].categories[b].order\n              )\n              .map((subcategory, index) => {\n                return (\n                  <Column key={subcategory + index}>\n                    <Subcategory>{formatNavLink(subcategory)}</Subcategory>\n                    <div>\n                      {categories[hovered].categories[subcategory].categories.map(\n                        (item, index) => {\n                          return <Item key={item + index}>{formatNavLink(item)}</Item>;\n                        }\n                      )}\n                    </div>\n                  </Column>\n                );\n              })}\n          </Dropdown>\n        </DropdownContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default ShopNav;\n","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/SideNav.js",["95","96"],"import React, { useEffect, useState } from 'react';\nimport { useFirestore } from '../../contexts/FirestoreContext';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../utils/utils';\n\n// Icons\nimport { ReactComponent as Hamburger } from '../../assets/icons/icon-hamburger.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey,\n  tertiary: 'hsl(0, 0%, 100%)', // White\n  background: 'hsl(0, 0%, 100%)',\n};\n\nconst Icon = styled.button`\n  color: ${colors.secondary};\n  margin: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nconst Container = styled.nav`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: ${(props) => props.top}px;\n  height: calc(100% - ${(props) => props.top}px);\n  border-top: 1px solid ${colors.secondary};\n  background: ${colors.secondary};\n  font-size: 0.825rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  transition: all 0.3s linear;\n  transform: translateX(${(props) => (props.isNavOpen ? '0' : '-100')}%);\n\n  @media all and (max-width: 600px) {\n    width: ${props => props.isDropdownOpen ? '100vw' : 'initial'};\n    max-width: ${props => props.isDropdownOpen ? '100%' : 'initial'};\n  }\n\n  @media all and (max-width: 500px) {\n    height: initial;\n  }\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n`;\n\nconst Category = styled.a`\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 2rem calc(0.75rem - 2px) 2rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '3')}%);\n  }\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: '';\n    display: block;\n    width: 2px;\n    left: 1rem;\n    position: absolute;\n    background: #fff;\n    transition: height 0.3s ease 0s, top 0.3s ease 0s;\n    height: ${(props) => (props.selected ? '90%' : '0')};\n    top: ${(props) => (props.selected ? '5%' : '50%')};\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  background: ${colors.tertiary};\n  width: 100%;\n  box-shadow: 0 5px 5px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-flow: row;\n  grid-gap: 3rem 1rem;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n\n  @media all and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Subcategory = styled.a`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  transition: all 0.15s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nconst Item = styled.a`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n  transition: all 0.15s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nfunction SideNav({ nav }) {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [activeCategory, setActiveCategory] = useState('');\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setHeight(nav.current.offsetHeight);\n  }, []);\n\n  return (\n    <>\n      <Icon onClick={() => {\n        setIsNavOpen(!isNavOpen);\n        isNavOpen && setIsDropdownOpen(false);\n      }}>\n        <Hamburger />\n      </Icon>\n\n      <Container\n        top={height}\n        isNavOpen={isNavOpen}\n        isDropdownOpen={isDropdownOpen}\n      >\n        <Nav>\n          {/* Sort the categories by order before displaying them */}\n          {Object.keys(categories)\n            .sort((a, b) => categories[a].order - categories[b].order)\n            .map((category, index) => {\n              return (\n                <Category\n                  key={category + index}\n                  selected={activeCategory === category}\n                  onClick={() => {\n                    setIsDropdownOpen(true);\n                    setActiveCategory(category);\n                  }}\n                >\n                  {formatNavLink(category)}\n                </Category>\n              );\n            })}\n        </Nav>\n\n        {isDropdownOpen && Object.keys(categories[activeCategory].categories).length !== 0 && isNavOpen && (\n          <DropdownContainer>\n            <Dropdown>\n              {/* Sort the subcategories by order before displaying them */}\n              {Object.keys(categories[activeCategory].categories)\n                .sort(\n                  (a, b) =>\n                    categories[activeCategory].categories[a].order -\n                    categories[activeCategory].categories[b].order\n                )\n                .map((subcategory, index) => {\n                  return (\n                    <Column key={subcategory + index}>\n                      <Subcategory>{formatNavLink(subcategory)}</Subcategory>\n                      <div>\n                        {categories[activeCategory].categories[\n                          subcategory\n                        ].categories.map((item, index) => {\n                          return (\n                            <Item key={item + index}>\n                              {formatNavLink(item)}\n                            </Item>\n                          );\n                        })}\n                      </div>\n                    </Column>\n                  );\n                })}\n            </Dropdown>\n          </DropdownContainer>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default SideNav;\n","/home/aureen/the_odin_project/room_homepage/src/routes/ShopCategory.js",["97"],"import React, { useState, useEffect } from 'react'\nimport Nav from '../components/shop/Nav';\nimport ShopNav from '../components/shop/ShopNav';\nimport ShopItemPreview from '../components/shop/ShopItemPreview';\nimport { useFirestore } from '../contexts/FirestoreContext';\nimport styled from 'styled-components'\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  max-width: 80%;\n  grid-gap: 3vw;\n`\n\nconst Shop = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5rem;\n`;\n\nfunction ShopCategory() {\n\n  const [items, setItems] = useState([])\n  const { getShopItems } = useFirestore();\n\n  useEffect(() => {\n    (async () => {\n      const itemsList = await getShopItems();\n      setItems(itemsList);\n    })();\n  }, [])\n\n  return (\n    <div>\n      <Nav />\n      <ShopNav />\n      <Shop>\n        <ShopList>\n        {\n          items.map(item => {\n            return (\n              <li>\n                <ShopItemPreview \n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                />\n              </li>\n            )\n          })\n        }\n        </ShopList>\n      </Shop>\n    </div>\n  )\n}\n\nexport default ShopCategory\n","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js",["98","99"],"import React, { useState } from 'react';\nimport { useFirestore } from '../../contexts/FirestoreContext';\nimport { useStorage } from '../../contexts/FirestoreStorage';\nimport styled from 'styled-components';\n\nconst Form = styled.form``;\nconst Label = styled.label``;\nconst Field = styled.div`\n  margin: 2rem 0;\n`;\nconst Input = styled.input``;\nconst TextArea = styled.textarea``;\nconst HandleField = styled.button``;\nconst SubmitBtn = styled.button``;\nconst Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 2rem;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n`;\n\nfunction AddShopItem() {\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({\n    depth: 0,\n    height: 0,\n    width: 0,\n  });\n  const [materials, setMaterials] = useState([''])\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState(['']);\n  const [colors, setColors] = useState([\n    {\n      description: '',\n      type: '',\n      value: '#000',\n    },\n  ]);\n  const [additional, setAdditional] = useState([\n    {\n      type: '',\n      information: '',\n    }\n  ]);\n  const [options, setOptions] = useState([{\n    type: '',\n    options: [{ option: '', price: ''}],\n  }])\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { createItem, addItem } = useFirestore();\n  const { uploadItemImage } = useStorage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const item = await createItem();\n    const itemId = item.id;\n\n    // Upload images in the storage and get their urls.\n    const imagesUrls = [];\n    for (let image of images) {\n      const imageUrl = await uploadItemImage(itemId, image);\n      imagesUrls.push(imageUrl);\n    }\n\n    // Format additional informations and options\n    // If the fields are empty, they are ignored.\n    const formattedAdditional = {};\n    for (let information of additional) {\n      if (information.type !== '' && information.information !== '') {\n        formattedAdditional[information.type] = information.information;\n      }\n    }\n\n    // Remove empty fields\n    const formattedMaterials = [...materials].filter(material => material !== '');\n    const formattedCategories = [...categories].filter(category => category !== '');\n\n    const formattedOptions = {};\n    for (let option of options) {\n      if (option.type !== '' && option.options.option !== '' && option.options.price !== '') {\n        formattedOptions[option.type] = [...option.options];\n      }\n    }\n\n    // Adds the shop item information in the firestore.\n    addItem(\n      itemId,\n      name,\n      price,\n      dimensions,\n      imagesUrls,\n      description,\n      colors,\n      formattedAdditional,\n      formattedOptions,\n      formattedMaterials,\n      formattedCategories,\n    )\n  };\n\n  const addImages = (e) => {\n    e.preventDefault();\n    if (e.target.files.length === 0) return;\n    setImages(e.target.files);\n\n    const preview = [];\n    for (let file of e.target.files) {\n      preview.push(URL.createObjectURL(file));\n    }\n    setImagesPreview(preview);\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label>Name</Label>\n          <Input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <Label>Price</Label>\n          <Input\n            type='number'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <div>Dimensions</div>\n          <Label>Depth</Label>\n          <Input\n            type='number'\n            value={dimensions.depth}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, depth: +e.target.value })\n            }\n          />\n\n          <Label>Height</Label>\n          <Input\n            type='number'\n            value={dimensions.height}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, height: +e.target.value })\n            }\n          />\n\n          <Label>Width</Label>\n          <Input\n            type='text'\n            value={dimensions.width}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, width: +e.target.value })\n            }\n          />\n        </Field>\n\n        <Field>\n          <div>Materials</div>\n\n          {materials.map((material, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={material}\n                  onChange={(e) =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials[index] = e.target.value;\n                      return materials;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials.splice(index, 1);\n                      return materials;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setMaterials([...materials, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <Label>Description</Label>\n          <TextArea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <div>Colors</div>\n\n          {colors.map((color, index) => {\n            return (\n              <div>\n                <Label>Description</Label>\n                <Input\n                  type='text'\n                  value={color.description}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].description = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={color.type}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].type = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Value</Label>\n                <Input\n                  type='color'\n                  value={color.value}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].value = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors.splice(index, 1);\n                      return colors;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setColors([...colors, { description: '', type: '', value: '#000' }])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Categories</div>\n\n          {categories.map((category, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={category}\n                  onChange={(e) =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories[index] = e.target.value;\n                      return categories;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories.splice(index, 1);\n                      return categories;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setCategories([...categories, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Options</div>\n\n          {options.map((option, indexOption) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={option.type}\n                  onChange={(e) =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options[indexOption].type = e.target.value;\n                      return options;\n                    })\n                  }\n                />\n\n                <Field>\n                  <Label>Options</Label>\n\n                  {option.options.map((choice, indexChoice) => {\n                    return (\n                      <div>\n                        <Label>Option</Label>\n                        <Input\n                          type='text'\n                          value={choice.option}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].option = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                        <Label>Price</Label>\n                        <Input\n                          type='number'\n                          value={choice.price}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].price = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                      <HandleField\n                        type='button'\n                        onClick={() => {\n                          const newOptions = [...options];\n                          newOptions[indexOption].options.splice(indexChoice, 1);\n                          setOptions(newOptions)\n                        }}\n                      >\n                        Remove Choice\n                      </HandleField>\n                      </div>\n                    )\n                  })}\n\n            <HandleField\n              type='button'\n              onClick={() => {\n                const newOptions = [...options];\n                newOptions[indexOption].options = [...options[indexOption].options, { option: '', price : ''}];\n                setOptions(newOptions)\n              }}\n            >\n              Add Choice\n            </HandleField>\n          </Field>\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options.splice(indexOption, 1);\n                      return options;\n                    })\n                  }\n                >\n                  Remove Option\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setOptions([...options, { type: '', options: ['']}])\n            }\n          >\n            Add Option\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Additional</div>\n\n          {additional.map((add, index) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={add.type}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].type = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <Label>Information</Label>\n                <Input\n                  type='text'\n                  value={add.information}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].information = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional.splice(index, 1);\n                      return additional;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setAdditional([...additional, { type: '', information: ''}])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <input\n            type='file'\n            id='avatar'\n            name='avatar'\n            multiple\n            onChange={addImages}\n          />\n\n          <Preview>\n          {imagesPreview.map(image => {\n            return (\n              <Image src={image} alt='preview'/>\n            )\n          })}\n        </Preview>\n        </Field>\n\n\n      <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddShopItem;\n","/home/aureen/the_odin_project/room_homepage/src/contexts/FirestoreStorage.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopItemPreview.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/ShopItemDetails.js",["100"],"import React, { useState, useEffect } from 'react';\nimport ImagesPreview from '../components/shop/ImagesPreview';\nimport { useFirestore } from '../contexts/FirestoreContext';\n\nfunction ShopItemDetails({ match }) {\n\n  const [item, setItem] = useState({})\n  const [loading, setLoading] = useState(true);\n  const { getItem } = useFirestore();\n\n  useEffect(() => {\n    (async () => {\n      const itemId = match.params.id;\n      const item = await getItem(itemId);\n      setItem(item);\n      setLoading(false);\n    })();\n  }, [])\n\n  return (\n    <div>\n      {!loading && \n        <ImagesPreview images={item.images} size={35} />\n      }\n    </div>\n  )\n}\n\nexport default ShopItemDetails\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/ImageMagnifier.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ImagesPreview.js",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":101,"column":6,"nodeType":"108","endLine":101,"endColumn":8,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"107","line":153,"column":6,"nodeType":"108","endLine":153,"endColumn":8,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"111","line":157,"column":6,"nodeType":"108","endLine":157,"endColumn":8,"suggestions":"112"},{"ruleId":"106","severity":1,"message":"113","line":31,"column":6,"nodeType":"108","endLine":31,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":56,"column":10,"nodeType":"117","messageId":"118","endLine":56,"endColumn":17},{"ruleId":"115","severity":1,"message":"119","line":56,"column":19,"nodeType":"117","messageId":"118","endLine":56,"endColumn":29},{"ruleId":"106","severity":1,"message":"120","line":18,"column":6,"nodeType":"108","endLine":18,"endColumn":8,"suggestions":"121"},{"ruleId":"106","severity":1,"message":"122","line":93,"column":6,"nodeType":"108","endLine":93,"endColumn":8,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getShopCategories'. Either include it or remove the dependency array.","ArrayExpression",["126"],["127"],"React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array. If 'setHeight' needs the current value of 'nav', you can also switch to useReducer instead of useState and read 'nav' in the reducer.",["128"],"React Hook useEffect has a missing dependency: 'getShopItems'. Either include it or remove the dependency array.",["129"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getItem' and 'match.params.id'. Either include them or remove the dependency array.",["130"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [getShopCategories]",{"range":"143","text":"144"},{"range":"145","text":"144"},"Update the dependencies array to be: [nav]",{"range":"146","text":"147"},"Update the dependencies array to be: [getShopItems]",{"range":"148","text":"149"},"Update the dependencies array to be: [getItem, match.params.id]",{"range":"150","text":"151"},"Update the dependencies array to be: [images]",{"range":"152","text":"153"},[2202,2204],"[getShopCategories]",[3748,3750],[3820,3822],"[nav]",[767,769],"[getShopItems]",[521,523],"[getItem, match.params.id]",[2466,2468],"[images]"]