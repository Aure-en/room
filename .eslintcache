[{"/home/aureen/the_odin_project/room_homepage/src/index.js":"1","/home/aureen/the_odin_project/room_homepage/src/App.js":"2","/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js":"3","/home/aureen/the_odin_project/room_homepage/src/components/Nav.js":"4","/home/aureen/the_odin_project/room_homepage/src/routes/Home.js":"5","/home/aureen/the_odin_project/room_homepage/src/routes/About.js":"6","/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js":"7","/home/aureen/the_odin_project/room_homepage/src/components/shop/Nav.js":"8","/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js":"9","/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopNav.js":"10","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js":"11","/home/aureen/the_odin_project/room_homepage/src/components/shop/SideNav.js":"12","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js":"13","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js":"14","/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopItemPreview.js":"15","/home/aureen/the_odin_project/room_homepage/src/components/shop/ImageMagnifier.js":"16","/home/aureen/the_odin_project/room_homepage/src/components/shop/ImagesPreview.js":"17","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js":"18","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js":"19","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Entry.js":"20","/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js":"21","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Cart.js":"22","/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js":"23","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js":"24","/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js":"25","/home/aureen/the_odin_project/room_homepage/src/components/shop/CartItem.js":"26","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Payment.js":"27"},{"size":196,"mtime":1609276298431,"results":"28","hashOfConfig":"29"},{"size":1281,"mtime":1610225899473,"results":"30","hashOfConfig":"29"},{"size":6382,"mtime":1609897554911,"results":"31","hashOfConfig":"29"},{"size":3666,"mtime":1610130706594,"results":"32","hashOfConfig":"29"},{"size":1920,"mtime":1610136540360,"results":"33","hashOfConfig":"29"},{"size":3008,"mtime":1609428950172,"results":"34","hashOfConfig":"29"},{"size":6766,"mtime":1609617837844,"results":"35","hashOfConfig":"29"},{"size":2483,"mtime":1609894329878,"results":"36","hashOfConfig":"29"},{"size":638,"mtime":1609684266259,"results":"37","hashOfConfig":"29"},{"size":4745,"mtime":1610217732413,"results":"38","hashOfConfig":"29"},{"size":444,"mtime":1609943979178,"results":"39","hashOfConfig":"29"},{"size":6142,"mtime":1610219984641,"results":"40","hashOfConfig":"29"},{"size":204,"mtime":1609688437554,"results":"41","hashOfConfig":"29"},{"size":14693,"mtime":1610218541708,"results":"42","hashOfConfig":"29"},{"size":1261,"mtime":1609937032872,"results":"43","hashOfConfig":"29"},{"size":1651,"mtime":1609880709607,"results":"44","hashOfConfig":"29"},{"size":5356,"mtime":1609894380916,"results":"45","hashOfConfig":"29"},{"size":1214,"mtime":1610216837894,"results":"46","hashOfConfig":"29"},{"size":1378,"mtime":1610218581044,"results":"47","hashOfConfig":"29"},{"size":272,"mtime":1610130999288,"results":"48","hashOfConfig":"29"},{"size":14674,"mtime":1610218591876,"results":"49","hashOfConfig":"29"},{"size":7390,"mtime":1610225833313,"results":"50","hashOfConfig":"29"},{"size":4241,"mtime":1610220435349,"results":"51","hashOfConfig":"29"},{"size":2340,"mtime":1610224808965,"results":"52","hashOfConfig":"29"},{"size":339,"mtime":1610218609100,"results":"53","hashOfConfig":"29"},{"size":3272,"mtime":1610225488073,"results":"54","hashOfConfig":"29"},{"size":117,"mtime":1610225857125,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1yklksh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aureen/the_odin_project/room_homepage/src/index.js",[],["117","118"],"/home/aureen/the_odin_project/room_homepage/src/App.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Home.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/About.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopNav.js",["119"],"import React, { useEffect, useState, useRef } from 'react';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../utils/utils';\nimport { Link } from 'react-router-dom';\n\n// Styled components\n\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey\n  secondaryBright: 'hsl(0, 0%, 40%)', // Brighter grey\n  tertiary: 'hsl(0, 0%, 100%)', // White\n};\n\nconst Container = styled.nav`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: ${colors.secondary};\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 900px;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  z-index: 3;\n  background: ${colors.tertiary};\n  top: ${(props) => props.margin}px;\n  width: 100%;\n  box-shadow: 0 0px 4px -3px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Category = styled.span`\n  cursor: pointer;\n  flex: 1;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 0 calc(0.75rem - 2px) 0;\n  border-bottom: 2px solid transparent;\n\n  &:hover {\n    border-bottom: 2px solid ${colors.tertiary};\n  }\n`;\n\nconst Subcategory = styled.span`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Item = styled.span`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n\n  &:hover {\n    color: ${colors.primary};\n    text-decoration: underline;\n  }\n`;\n\n// Displays shopping categories (types of furnitures...)\nfunction ShopNav() {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [dropdown, setDropdown] = useState(false);\n  const [hovered, setHovered] = useState('');\n  const navRef = useRef();\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  return (\n    <Container\n      onMouseLeave={() => {\n        setDropdown(false);\n      }}\n    >\n      <Nav ref={navRef}>\n        {/* Sort the categories by order before displaying them */}\n        {Object.keys(categories)\n          .sort((a, b) => categories[a].order - categories[b].order)\n          .map((category, index) => {\n            return (\n              <Category\n                key={category + index}\n                onMouseOver={() => {\n                  setDropdown(true);\n                  setHovered(category);\n                }}\n              >\n                <Link to={`/shop/${encodeURIComponent(category)}`}>\n                  {formatNavLink(category)}\n                </Link>\n              </Category>\n            );\n          })}\n      </Nav>\n\n      {dropdown && Object.keys(categories[hovered].categories).length !== 0 && (\n        <DropdownContainer margin={navRef.current.offsetHeight}>\n          <Dropdown>\n            {/* Sort the subcategories by order before displaying them */}\n            {Object.keys(categories[hovered].categories)\n              .sort(\n                (a, b) =>\n                  categories[hovered].categories[a].order -\n                  categories[hovered].categories[b].order\n              )\n              .map((subcategory, index) => {\n                return (\n                  <Column key={subcategory + index}>\n                    <Subcategory>\n                      <Link to={`/shop/${encodeURIComponent(subcategory)}`}>\n                        {formatNavLink(subcategory)}\n                      </Link>\n                    </Subcategory>\n                    <div>\n                      {categories[hovered].categories[\n                        subcategory\n                      ].categories.map((item, index) => {\n                        return (\n                          <Item key={item + index}>\n                            <Link to={`/shop/${encodeURIComponent(item)}`}>\n                              {formatNavLink(item)}\n                            </Link>\n                          </Item>\n                        );\n                      })}\n                    </div>\n                  </Column>\n                );\n              })}\n          </Dropdown>\n        </DropdownContainer>\n      )}\n    </Container>\n  );\n}\n\nexport default ShopNav;\n","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/SideNav.js",["120","121"],"import React, { useEffect, useState } from 'react';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport styled from 'styled-components';\nimport { formatNavLink } from '../../utils/utils';\n\n// Icons\nimport { ReactComponent as Hamburger } from '../../assets/icons/icon-hamburger.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 0%)', // Black\n  secondary: 'hsl(0, 0%, 27%)', // Grey,\n  tertiary: 'hsl(0, 0%, 100%)', // White\n  background: 'hsl(0, 0%, 100%)',\n};\n\nconst Icon = styled.button`\n  color: ${colors.secondary};\n  margin: 0.5rem;\n  cursor: pointer;\n\n  &:hover {\n    color: ${colors.primary};\n  }\n`;\n\nconst Container = styled.nav`\n  display: flex;\n  position: absolute;\n  left: 0;\n  top: ${(props) => props.top}px;\n  height: calc(100% - ${(props) => props.top}px);\n  border-top: 1px solid ${colors.secondary};\n  background: ${colors.secondary};\n  font-size: 0.825rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  transition: all 0.3s linear;\n  transform: translateX(${(props) => (props.isNavOpen ? '0' : '-100')}%);\n\n  @media all and (max-width: 600px) {\n    width: ${props => props.isDropdownOpen ? '100vw' : 'initial'};\n    max-width: ${props => props.isDropdownOpen ? '100%' : 'initial'};\n  }\n\n  @media all and (max-width: 500px) {\n    height: initial;\n  }\n`;\n\nconst Nav = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 1rem 0;\n`;\n\nconst Category = styled.a`\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 600;\n  color: ${colors.tertiary};\n  padding: 0.75rem 2rem calc(0.75rem - 2px) 2rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '3')}%);\n  }\n\n  &:after {\n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: '';\n    display: block;\n    width: 2px;\n    left: 1rem;\n    position: absolute;\n    background: #fff;\n    transition: height 0.3s ease 0s, top 0.3s ease 0s;\n    height: ${(props) => (props.selected ? '90%' : '0')};\n    top: ${(props) => (props.selected ? '5%' : '50%')};\n  }\n`;\n\nconst DropdownContainer = styled.div`\n  background: ${colors.tertiary};\n  width: 100%;\n  box-shadow: 0 5px 5px ${colors.secondary};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-flow: row;\n  grid-gap: 3rem 1rem;\n  justify-content: center;\n  padding: 1.5rem;\n  background: ${colors.tertiary};\n  font-size: 0.825rem;\n\n  @media all and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Column = styled.div`\n  margin: 0 1rem;\n`;\n\nconst Subcategory = styled.a`\n  position: relative;\n  display: inline-block;\n  color: ${colors.primary};\n  text-transform: uppercase;\n  cursor: pointer;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  transition: all 0.15s ease;\n\n  &:hover {\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nconst Item = styled.a`\n  padding: 0.25rem 0;\n  cursor: pointer;\n  display: block;\n  color: ${colors.secondary};\n  border-bottom: 1px solid transparent;\n  transition: all 0.15s ease;\n\n  &:hover {\n    color: ${colors.primary};\n    transform: translateX(${(props) => (props.selected ? '0' : '2')}%);\n  }\n`;\n\nfunction SideNav({ nav }) {\n  const { getShopCategories } = useFirestore();\n  const [categories, setCategories] = useState([]);\n  const [isNavOpen, setIsNavOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [activeCategory, setActiveCategory] = useState('');\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const categories = await getShopCategories();\n      setCategories(categories);\n    })();\n  }, []);\n\n  useEffect(() => {\n    setHeight(nav.current.offsetHeight);\n  }, []);\n\n  return (\n    <>\n      <Icon onClick={() => {\n        setIsNavOpen(!isNavOpen);\n        isNavOpen && setIsDropdownOpen(false);\n      }}>\n        <Hamburger />\n      </Icon>\n\n      <Container\n        top={height}\n        isNavOpen={isNavOpen}\n        isDropdownOpen={isDropdownOpen}\n      >\n        <Nav>\n          {/* Sort the categories by order before displaying them */}\n          {Object.keys(categories)\n            .sort((a, b) => categories[a].order - categories[b].order)\n            .map((category, index) => {\n              return (\n                <Category\n                  key={category + index}\n                  selected={activeCategory === category}\n                  onClick={() => {\n                    setIsDropdownOpen(true);\n                    setActiveCategory(category);\n                  }}\n                >\n                  {formatNavLink(category)}\n                </Category>\n              );\n            })}\n        </Nav>\n\n        {isDropdownOpen && Object.keys(categories[activeCategory].categories).length !== 0 && isNavOpen && (\n          <DropdownContainer>\n            <Dropdown>\n              {/* Sort the subcategories by order before displaying them */}\n              {Object.keys(categories[activeCategory].categories)\n                .sort(\n                  (a, b) =>\n                    categories[activeCategory].categories[a].order -\n                    categories[activeCategory].categories[b].order\n                )\n                .map((subcategory, index) => {\n                  return (\n                    <Column key={subcategory + index}>\n                      <Subcategory>{formatNavLink(subcategory)}</Subcategory>\n                      <div>\n                        {categories[activeCategory].categories[\n                          subcategory\n                        ].categories.map((item, index) => {\n                          return (\n                            <Item key={item + index}>\n                              {formatNavLink(item)}\n                            </Item>\n                          );\n                        })}\n                      </div>\n                    </Column>\n                  );\n                })}\n            </Dropdown>\n          </DropdownContainer>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default SideNav;\n","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js",["122","123"],"import React, { useState } from 'react';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useStorage } from '../../hooks/useStorage';\nimport styled from 'styled-components';\n\nconst Form = styled.form``;\nconst Label = styled.label``;\nconst Field = styled.div`\n  margin: 2rem 0;\n`;\nconst Input = styled.input``;\nconst TextArea = styled.textarea``;\nconst HandleField = styled.button``;\nconst SubmitBtn = styled.button``;\nconst Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 2rem;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n`;\n\nfunction AddShopItem() {\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({\n    depth: 0,\n    height: 0,\n    width: 0,\n  });\n  const [materials, setMaterials] = useState([''])\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState(['']);\n  const [colors, setColors] = useState([\n    {\n      description: '',\n      type: '',\n      value: '#000',\n    },\n  ]);\n  const [additional, setAdditional] = useState([\n    {\n      type: '',\n      information: '',\n    }\n  ]);\n  const [options, setOptions] = useState([{\n    type: '',\n    options: [{ option: '', price: ''}],\n  }])\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { createItem, addItem } = useFirestore();\n  const { uploadItemImage } = useStorage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const item = await createItem();\n    const itemId = item.id;\n\n    // Upload images in the storage and get their urls.\n    const imagesUrls = [];\n    for (let image of images) {\n      const imageUrl = await uploadItemImage(itemId, image);\n      imagesUrls.push(imageUrl);\n    }\n\n    // Format additional informations and options\n    // If the fields are empty, they are ignored.\n    const formattedAdditional = {};\n    for (let information of additional) {\n      if (information.type !== '' && information.information !== '') {\n        formattedAdditional[information.type] = information.information;\n      }\n    }\n\n    // Remove empty fields\n    const formattedMaterials = [...materials].filter(material => material !== '');\n    const formattedCategories = [...categories].filter(category => category !== '');\n\n    const formattedOptions = {};\n    for (let option of options) {\n      if (option.type !== '' && option.options.option !== '' && option.options.price !== '') {\n        formattedOptions[option.type] = [...option.options];\n      }\n    }\n\n    // Adds the shop item information in the firestore.\n    addItem(\n      itemId,\n      name,\n      price,\n      dimensions,\n      imagesUrls,\n      description,\n      colors,\n      formattedAdditional,\n      formattedOptions,\n      formattedMaterials,\n      formattedCategories,\n    )\n  };\n\n  const addImages = (e) => {\n    e.preventDefault();\n    if (e.target.files.length === 0) return;\n    setImages(e.target.files);\n\n    const preview = [];\n    for (let file of e.target.files) {\n      preview.push(URL.createObjectURL(file));\n    }\n    setImagesPreview(preview);\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label>Name</Label>\n          <Input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <Label>Price</Label>\n          <Input\n            type='number'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <div>Dimensions</div>\n          <Label>Depth</Label>\n          <Input\n            type='number'\n            value={dimensions.depth}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, depth: +e.target.value })\n            }\n          />\n\n          <Label>Height</Label>\n          <Input\n            type='number'\n            value={dimensions.height}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, height: +e.target.value })\n            }\n          />\n\n          <Label>Width</Label>\n          <Input\n            type='text'\n            value={dimensions.width}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, width: +e.target.value })\n            }\n          />\n        </Field>\n\n        <Field>\n          <div>Materials</div>\n\n          {materials.map((material, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={material}\n                  onChange={(e) =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials[index] = e.target.value;\n                      return materials;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials.splice(index, 1);\n                      return materials;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setMaterials([...materials, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <Label>Description</Label>\n          <TextArea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <div>Colors</div>\n\n          {colors.map((color, index) => {\n            return (\n              <div>\n                <Label>Description</Label>\n                <Input\n                  type='text'\n                  value={color.description}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].description = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={color.type}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].type = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Value</Label>\n                <Input\n                  type='color'\n                  value={color.value}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].value = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors.splice(index, 1);\n                      return colors;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setColors([...colors, { description: '', type: '', value: '#000' }])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Categories</div>\n\n          {categories.map((category, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={category}\n                  onChange={(e) =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories[index] = e.target.value;\n                      return categories;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories.splice(index, 1);\n                      return categories;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setCategories([...categories, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Options</div>\n\n          {options.map((option, indexOption) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={option.type}\n                  onChange={(e) =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options[indexOption].type = e.target.value;\n                      return options;\n                    })\n                  }\n                />\n\n                <Field>\n                  <Label>Options</Label>\n\n                  {option.options.map((choice, indexChoice) => {\n                    return (\n                      <div>\n                        <Label>Option</Label>\n                        <Input\n                          type='text'\n                          value={choice.option}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].option = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                        <Label>Price</Label>\n                        <Input\n                          type='number'\n                          value={choice.price}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].price = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                      <HandleField\n                        type='button'\n                        onClick={() => {\n                          const newOptions = [...options];\n                          newOptions[indexOption].options.splice(indexChoice, 1);\n                          setOptions(newOptions)\n                        }}\n                      >\n                        Remove Choice\n                      </HandleField>\n                      </div>\n                    )\n                  })}\n\n            <HandleField\n              type='button'\n              onClick={() => {\n                const newOptions = [...options];\n                newOptions[indexOption].options = [...options[indexOption].options, { option: '', price : ''}];\n                setOptions(newOptions)\n              }}\n            >\n              Add Choice\n            </HandleField>\n          </Field>\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options.splice(indexOption, 1);\n                      return options;\n                    })\n                  }\n                >\n                  Remove Option\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setOptions([...options, { type: '', options: ['']}])\n            }\n          >\n            Add Option\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Additional</div>\n\n          {additional.map((add, index) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={add.type}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].type = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <Label>Information</Label>\n                <Input\n                  type='text'\n                  value={add.information}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].information = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional.splice(index, 1);\n                      return additional;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setAdditional([...additional, { type: '', information: ''}])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <input\n            type='file'\n            id='avatar'\n            name='avatar'\n            multiple\n            onChange={addImages}\n          />\n\n          <Preview>\n          {imagesPreview.map(image => {\n            return (\n              <Image src={image} alt='preview'/>\n            )\n          })}\n        </Preview>\n        </Field>\n\n\n      <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddShopItem;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/ShopItemPreview.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ImageMagnifier.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/ImagesPreview.js",["124"],"import React, { useState, useEffect } from 'react';\nimport ImageMagnifier from './ImageMagnifier';\nimport styled from 'styled-components';\nimport { CSSTransition } from 'react-transition-group';\n\n// Svgs\nimport { ReactComponent as AngleLeft } from '../../assets/icons/icon-angle-left.svg';\nimport { ReactComponent as AngleRight } from '../../assets/icons/icon-angle-right.svg';\n\nconst colors = {\n  border: 'hsl(0, 0%, 80%)',\n  button: 'hsl(0, 0%, 50%)',\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${(props) => props.size}rem;\n  height: ${(props) => props.size}rem;\n  border: 1px solid ${colors.border};\n`;\n\nconst Carousel = styled.div`\n  width: ${(props) => props.size}rem;\n  height: calc((${(props) => props.size}rem - 7rem) / 4);\n  margin-top: 1rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  width: 2rem;\n  padding: 0;\n  cursor: pointer;\n  color: ${colors.button};\n`;\n\nconst Gallery = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\n\nconst Slides = styled.ul`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n  transition: transform ${(props) => props.transitionDuration}s linear;\n  transform: translateX(${(props) => props.transition}%);\n`;\n\nconst Slide = styled.li`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 1rem;\n`;\n\nconst Preview = styled.div`\n  height: calc((${(props) => props.size}rem - 7rem) / 4);\n  width: calc((${(props) => props.size}rem - 7rem) / 4);\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border: 1px solid ${colors.border};\n`;\n\nfunction ImagesPreview({ images, size }) {\n  const [currentImage, setCurrentImage] = useState(images[0]);\n  const [slides, setSlides] = useState([]);\n  const [transition, setTransition] = useState(0);\n  const [transitionDuration, setTransitionDuration] = useState(0.3);\n  const [isImageChanging, setIsImageChanging] = useState(false);\n\n  // Organize slides.\n  // 1 \"slide\" = 1 group of 4 mini preview pictures.\n  useEffect(() => {\n    const slides = [];\n    images.forEach((image, index) => {\n      index % 4 === 0\n        ? slides.push([image])\n        : slides[slides.length - 1].push(image);\n    });\n\n    // If there aren't enough preview images to fill the last slide, empty space is added to compensate.\n    while (slides[slides.length - 1].length < 4) {\n      slides[slides.length - 1].push(null);\n    }\n    setSlides(slides);\n  }, []);\n\n  // Functions to change slide\n  const next = () => {\n    setTransition((prev) => prev - 100);\n  };\n\n  const previous = () => {\n    setTransition((prev) => prev + 100);\n  };\n\n  /* At the end of each slider transition:\n  - The transition duration is set to 0. It allows us to silently reset transform: translateX to 0.\n  - The slides order is changed so that there is always a \"previous slide\" and a \"next slide\" to go to without jumping too far.\n  - Thanks to useEffect, the transition duration is put back to 0.3s to have a smooth animation.\n  */\n\n  const handleTransitionEnd = () => {\n    setTransitionDuration(0);\n    setTransition(0);\n    setSlides((prev) => {\n      const slides = [...prev];\n      const prevSlide = slides.shift();\n      slides.push(prevSlide);\n      return slides;\n    });\n  };\n\n  useEffect(() => {\n    if (transitionDuration === 0) {\n      setTransitionDuration(0.3);\n    }\n  }, [transitionDuration]);\n\n  useEffect(() => {\n    if (isImageChanging) {\n      setTimeout(() => setIsImageChanging(false), 350)\n    }\n  }, [isImageChanging]);\n\n  return (\n    <div>\n      <Container size={size}>\n        <CSSTransition\n          in={isImageChanging}\n          timeout={350}\n          classNames='image-preview'\n        >\n          <ImageMagnifier image={currentImage} />\n        </CSSTransition>\n      </Container>\n\n      <Carousel size={size}>\n        <Button onClick={previous} disabled={slides.length < 2}>\n          <AngleLeft />\n        </Button>\n        <Gallery>\n          <Slides\n            onTransitionEnd={handleTransitionEnd}\n            transition={transition}\n            transitionDuration={transitionDuration}\n          >\n            {slides.map((slide, index) => {\n              return (\n                <Slide size={size} key={index}>\n                  {slides &&\n                    slide.map((image, index) => {\n                      if (image) {\n                        return (\n                          <Preview size={size} key={image}>\n                            <Image\n                              src={image}\n                              alt='Item Preview'\n                              onClick={() => {\n                                if (currentImage === image) return;\n                                setIsImageChanging(true);\n                                setCurrentImage(image);\n                              }}\n                            />\n                          </Preview>\n                        );\n                      } else {\n                        return <Preview size={size} key={`empty-${index}`}/>;\n                      }\n                    })}\n                </Slide>\n              );\n            })}\n          </Slides>\n        </Gallery>\n        <Button onClick={next} disabled={slides.length < 2}>\n          <AngleRight />\n        </Button>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default ImagesPreview;\n","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js",["125"],"import React, { useState, useEffect } from 'react'\nimport Nav from '../../components/shop/Nav';\nimport ShopNav from '../../components/shop/ShopNav';\nimport ShopItemPreview from '../../components/shop/ShopItemPreview';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport styled from 'styled-components'\n\nconst ShopList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  max-width: 80%;\n  grid-gap: 3vw;\n`\n\nconst Shop = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5rem;\n`;\n\nfunction Category({ match }) {\n\n  const [items, setItems] = useState([])\n  const { getCategoryItems } = useFirestore();\n\n  useEffect(() => {\n    (async () => {\n      const itemsList = await getCategoryItems(decodeURIComponent(match.params.category));\n      setItems(itemsList);\n    })();\n  }, [match])\n\n  return (\n    <div>\n      <header>\n        <Nav />\n        <ShopNav />\n      </header>\n      <Shop>\n        <ShopList>\n        {\n          items.map(item => {\n            return (\n              <li key={item.id}>\n                <ShopItemPreview \n                  name={item.name}\n                  images={item.images}\n                  price={item.price}\n                  id={item.id}\n                />\n              </li>\n            )\n          })\n        }\n        </ShopList>\n      </Shop>\n    </div>\n  )\n}\n\nexport default Category\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Entry.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js",["126"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { formatNavLink } from '../../utils/utils';\nimport ImagesPreview from '../../components/shop/ImagesPreview';\nimport Nav from '../../components/shop/Nav';\nimport ShopNav from '../../components/shop/ShopNav';\nimport { CSSTransition } from 'react-transition-group';\n\n// Icons\nimport { ReactComponent as AngleRight } from '../../assets/icons/icon-small-arrow.svg';\nimport { ReactComponent as Plus } from '../../assets/icons/icon-plus.svg';\nimport iconX from '../../assets/icons/icon-x.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 15%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 70%)', // Bright Grey\n  text: 'hsl(0, 0%, 35%)',\n  button: 'hsl(0, 0%, 100%)', // White\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n\nconst Center = styled.section`\n  width: 90vw;\n  max-width: 1200px;\n`;\n\n// Category Links above the item preview\nconst Category = styled.div`\n  display: flex;\n  align-items: center;\n  text-transform: uppercase;\n  font-size: 0.825rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst CategoryLink = styled.span`\n  color: ${colors.primary};\n\n  &:hover {\n    color: ${colors.secondary};\n  }\n`;\n\nconst ArrowIcon = styled.span`\n  display: inline-block;\n  margin: 2px 0.5rem 0 0.5rem;\n  color: ${colors.primary};\n`;\n\n// Informations about the item\nconst Informations = styled.div`\n  display: flex;\n`;\n\nconst Description = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  text-align: justify;\n  color: ${colors.text};\n  line-height: 1.25rem;\n`;\n\nconst Details = styled.div`\n  margin-left: 5rem;\n\n  & > * {\n    margin-bottom: 1.5rem;\n  }\n`;\n\nconst Name = styled.h2`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 1.25rem;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\n// Selection and adding to basket\n\nconst Selection = styled.form`\n  border-top: 1px solid ${colors.tertiary};\n  border-bottom: 1px solid ${colors.tertiary};\n  padding: 0.5rem 0;\n\n  & > * {\n    margin: 1rem 0;\n  }\n`;\n\nconst Choice = styled.span`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  color: ${colors.text};\n`;\n\nconst TextLabel = styled.span`\n  display: inline-block;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Label = styled.label`\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Checkbox = styled.input`\n  opacity: 0;\n  appearance: none;\n`;\n\nconst SubmitBtn = styled.button`\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 0.825rem;\n  padding: 0.75rem 1.25rem;\n  color: ${colors.button};\n  background: ${colors.primary};\n  transition: all 0.15s linear;\n  cursor: pointer;\n  width: 10.5rem;\n\n  &:hover {\n    letter-spacing: 1.5px;\n  }\n`;\n\n// Select the item's color\nconst ColorList = styled.ul`\n  display: flex;\n`;\n\nconst ColorLabel = styled.label`\n  display: inline-block;\n  width: 2rem;\n  height: 2rem;\n  background-color: ${(props) => props.value};\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.primary : colors.tertiary)};\n  cursor: pointer;\n  margin-right: 0.5rem;\n`;\n\n// Select an option\nconst Options = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr auto);\n`;\n\nconst OptionsField = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst OptionLabel = styled.label`\n  cursor: pointer;\n  border: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  color: ${(props) => (props.isSelected ? colors.secondary : colors.text)};\n  outline: 1px solid\n    ${(props) => (props.isSelected ? colors.secondary : 'transparent')};\n  padding: 0.5rem 1rem;\n  margin-left: 1rem;\n`;\n\n// Select a quantity\nconst Quantity = styled.input`\n  font-family: 'Source Sans Pro', sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n  margin-left: 1rem;\n`;\n\n// Additional informations dropdown\n\nconst Additional = styled.div`\n  border-bottom: 1px solid ${colors.tertiary};\n`;\n\nconst AdditionalBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-family: 'Source Sans Pro', sans-serif;\n  text-transform: uppercase;\n  color: ${colors.secondary};\n  font-weight: 600;\n  font-size: 0.95rem;\n  cursor: pointer;\n  padding: 0;\n  padding-bottom: 1.5rem;\n`;\n\nconst Li = styled.li`\n  padding-left: 1rem;\n  text-indent: -1rem;\n  line-height: 1.25rem;\n\n  &:before {\n    content: '';\n    display: inline-block;\n    width: 15px;\n    height: 15px;\n    margin-bottom: -5px;\n    background: url(${iconX});\n  }\n`;\n\nconst AdditionalLabel = styled.span`\n  font-weight: 600;\n  text-transform: capitalize;\n`;\n\nconst AdditionalInfo = styled.span`\n  color: ${colors.text};\n`;\n\nconst Dropdown = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1.5fr;\n  margin: 0 1.5rem;\n`;\n\nconst DropdownColumn = styled.div`\n  padding-bottom: 1.5rem;\n\n  & > *:first-child {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nfunction ItemDetails({ match }) {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [currentColor, setCurrentColor] = useState('');\n  const [currentOption, setCurrentOption] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  const [areDetailsOpen, setAreDetailsOpen] = useState(false);\n  const { getItem, addToCart } = useFirestore();\n  const { currentUser, signInAnonymously } = useAuth();\n\n  // Fetch the item data and store it in the state\n  useEffect(() => {\n    (async () => {\n      const itemId = match.params.itemId;\n      const item = await getItem(itemId);\n      setItem(item);\n      setLoading(false);\n    })();\n  }, []);\n\n  // Sets the default color and the default option (if there are any)\n  useEffect(() => {\n    if (Object.keys(item).length === 0) return;\n    setCurrentColor(item.colors[0].description);\n\n    if (Object.keys(item.options).length !== 0) {\n      const options = [];\n      for (let key of Object.keys(item.options)) {\n        options.push({ [key]: item.options[key][0].option });\n      }\n      setCurrentOption(options);\n    }\n  }, [item]);\n\n  const handleAddToCart = async (e) => {\n    e.preventDefault();\n\n    // If the user is not signed in, we sign him up anonymously to save his cart and allow him to order.\n    if (!currentUser) {\n      await signInAnonymously();\n    }\n    addToCart(\n      currentUser.uid,\n      item.id,\n      item.name,\n      item.images[0],\n      currentColor,\n      currentOption,\n      quantity,\n      item.type,\n      item.price\n    );\n  };\n\n  return (\n    <>\n      <header>\n        <Nav />\n        <ShopNav />\n      </header>\n\n      <Container>\n        {!loading && (\n          <Center>\n            <Category>\n              <Link to='/'>\n                <CategoryLink>Home</CategoryLink>\n              </Link>\n              <ArrowIcon>\n                <AngleRight />\n              </ArrowIcon>\n              <Link to='/shop'>\n                <CategoryLink>Shop</CategoryLink>\n              </Link>\n\n              {item.categories.map((category) => {\n                return (\n                  <React.Fragment key={category}>\n                    <ArrowIcon>\n                      <AngleRight />\n                    </ArrowIcon>\n                    <Link to={`/shop/${encodeURI(category)}`}>\n                      <CategoryLink>{formatNavLink(category)}</CategoryLink>\n                    </Link>\n                  </React.Fragment>\n                );\n              })}\n            </Category>\n\n            <Informations>\n              <ImagesPreview images={item.images} size={35} />\n              <Details>\n                <Name>{item.name}</Name>\n                <Price>£{item.price}</Price>\n                <Description>\n                  {item.description.map((paragraph, index) => {\n                    return <p key={'description' + index}>{paragraph}</p>;\n                  })}\n                </Description>\n\n                <Selection onSubmit={handleAddToCart}>\n                  <div>\n                    <TextLabel>Color: </TextLabel>\n                    <Choice> {currentColor}</Choice>\n                  </div>\n                  <ColorList>\n                    {item.colors.map((color) => {\n                      return (\n                        <li key={color.description}>\n                          <ColorLabel\n                            htmlFor={color.description}\n                            value={color.value}\n                            title={color.description}\n                            isSelected={currentColor === color.description}\n                          />\n                          <Checkbox\n                            type='checkbox'\n                            id={color.description}\n                            name={color.description}\n                            onClick={(e) => setCurrentColor(e.target.name)}\n                          />\n                        </li>\n                      );\n                    })}\n                  </ColorList>\n\n                  <div>\n                    {Object.keys(item.options).map((option, index) => {\n                      return (\n                        <OptionsField key={option}>\n                          <TextLabel>{option}: </TextLabel>\n                          <Options>\n                            {item.options[option].map((choice) => {\n                              return (\n                                <>\n                                  <OptionLabel\n                                    htmlFor={choice.option}\n                                    isSelected={\n                                      currentOption[index][option] ===\n                                      choice.option\n                                    }\n                                  >\n                                    {choice.option}\n                                  </OptionLabel>\n                                  <Checkbox\n                                    type='checkbox'\n                                    id={choice.option}\n                                    name={choice.option}\n                                    onClick={(e) =>\n                                      setCurrentOption((prev) => {\n                                        return [...prev].map((prevOption) => {\n                                          if (\n                                            Object.keys(prevOption)[0] ===\n                                            option\n                                          ) {\n                                            return { [option]: choice.option };\n                                          } else {\n                                            return prevOption;\n                                          }\n                                        });\n                                      })\n                                    }\n                                  />\n                                </>\n                              );\n                            })}\n                          </Options>\n                        </OptionsField>\n                      );\n                    })}\n                  </div>\n\n                  <Row>\n                    <div>\n                      <Label htmlFor='quantity'>Quantity: </Label>\n                      <Quantity\n                        type='text'\n                        id='quantity'\n                        name='quantity'\n                        value={quantity}\n                        required\n                        onChange={(e) => {\n                          const quantity = e.target.value.replace(\n                            /[^0-9]/g,\n                            ''\n                          );\n                          setQuantity(quantity);\n                        }}\n                        onBlur={(e) => {\n                          if (e.target.value < 1) setQuantity(1);\n                        }}\n                      />\n                    </div>\n                    <SubmitBtn type='submit'>Add to Basket</SubmitBtn>\n                  </Row>\n                </Selection>\n\n                <Additional>\n                  <AdditionalBtn\n                    onClick={() => setAreDetailsOpen(!areDetailsOpen)}\n                  >\n                    Additional Information\n                    <Plus />\n                  </AdditionalBtn>\n\n                  <CSSTransition\n                    in={areDetailsOpen}\n                    timeout={500}\n                    classNames='details'\n                    mountOnEnter={true}\n                  >\n                    <Dropdown>\n                      <DropdownColumn>\n                        <TextLabel>Dimensions (cm)</TextLabel>\n                        <ul>\n                          {Object.keys(item.dimensions).map((dimension) => {\n                            return (\n                              <Li key={dimension}>\n                                <AdditionalLabel>{dimension}:</AdditionalLabel>\n                                <AdditionalInfo>\n                                  {' '}\n                                  {item.dimensions[dimension]}\n                                </AdditionalInfo>\n                              </Li>\n                            );\n                          })}\n                        </ul>\n                      </DropdownColumn>\n\n                      <DropdownColumn>\n                        <TextLabel>Details</TextLabel>\n                        <ul>\n                          {Object.keys(item.additional).map((info) => {\n                            return (\n                              <Li key={info}>\n                                <AdditionalLabel>{info}:</AdditionalLabel>\n                                <AdditionalInfo>\n                                  {' '}\n                                  {item.additional[info]}\n                                </AdditionalInfo>\n                              </Li>\n                            );\n                          })}\n                        </ul>\n                      </DropdownColumn>\n                    </Dropdown>\n                  </CSSTransition>\n                </Additional>\n              </Details>\n            </Informations>\n          </Center>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default ItemDetails;\n","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Cart.js",["127","128"],"/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/CartItem.js",["129"],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Payment.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":108,"column":6,"nodeType":"136","endLine":108,"endColumn":8,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"135","line":153,"column":6,"nodeType":"136","endLine":153,"endColumn":8,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"139","line":157,"column":6,"nodeType":"136","endLine":157,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":56,"column":10,"nodeType":"143","messageId":"144","endLine":56,"endColumn":17},{"ruleId":"141","severity":1,"message":"145","line":56,"column":19,"nodeType":"143","messageId":"144","endLine":56,"endColumn":29},{"ruleId":"134","severity":1,"message":"146","line":93,"column":6,"nodeType":"136","endLine":93,"endColumn":8,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":31,"column":6,"nodeType":"136","endLine":31,"endColumn":13,"suggestions":"149"},{"ruleId":"134","severity":1,"message":"150","line":276,"column":6,"nodeType":"136","endLine":276,"endColumn":8,"suggestions":"151"},{"ruleId":"134","severity":1,"message":"152","line":207,"column":6,"nodeType":"136","endLine":207,"endColumn":8,"suggestions":"153"},{"ruleId":"134","severity":1,"message":"154","line":216,"column":6,"nodeType":"136","endLine":216,"endColumn":8,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"156","line":86,"column":6,"nodeType":"136","endLine":86,"endColumn":16,"suggestions":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getShopCategories'. Either include it or remove the dependency array.","ArrayExpression",["160"],["161"],"React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array. If 'setHeight' needs the current value of 'nav', you can also switch to useReducer instead of useState and read 'nav' in the reducer.",["162"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has a missing dependency: 'getCategoryItems'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'getItem' and 'match.params.itemId'. Either include them or remove the dependency array.",["165"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getCart'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'cartListener', 'currentUser', and 'getCart'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'currentUser.uid', 'item.id', and 'updateCartQuantity'. Either include them or remove the dependency array.",["168"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [getShopCategories]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [nav]",{"range":"189","text":"190"},"Update the dependencies array to be: [images]",{"range":"191","text":"192"},"Update the dependencies array to be: [getCategoryItems, match]",{"range":"193","text":"194"},"Update the dependencies array to be: [getItem, match.params.itemId]",{"range":"195","text":"196"},"Update the dependencies array to be: [currentUser, getCart]",{"range":"197","text":"198"},"Update the dependencies array to be: [cartListener, currentUser, getCart]",{"range":"199","text":"200"},"Update the dependencies array to be: [currentUser.uid, item.id, quantity, updateCartQuantity]",{"range":"201","text":"202"},[2427,2429],"[getShopCategories]",[3741,3743],[3813,3815],"[nav]",[2466,2468],"[images]",[826,833],"[getCategoryItems, match]",[6062,6064],"[getItem, match.params.itemId]",[4075,4077],"[currentUser, getCart]",[4308,4310],"[cartListener, currentUser, getCart]",[1864,1874],"[currentUser.uid, item.id, quantity, updateCartQuantity]"]