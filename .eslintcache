[{"/home/aureen/the_odin_project/room_homepage/src/index.js":"1","/home/aureen/the_odin_project/room_homepage/src/App.js":"2","/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js":"3","/home/aureen/the_odin_project/room_homepage/src/components/Nav.js":"4","/home/aureen/the_odin_project/room_homepage/src/routes/Home.js":"5","/home/aureen/the_odin_project/room_homepage/src/routes/About.js":"6","/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js":"7","/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js":"8","/home/aureen/the_odin_project/room_homepage/src/utils/utils.js":"9","/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js":"10","/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js":"11","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js":"12","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js":"13","/home/aureen/the_odin_project/room_homepage/src/routes/shop/Entry.js":"14","/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js":"15","/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js":"16","/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js":"17","/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js":"18","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.js":"19","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.js":"20","/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.js":"21","/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.js":"22","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ShopItemPreview.js":"23","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImagesPreview.js":"24","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImageMagnifier.js":"25","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.js":"26","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.js":"27","/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.js":"28","/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.js":"29"},{"size":196,"mtime":1609276298431,"results":"30","hashOfConfig":"31"},{"size":1424,"mtime":1610237265824,"results":"32","hashOfConfig":"31"},{"size":6382,"mtime":1609897554911,"results":"33","hashOfConfig":"31"},{"size":3666,"mtime":1610130706594,"results":"34","hashOfConfig":"31"},{"size":1920,"mtime":1610136540360,"results":"35","hashOfConfig":"31"},{"size":3008,"mtime":1609428950172,"results":"36","hashOfConfig":"31"},{"size":6757,"mtime":1610233399360,"results":"37","hashOfConfig":"31"},{"size":638,"mtime":1609684266259,"results":"38","hashOfConfig":"31"},{"size":444,"mtime":1609943979178,"results":"39","hashOfConfig":"31"},{"size":204,"mtime":1609688437554,"results":"40","hashOfConfig":"31"},{"size":14693,"mtime":1610218541708,"results":"41","hashOfConfig":"31"},{"size":1214,"mtime":1610216837894,"results":"42","hashOfConfig":"31"},{"size":1392,"mtime":1610232567540,"results":"43","hashOfConfig":"31"},{"size":280,"mtime":1610232575072,"results":"44","hashOfConfig":"31"},{"size":14688,"mtime":1610232587018,"results":"45","hashOfConfig":"31"},{"size":4241,"mtime":1610220435349,"results":"46","hashOfConfig":"31"},{"size":2340,"mtime":1610224808965,"results":"47","hashOfConfig":"31"},{"size":339,"mtime":1610218609100,"results":"48","hashOfConfig":"31"},{"size":2501,"mtime":1610232625625,"results":"49","hashOfConfig":"31"},{"size":4751,"mtime":1610232493291,"results":"50","hashOfConfig":"31"},{"size":6151,"mtime":1610232689793,"results":"51","hashOfConfig":"31"},{"size":3250,"mtime":1610232667122,"results":"52","hashOfConfig":"31"},{"size":1261,"mtime":1610232472328,"results":"53","hashOfConfig":"31"},{"size":5362,"mtime":1610232605035,"results":"54","hashOfConfig":"31"},{"size":1651,"mtime":1610232472069,"results":"55","hashOfConfig":"31"},{"size":7790,"mtime":1610237150815,"results":"56","hashOfConfig":"31"},{"size":117,"mtime":1610236964940,"results":"57","hashOfConfig":"31"},{"size":5182,"mtime":1610240014811,"results":"58","hashOfConfig":"31"},{"size":3424,"mtime":1610242852271,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1yklksh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aureen/the_odin_project/room_homepage/src/index.js",[],["121","122"],"/home/aureen/the_odin_project/room_homepage/src/App.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Carousel.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Home.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/About.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/Contact.js",[],"/home/aureen/the_odin_project/room_homepage/src/firebase/firebase.js",[],"/home/aureen/the_odin_project/room_homepage/src/utils/utils.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/HandleShop.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop_handling/AddShopItem.js",["123","124"],"import React, { useState } from 'react';\nimport { useFirestore } from '../../hooks/useFirestore';\nimport { useStorage } from '../../hooks/useStorage';\nimport styled from 'styled-components';\n\nconst Form = styled.form``;\nconst Label = styled.label``;\nconst Field = styled.div`\n  margin: 2rem 0;\n`;\nconst Input = styled.input``;\nconst TextArea = styled.textarea``;\nconst HandleField = styled.button``;\nconst SubmitBtn = styled.button``;\nconst Preview = styled.div`\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 2rem;\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n`;\n\nfunction AddShopItem() {\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [dimensions, setDimensions] = useState({\n    depth: 0,\n    height: 0,\n    width: 0,\n  });\n  const [materials, setMaterials] = useState([''])\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [categories, setCategories] = useState(['']);\n  const [colors, setColors] = useState([\n    {\n      description: '',\n      type: '',\n      value: '#000',\n    },\n  ]);\n  const [additional, setAdditional] = useState([\n    {\n      type: '',\n      information: '',\n    }\n  ]);\n  const [options, setOptions] = useState([{\n    type: '',\n    options: [{ option: '', price: ''}],\n  }])\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { createItem, addItem } = useFirestore();\n  const { uploadItemImage } = useStorage();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const item = await createItem();\n    const itemId = item.id;\n\n    // Upload images in the storage and get their urls.\n    const imagesUrls = [];\n    for (let image of images) {\n      const imageUrl = await uploadItemImage(itemId, image);\n      imagesUrls.push(imageUrl);\n    }\n\n    // Format additional informations and options\n    // If the fields are empty, they are ignored.\n    const formattedAdditional = {};\n    for (let information of additional) {\n      if (information.type !== '' && information.information !== '') {\n        formattedAdditional[information.type] = information.information;\n      }\n    }\n\n    // Remove empty fields\n    const formattedMaterials = [...materials].filter(material => material !== '');\n    const formattedCategories = [...categories].filter(category => category !== '');\n\n    const formattedOptions = {};\n    for (let option of options) {\n      if (option.type !== '' && option.options.option !== '' && option.options.price !== '') {\n        formattedOptions[option.type] = [...option.options];\n      }\n    }\n\n    // Adds the shop item information in the firestore.\n    addItem(\n      itemId,\n      name,\n      price,\n      dimensions,\n      imagesUrls,\n      description,\n      colors,\n      formattedAdditional,\n      formattedOptions,\n      formattedMaterials,\n      formattedCategories,\n    )\n  };\n\n  const addImages = (e) => {\n    e.preventDefault();\n    if (e.target.files.length === 0) return;\n    setImages(e.target.files);\n\n    const preview = [];\n    for (let file of e.target.files) {\n      preview.push(URL.createObjectURL(file));\n    }\n    setImagesPreview(preview);\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Field>\n          <Label>Name</Label>\n          <Input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <Label>Price</Label>\n          <Input\n            type='number'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            required\n          />\n        </Field>\n\n        <Field>\n          <div>Dimensions</div>\n          <Label>Depth</Label>\n          <Input\n            type='number'\n            value={dimensions.depth}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, depth: +e.target.value })\n            }\n          />\n\n          <Label>Height</Label>\n          <Input\n            type='number'\n            value={dimensions.height}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, height: +e.target.value })\n            }\n          />\n\n          <Label>Width</Label>\n          <Input\n            type='text'\n            value={dimensions.width}\n            onChange={(e) =>\n              setDimensions({ ...dimensions, width: +e.target.value })\n            }\n          />\n        </Field>\n\n        <Field>\n          <div>Materials</div>\n\n          {materials.map((material, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={material}\n                  onChange={(e) =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials[index] = e.target.value;\n                      return materials;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setMaterials((prev) => {\n                      const materials = [...prev];\n                      materials.splice(index, 1);\n                      return materials;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setMaterials([...materials, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <Label>Description</Label>\n          <TextArea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />\n        </Field>\n\n        <Field>\n          <div>Colors</div>\n\n          {colors.map((color, index) => {\n            return (\n              <div>\n                <Label>Description</Label>\n                <Input\n                  type='text'\n                  value={color.description}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].description = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={color.type}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].type = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n\n                <Label>Value</Label>\n                <Input\n                  type='color'\n                  value={color.value}\n                  onChange={(e) =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors[index].value = e.target.value;\n                      return colors;\n                    })\n                  }\n                />\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setColors((prev) => {\n                      const colors = [...prev];\n                      colors.splice(index, 1);\n                      return colors;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setColors([...colors, { description: '', type: '', value: '#000' }])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Categories</div>\n\n          {categories.map((category, index) => {\n            return (\n              <div>\n                <Label>{index + 1}</Label>\n                <Input\n                  type='text'\n                  value={category}\n                  onChange={(e) =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories[index] = e.target.value;\n                      return categories;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setCategories((prev) => {\n                      const categories = [...prev];\n                      categories.splice(index, 1);\n                      return categories;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button' onClick={() => setCategories([...categories, ''])}>\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Options</div>\n\n          {options.map((option, indexOption) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={option.type}\n                  onChange={(e) =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options[indexOption].type = e.target.value;\n                      return options;\n                    })\n                  }\n                />\n\n                <Field>\n                  <Label>Options</Label>\n\n                  {option.options.map((choice, indexChoice) => {\n                    return (\n                      <div>\n                        <Label>Option</Label>\n                        <Input\n                          type='text'\n                          value={choice.option}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].option = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                        <Label>Price</Label>\n                        <Input\n                          type='number'\n                          value={choice.price}\n                          onChange={(e) =>\n                            setOptions((prev) => {\n                              const options = [...prev];\n                              options[indexOption].options[indexChoice].price = e.target.value;\n                              return options;\n                            })\n                          }\n                        />\n\n                      <HandleField\n                        type='button'\n                        onClick={() => {\n                          const newOptions = [...options];\n                          newOptions[indexOption].options.splice(indexChoice, 1);\n                          setOptions(newOptions)\n                        }}\n                      >\n                        Remove Choice\n                      </HandleField>\n                      </div>\n                    )\n                  })}\n\n            <HandleField\n              type='button'\n              onClick={() => {\n                const newOptions = [...options];\n                newOptions[indexOption].options = [...options[indexOption].options, { option: '', price : ''}];\n                setOptions(newOptions)\n              }}\n            >\n              Add Choice\n            </HandleField>\n          </Field>\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setOptions((prev) => {\n                      const options = [...prev];\n                      options.splice(indexOption, 1);\n                      return options;\n                    })\n                  }\n                >\n                  Remove Option\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setOptions([...options, { type: '', options: ['']}])\n            }\n          >\n            Add Option\n          </HandleField>\n        </Field>\n\n        <Field>\n          <div>Additional</div>\n\n          {additional.map((add, index) => {\n            return (\n              <div>\n                <Label>Type</Label>\n                <Input\n                  type='text'\n                  value={add.type}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].type = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <Label>Information</Label>\n                <Input\n                  type='text'\n                  value={add.information}\n                  onChange={(e) =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional[index].information = e.target.value;\n                      return additional;\n                    })\n                  }\n                />\n\n                <HandleField\n                  type='button'\n                  onClick={() =>\n                    setAdditional((prev) => {\n                      const additional = [...prev];\n                      additional.splice(index, 1);\n                      return additional;\n                    })\n                  }\n                >\n                  Remove\n                </HandleField>\n              </div>\n            );\n          })}\n\n          <HandleField\n            type='button'\n            onClick={() =>\n              setAdditional([...additional, { type: '', information: ''}])\n            }\n          >\n            Add\n          </HandleField>\n        </Field>\n\n        <Field>\n          <input\n            type='file'\n            id='avatar'\n            name='avatar'\n            multiple\n            onChange={addImages}\n          />\n\n          <Preview>\n          {imagesPreview.map(image => {\n            return (\n              <Image src={image} alt='preview'/>\n            )\n          })}\n        </Preview>\n        </Field>\n\n\n      <SubmitBtn type=\"submit\">Submit</SubmitBtn>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddShopItem;\n","/home/aureen/the_odin_project/room_homepage/src/contexts/AuthContext.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Category.js",["125"],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/Entry.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/ItemDetails.js",["126"],"/home/aureen/the_odin_project/room_homepage/src/hooks/useFirestore.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useSignIn.js",[],"/home/aureen/the_odin_project/room_homepage/src/hooks/useStorage.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/Nav.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/ShopNav.js",["127"],"/home/aureen/the_odin_project/room_homepage/src/components/shop/nav/SideNav.js",["128","129"],"/home/aureen/the_odin_project/room_homepage/src/components/shop/cart/CartItem.js",["130"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { useFirestore } from '../../../hooks/useFirestore';\nimport { Link } from 'react-router-dom';\n\n// Icon\nimport { ReactComponent as Delete } from '../../../assets/icons/icon-x-med.svg';\n\n// Styled Components\nconst colors = {\n  primary: 'hsl(0, 0%, 45%)', // Grey\n  secondary: 'hsl(0, 0%, 15%)', // Dark Grey\n  tertiary: 'hsl(0, 0%, 55%)', // Bright Grey\n  border: 'hsl(0, 0%, 90%)'\n};\n\nconst Item = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  align-items: center;\n  justify-items: center;\n  border-bottom: 1px solid ${colors.border};\n`;\n\nconst Information = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 1.125rem;\n  width: 20rem;\n`;\n\nconst Image = styled.img`\n  width: 10rem;\n  height: 10rem;\n  margin-right: 1rem;\n`;\n\nconst Name = styled.div`\n  text-transform: uppercase;\n`;\n\nconst Price = styled.div`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.secondary};\n`;\n\nconst Type = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.primary};\n`;\n\nconst Option = styled.span`\n  font-size: 0.9rem;\n  color: ${colors.tertiary};\n`;\n\nconst Capitalize = styled.span`\n  text-transform: capitalize;\n`;\n\nconst Quantity = styled.input`\n  font-family: 'Source Sans Pro', sans-serif;\n  width: 2rem;\n  height: 2rem;\n  text-align: center;\n`;\n\nconst Button = styled.button`\n  font-size: 1.25rem;\n  color: ${colors.primary};\n  cursor: pointer;\n\n  &:hover {\n    color: initial;\n  }\n`;\nfunction CartItem({ item }) {\n  const [quantity, setQuantity] = useState(item.quantity);\n  const { currentUser } = useAuth();\n  const { deleteFromCart, updateCartQuantity } = useFirestore();\n\n  useEffect(() => {\n    updateCartQuantity(currentUser.uid, item.id, quantity)\n  }, [quantity])\n\n  return (\n    <Item key={item.id}>\n      <Information>\n        <Image src={item.image} alt='Item preview' />\n        <div>\n          <Name><Link to={`/shop/item/${item.id}`}>{item.name}</Link></Name>\n          <Type>\n            {item.type} - {item.color}\n          </Type>\n          <div>\n            {item.options.map((option) => {\n              return (\n                <Option option={option}>\n                  <Capitalize>{Object.keys(option)[0]}</Capitalize> -{' '}\n                  {Object.values(option)[0]}\n                </Option>\n              );\n            })}\n          </div>\n        </div>\n      </Information>\n      <Price>£{item.price}</Price>\n\n      <div>\n        <Button\n          onClick={() => setQuantity((prev) => (+prev < 2 ? '1' : prev - 1))}\n        >\n          -\n        </Button>\n        <Quantity\n          value={quantity}\n          onChange={(e) => {\n            let quantity = e.target.value.replace(/[^0-9]/g, '');\n            if (+quantity < 1 || !quantity) quantity = '1';\n            setQuantity(quantity);\n          }}\n        />\n        <Button onClick={() => setQuantity((prev) => +prev + 1)}>\n          +\n        </Button>\n      </div>\n      <Price>£{item.price * quantity}</Price>\n      <Button onClick={() => deleteFromCart(currentUser.uid, item.id)}><Delete/></Button>\n    </Item>\n  );\n}\n\nexport default CartItem;\n","/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ShopItemPreview.js",[],"/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImagesPreview.js",["131"],"/home/aureen/the_odin_project/room_homepage/src/components/shop/items/ImageMagnifier.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Cart.js",["132","133"],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Payment.js",[],"/home/aureen/the_odin_project/room_homepage/src/routes/shop/checkout/Personal.js",["134","135","136","137"],"/home/aureen/the_odin_project/room_homepage/src/components/shop/checkout/Order.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":56,"column":10,"nodeType":"145","messageId":"146","endLine":56,"endColumn":17},{"ruleId":"143","severity":1,"message":"147","line":56,"column":19,"nodeType":"145","messageId":"146","endLine":56,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":31,"column":6,"nodeType":"150","endLine":31,"endColumn":13,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":276,"column":6,"nodeType":"150","endLine":276,"endColumn":8,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":108,"column":6,"nodeType":"150","endLine":108,"endColumn":8,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"154","line":153,"column":6,"nodeType":"150","endLine":153,"endColumn":8,"suggestions":"156"},{"ruleId":"148","severity":1,"message":"157","line":157,"column":6,"nodeType":"150","endLine":157,"endColumn":8,"suggestions":"158"},{"ruleId":"148","severity":1,"message":"159","line":86,"column":6,"nodeType":"150","endLine":86,"endColumn":16,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":93,"column":6,"nodeType":"150","endLine":93,"endColumn":8,"suggestions":"162"},{"ruleId":"148","severity":1,"message":"163","line":207,"column":6,"nodeType":"150","endLine":207,"endColumn":8,"suggestions":"164"},{"ruleId":"148","severity":1,"message":"165","line":216,"column":6,"nodeType":"150","endLine":216,"endColumn":8,"suggestions":"166"},{"ruleId":"143","severity":1,"message":"167","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":22},{"ruleId":"143","severity":1,"message":"168","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":17},{"ruleId":"143","severity":1,"message":"169","line":71,"column":9,"nodeType":"145","messageId":"146","endLine":71,"endColumn":26},{"ruleId":"143","severity":1,"message":"170","line":72,"column":9,"nodeType":"145","messageId":"146","endLine":72,"endColumn":19},{"ruleId":"148","severity":1,"message":"163","line":117,"column":6,"nodeType":"150","endLine":117,"endColumn":8,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategoryItems'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has missing dependencies: 'getItem' and 'match.params.itemId'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'getShopCategories'. Either include it or remove the dependency array.",["176"],["177"],"React Hook useEffect has a missing dependency: 'nav'. Either include it or remove the dependency array. If 'setHeight' needs the current value of 'nav', you can also switch to useReducer instead of useState and read 'nav' in the reducer.",["178"],"React Hook useEffect has missing dependencies: 'currentUser.uid', 'item.id', and 'updateCartQuantity'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'images'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'currentUser' and 'getCart'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'cartListener', 'currentUser', and 'getCart'. Either include them or remove the dependency array.",["182"],"'useFirestore' is defined but never used.","'useAuth' is defined but never used.","'isCreatingAccount' is assigned a value but never used.","'hasAccount' is assigned a value but never used.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"197","fix":"201"},"Update the dependencies array to be: [getCategoryItems, match]",{"range":"202","text":"203"},"Update the dependencies array to be: [getItem, match.params.itemId]",{"range":"204","text":"205"},"Update the dependencies array to be: [getShopCategories]",{"range":"206","text":"207"},{"range":"208","text":"207"},"Update the dependencies array to be: [nav]",{"range":"209","text":"210"},"Update the dependencies array to be: [currentUser.uid, item.id, quantity, updateCartQuantity]",{"range":"211","text":"212"},"Update the dependencies array to be: [images]",{"range":"213","text":"214"},"Update the dependencies array to be: [currentUser, getCart]",{"range":"215","text":"216"},"Update the dependencies array to be: [cartListener, currentUser, getCart]",{"range":"217","text":"218"},{"range":"219","text":"216"},[840,847],"[getCategoryItems, match]",[6076,6078],"[getItem, match.params.itemId]",[2433,2435],"[getShopCategories]",[3750,3752],[3822,3824],"[nav]",[1873,1883],"[currentUser.uid, item.id, quantity, updateCartQuantity]",[2472,2474],"[images]",[4106,4108],"[currentUser, getCart]",[4339,4341],"[cartListener, currentUser, getCart]",[2289,2291]]